{"id":"7149830f94274a86eb5e5bd1fcc00428","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableMap.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableMap.js.\n\npragma solidity ^0.8.20;\n\nimport {EnumerableSet} from \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code repetition as possible, we write it in\n    // terms of a generic Map type with bytes32 keys and values. The Map implementation uses private functions,\n    // and user-facing implementations such as `UintToAddressMap` are just wrappers around the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit in bytes32.\n\n    /**\n     * @dev Query for a nonexistent map key.\n     */\n    error EnumerableMapNonexistentKey(bytes32 key);\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 key => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToBytes32Map storage map, bytes32 key, bytes32 value) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        if (value == 0 && !contains(map, key)) {\n            revert EnumerableMapNonexistentKey(key);\n        }\n        return value;\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToBytes32Map storage map) internal view returns (bytes32[] memory) {\n        return map._keys.values();\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToUintMap storage map, uint256 key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToUintMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToAddressMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(AddressToUintMap storage map, address key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(AddressToUintMap storage map) internal view returns (address[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToUintMap storage map, bytes32 key, uint256 value) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToUintMap storage map) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/interfaces/IVerisenseAVSManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.0 <0.9.0;\n\nimport { IDelegationManager } from \"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\";\nimport { ISignatureUtils } from \"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\";\nimport { IAVSDirectory } from \"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\";\nimport { IRewardsCoordinator } from \"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\";\nimport { IEigenPod } from \"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\";\nimport { IEigenPodManager } from \"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\";\n\n/**\n * @title IVerisenseAVSManager\n * @notice Interface for the VerisenseAVSManager contract, which manages operators and validators in the Verisense AVS.\n * @dev This interface defines the main functions and events for operator and validator management.\n */\ninterface IVerisenseAVSManager {\n    /**\n     * @title ValidatorData\n     * @notice Struct to store information about a validator in the Verisense AVS system.\n     * @dev This struct is used to keep track of important validator details.\n     */\n    struct ValidatorData {\n        /// @notice The address of the EigenPod associated with this validator.\n        address eigenPod;\n        /// @notice The beacon chain validator index.\n        uint64 index;\n        /// @notice The address of the operator managing this validator.\n        address operator;\n        /// @notice The block number until which the validator is registered.\n        uint64 registeredUntil;\n    }\n\n    struct OperatorValidData {\n        address operator;\n        uint256 stake;\n        bytes32 substratePubkey;\n        address[] restakedStrategies;\n    }\n\n    /**\n     * @title OperatorData\n     * @notice Struct to store information about an operator in the Verisense AVS system.\n     * @dev This struct is used to keep track of important operator details.\n     */\n    struct OperatorData {\n        /// @notice The block number when the operator started the deregistration process.\n        uint64 startDeregisterOperatorBlock;\n        /// @notice pubkey for substate block\n        bytes32 substrate_pubkey;\n\n        bool isRegistered;\n    }\n\n    /**\n     * @title ValidatorDataExtended\n     * @notice Struct to store comprehensive information about a validator.\n     * @dev This struct combines ValidatorData with additional status information.\n     */\n    struct ValidatorDataExtended {\n        /// @notice The address of the operator this validator is delegated to.\n        address operator;\n        /// @notice The address of the validator's EigenPod.\n        address eigenPod;\n        /// @notice The index of the validator in the beacon chain.\n        uint64 validatorIndex;\n        /// @notice The current status of the validator in the EigenPod.\n        IEigenPod.VALIDATOR_STATUS status;\n        /// @notice The delegate key currently associated with the validator's operator.\n        bytes delegateKey;\n        /// @notice Chain IDs the validator's operator is committed to.\n        uint256[] chainIds;\n        /// @notice Indicates whether the validator's EigenPod is currently delegated to the operator.\n        bool backedByStake;\n        /// @notice Indicates whether the validator is currently registered (current block < registeredUntil).\n        bool registered;\n    }\n\n    /**\n     * @title OperatorDataExtended\n     * @notice Struct to store extended information about an operator in the Verisense AVS system.\n     * @dev This struct combines OperatorData with additional status information.\n     */\n    struct OperatorDataExtended {\n        /// @notice The block number when the operator started the deregistration process.\n        uint128 startDeregisterOperatorBlock;\n        /// @notice Whether the operator is registered or not.\n        bool isRegistered;\n    }\n    // 7 bytes padding here (automatically added by the compiler)\n\n    /// @notice Thrown when an operator attempts to deregister while still having validators\n    error OperatorHasValidators();\n\n    /// @notice Thrown when a non-operator attempts an operator-only action\n    error NotOperator();\n\n    /// @notice Thrown when an EigenPod does not exist for a given address\n    error NoEigenPod();\n\n    /// @notice Thrown when trying to finish deregistering an operator before the delay has elapsed\n    error DeregistrationDelayNotElapsed();\n\n    /// @notice Thrown when attempting to start deregistering an operator that has already started\n    error DeregistrationAlreadyStarted();\n\n    /// @notice Thrown when trying to finish deregistering an operator that hasn't started\n    error DeregistrationNotStarted();\n\n    /// @notice Thrown when an address is not delegated to the expected operator\n    error NotDelegatedToOperator();\n\n    /// @notice Thrown when a validator is not in the active state\n    error ValidatorNotActive();\n\n    /// @notice Thrown when an action requires a registered operator, but the operator is not registered\n    error OperatorNotRegistered();\n\n    /// @notice Thrown when a non-operator attempts to deregister a validator\n    error NotValidatorOperator();\n\n    /// @notice Thrown when attempting to register a validator that is already registered\n    error ValidatorAlreadyRegistered();\n\n    /// @notice Thrown when an operator's delegate key is not set\n    error DelegateKeyNotSet();\n\n    /// @notice Thrown when trying to update an operator commitment before the change delay has passed\n    error CommitmentChangeNotReady();\n\n    /// @notice Thrown when attempting to deregister a validator that is already deregistered\n    error ValidatorAlreadyDeregistered();\n\n    /// @notice Thrown when a restaking strategy allowlist update fails\n    error RestakingStrategyAllowlistUpdateFailed();\n\n    /// @notice Thrown when an AVS operator status call fails\n    error AVSOperatorStatusCallFailed();\n\n    /// @notice Thrown when an invalid EigenPodManager address is provided\n    error InvalidEigenPodManagerAddress();\n\n    /// @notice Thrown when an invalid EigenDelegationManager address is provided\n    error InvalidEigenDelegationManagerAddress();\n\n    /// @notice Thrown when an invalid AVSDirectory address is provided\n    error InvalidAVSDirectoryAddress();\n\n    /// @notice Thrown when an invalid RewardsCoordinator address is provided\n    error InvalidRewardsCoordinatorAddress();\n\n    /**\n     * @notice Emitted when a new operator is registered in the Verisense AVS.\n     * @param operator The address of the registered operator.\n     */\n    event OperatorRegistered(address indexed operator);\n\n    /**\n     * @notice Emitted when a new validator is registered in the Verisense AVS .\n     * @param podOwner The address of the validator's EigenPod owner.\n     * @param delegateKey The delegate public key for the validator.\n     * @param blsPubKeyHash The BLS public key hash of the validator.\n     * @param validatorIndex The beacon chain validator index.\n     */\n    event ValidatorRegistered(\n        address indexed podOwner,\n        address indexed operator,\n        bytes delegateKey,\n        bytes32 blsPubKeyHash,\n        uint256 validatorIndex\n    );\n\n    /**\n     * @notice Emitted when an operator starts the deregistration process.\n     * @param operator The address of the operator starting deregistration.\n     */\n    event OperatorDeregisterStarted(address indexed operator);\n\n    /**\n     * @notice Emitted when an operator is deregistered from the Verisense AVS.\n     * @param operator The address of the deregistered operator.\n     */\n    event OperatorDeregistered(address indexed operator);\n\n    /**\n     * @notice Emitted when a validator is deregistered from the Verisense AVS.\n     * @param operator The address of the operator managing the validator.\n     * @param blsPubKeyHash The BLS public key hash of the deregistered validator.\n     */\n    event ValidatorDeregistered(address indexed operator, bytes32 blsPubKeyHash);\n\n\n    /**\n     * @notice Emitted when the deregistration delay is updated.\n     * @param oldDelay The previous deregistration delay value.\n     * @param newDelay The new deregistration delay value.\n     */\n    event DeregistrationDelaySet(uint64 oldDelay, uint64 newDelay);\n\n    /**\n     * @notice Emitted when a restaking strategy is added or removed from the allowlist.\n     * @param strategy The address of the strategy.\n     * @param allowed Whether the strategy is allowed (true) or disallowed (false).\n     */\n    event RestakingStrategyAllowlistUpdated(address indexed strategy, bool allowed);\n\n    /**\n     * @notice Emitted when operator rewards are submitted.\n     */\n    event OperatorRewardsSubmitted();\n\n    /**\n     * @notice Returns the EigenPodManager contract.\n     * @return IEigenPodManager The EigenPodManager contract.\n     */\n    function EIGEN_POD_MANAGER() external view returns (IEigenPodManager);\n\n    /**\n     * @notice Returns the EigenDelegationManager contract.\n     * @return IDelegationManager The EigenDelegationManager contract.\n     */\n    function EIGEN_DELEGATION_MANAGER() external view returns (IDelegationManager);\n\n    /**\n     * @notice Returns the AVSDirectory contract.\n     * @return IAVSDirectory The AVSDirectory contract.\n     */\n    function AVS_DIRECTORY() external view returns (IAVSDirectory);\n\n    /**\n     * @notice Registers a new operator in the Verisense AVS.\n     * @param operatorSignature The signature and associated data for operator registration.\n     */\n    function registerOperator(ISignatureUtils.SignatureWithSaltAndExpiry memory operatorSignature, bytes32 substrate_pubkey) external;\n\n    /**\n     * @notice Starts the process of deregistering an operator from the Verisense AVS.\n     */\n    function startDeregisterOperator() external;\n\n    /**\n     * @notice Finishes the process of deregistering an operator from the Verisense AVS.\n     */\n    function finishDeregisterOperator() external;\n\n    /**\n     * @notice Updates the metadata URI for the AVS\n     * @param _metadataURI is the metadata URI for the AVS\n     */\n    function updateAVSMetadataURI(string memory _metadataURI) external;\n\n    /**\n     * @notice Sets a new deregistration delay for operators.\n     * @param newDelay The new deregistration delay in seconds.\n     * @dev Restricted to the DAO\n     */\n    function setDeregistrationDelay(uint64 newDelay) external;\n\n    /**\n     * @notice Add or remove a strategy address from the allowlist of restaking strategies\n     * @param strategy The address of the strategy to add or remove\n     * @param allowed Whether the strategy should be allowed (true) or disallowed (false)\n     * @dev Restricted to the DAO\n     */\n    function setAllowlistRestakingStrategy(address strategy, bool allowed) external;\n\n    /**\n     * @notice Retrieves information about a specific operator.\n     * @param operator The address of the operator.\n     * @return OperatorDataExtended struct containing information about the operator.\n     */\n    function getOperator(address operator) external view returns (OperatorDataExtended memory);\n\n    /**\n     * @notice Retrieves the current deregistration delay for operators.\n     * @return The current deregistration delay in seconds.\n     */\n    function getDeregistrationDelay() external view returns (uint64);\n\n    /**\n     * @notice Returns the list of strategies that the operator has potentially restaked on the AVS\n     * @param operator The address of the operator to get restaked strategies for\n     * @dev This function is intended to be called off-chain\n     * @dev No guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness\n     *      of each element in the returned array. The off-chain service should do that validation separately\n     */\n    function getOperatorRestakedStrategies(address operator) external view returns (address[] memory);\n\n    /**\n     * @notice Returns the list of strategies that the AVS supports for restaking\n     * @dev This function is intended to be called off-chain\n     * @dev No guarantee is made on uniqueness of each element in the returned array.\n     *      The off-chain service should do that validation separately\n     */\n    function getRestakeableStrategies() external view returns (address[] memory);\n\n    /**\n     * @notice Submits EigenLayer rewards for operators.\n     * @param eraIndex The era index of submissions.\n     * @param submissions The array of rewards submissions.\n     */\n    function submitOperatorRewards(uint256 eraIndex, IRewardsCoordinator.OperatorDirectedRewardsSubmission[] calldata submissions)\n        external;\n\n    function latestRewardedEra() external view returns (uint256);\n\n    /**\n     * @notice Sets the claimer for the AVS to get excess rewards back.\n     * @param claimer The address of the claimer.\n     */\n    function setClaimerFor(address claimer) external;\n}\n"},"contracts/VerisenseAVSManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.0 <0.9.0;\n\nimport { UUPSUpgradeable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\nimport { EnumerableSet } from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport { EnumerableMap } from \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\nimport { ISignatureUtils } from \"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\";\nimport { IStrategy } from \"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\";\nimport { IAVSDirectory } from \"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\";\nimport { IDelegationManager } from \"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\";\nimport { IEigenPodManager } from \"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\";\nimport { IEigenPod } from \"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\";\nimport {IVerisenseAVSManager} from \"./interfaces/IVerisenseAVSManager.sol\";\nimport {VerisenseAVSManagerStorage} from \"./VerisenseAVSManagerStorage.sol\";\nimport { IRewardsCoordinator } from \"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract VerisenseAVSManager is VerisenseAVSManagerStorage, UUPSUpgradeable, OwnableUpgradeable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.UintSet;\n    using SafeERC20 for IERC20;\n    IEigenPodManager public EIGEN_POD_MANAGER;\n\n    IDelegationManager public EIGEN_DELEGATION_MANAGER;\n\n    IRewardsCoordinator public EIGEN_REWARDS_COORDINATOR;\n\n    IAVSDirectory public AVS_DIRECTORY;\n\n    function _getAvsOperatorStatus(address operator)\n        internal\n        view\n        returns (IAVSDirectory.OperatorAVSRegistrationStatus)\n    {\n        (bool success, bytes memory data) = address(AVS_DIRECTORY).staticcall(\n            abi.encodeWithSelector(bytes4(keccak256(\"avsOperatorStatus(address,address)\")), address(this), operator)\n        );\n        if (!success) {\n            revert AVSOperatorStatusCallFailed();\n        }\n        return abi.decode(data, (IAVSDirectory.OperatorAVSRegistrationStatus));\n    }\n\n    modifier registeredOperator(address operator) {\n        if (_getAvsOperatorStatus(operator) == IAVSDirectory.OperatorAVSRegistrationStatus.UNREGISTERED) {\n            revert OperatorNotRegistered();\n        }\n        _;\n    }\n\n    function initialize(\n        address eigenPodManagerAddress,\n        address eigenDelegationManagerAddress,\n        address avsDirectoryAddress,\n        address rewardsCoordinatorAddress,\n        uint64 initialDeregistrationDelay) public initializer {\n        if (eigenPodManagerAddress == address(0)) {\n            revert InvalidEigenPodManagerAddress();\n        }\n        if (eigenDelegationManagerAddress == address(0)) {\n            revert InvalidEigenDelegationManagerAddress();\n        }\n        if (avsDirectoryAddress == address(0)) {\n            revert InvalidAVSDirectoryAddress();\n        }\n        if (rewardsCoordinatorAddress == address(0)) {\n            revert InvalidRewardsCoordinatorAddress();\n        }\n        EIGEN_POD_MANAGER = IEigenPodManager(eigenPodManagerAddress);\n        EIGEN_DELEGATION_MANAGER = IDelegationManager(eigenDelegationManagerAddress);\n        AVS_DIRECTORY = IAVSDirectory(avsDirectoryAddress);\n        EIGEN_REWARDS_COORDINATOR = IRewardsCoordinator(rewardsCoordinatorAddress);\n        _setDeregistrationDelay(initialDeregistrationDelay);\n        __Ownable_init(msg.sender);\n        __UUPSUpgradeable_init();\n    }\n\n    function registerOperator(ISignatureUtils.SignatureWithSaltAndExpiry calldata operatorSignature, bytes32 substrate_pubkey)\n        external\n    {\n        AVS_DIRECTORY.registerOperatorToAVS(msg.sender, operatorSignature);\n        _getVerisenseAVSManagerStorage().operators[msg.sender].substrate_pubkey = substrate_pubkey;\n        _getVerisenseAVSManagerStorage().operatorAddresses.add(msg.sender);\n        emit OperatorRegistered(msg.sender);\n    }\n\n    function startDeregisterOperator() external registeredOperator(msg.sender) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n\n        OperatorData storage operator = $.operators[msg.sender];\n\n        if (operator.startDeregisterOperatorBlock != 0) {\n            revert DeregistrationAlreadyStarted();\n        }\n\n        operator.startDeregisterOperatorBlock = uint64(block.number);\n\n        emit OperatorDeregisterStarted(msg.sender);\n    }\n\n    function finishDeregisterOperator() external registeredOperator(msg.sender) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n\n        OperatorData storage operator = $.operators[msg.sender];\n\n        if (operator.startDeregisterOperatorBlock == 0) {\n            revert DeregistrationNotStarted();\n        }\n\n        if (block.number < operator.startDeregisterOperatorBlock + $.deregistrationDelay) {\n            revert DeregistrationDelayNotElapsed();\n        }\n\n        AVS_DIRECTORY.deregisterOperatorFromAVS(msg.sender);\n\n        delete $.operators[msg.sender];\n        $.operatorAddresses.remove(msg.sender);\n\n        emit OperatorDeregistered(msg.sender);\n    }\n\n    function setDeregistrationDelay(uint64 newDelay) external onlyOwner {\n        _setDeregistrationDelay(newDelay);\n    }\n\n    function updateAVSMetadataURI(string memory _metadataURI) external onlyOwner {\n        AVS_DIRECTORY.updateAVSMetadataURI(_metadataURI);\n    }\n\n    function setAllowlistRestakingStrategy(address strategy, bool allowed) external onlyOwner {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        bool success;\n        if (allowed) {\n            success = $.allowlistedRestakingStrategies.add(strategy);\n        } else {\n            success = $.allowlistedRestakingStrategies.remove(strategy);\n        }\n        if (success) {\n            emit RestakingStrategyAllowlistUpdated(strategy, allowed);\n        } else {\n            revert RestakingStrategyAllowlistUpdateFailed();\n        }\n    }\n\n    function _updateLatestRewardedEra(uint256 eraIndex) internal {\n        require(eraIndex > 0, \"reward era must more than 0\");\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        if ($.latestRewardedEra == 0) {\n            $.latestRewardedEra = eraIndex;\n        } else {\n            require(eraIndex == $.latestRewardedEra + 1, \"latest rewarded era must be in a row\");\n            $.latestRewardedEra = eraIndex;\n        }\n    }\n\n    function latestRewardedEra() external view returns (uint256) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        return $.latestRewardedEra;\n    }\n\n    function submitOperatorRewards(uint256 eraIndex, IRewardsCoordinator.OperatorDirectedRewardsSubmission[] calldata submissions)\n        external\n        onlyOwner\n    {\n        _updateLatestRewardedEra(eraIndex);\n        uint256 submissionsLength = submissions.length;\n        for (uint256 i = 0; i < submissionsLength; i++) {\n            IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata submission = submissions[i];\n            uint256 totalRewards = 0;\n            uint256 rewardsLength = submission.operatorRewards.length;\n            for (uint256 j = 0; j < rewardsLength; j++) {\n                totalRewards += submission.operatorRewards[j].amount;\n            }\n            IERC20(address(submission.token)).safeIncreaseAllowance(address(EIGEN_REWARDS_COORDINATOR), totalRewards);\n        }\n        EIGEN_REWARDS_COORDINATOR.createOperatorDirectedAVSRewardsSubmission(address(this), submissions);\n        emit OperatorRewardsSubmitted();\n    }\n\n    function setClaimerFor(address claimer) external onlyOwner {\n        EIGEN_REWARDS_COORDINATOR.setClaimerFor(claimer);\n    }\n\n    function getDeregistrationDelay() external view returns (uint64) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        return $.deregistrationDelay;\n    }\n\n    function getOperator(address operator) external view returns (OperatorDataExtended memory) {\n        return _getOperator(operator);\n    }\n\n    function _getOperatorRestakedStrategies(address operator) internal view\n                    returns (address[] memory restakedStrategies) {\n        OperatorDataExtended memory operatorData = _getOperator(operator);\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n\n        if (operatorData.isRegistered) {\n            uint256 allowlistedCount = $.allowlistedRestakingStrategies.length();\n            IStrategy[] memory strategies = new IStrategy[](allowlistedCount);\n            for (uint256 i = 0; i < allowlistedCount; i++) {\n                strategies[i] = IStrategy($.allowlistedRestakingStrategies.at(i));\n            }\n\n            uint256[] memory shares = EIGEN_DELEGATION_MANAGER.getOperatorShares(operator, strategies);\n\n            uint256 restakedCount = 0;\n            restakedStrategies = new address[](allowlistedCount);\n\n            for (uint256 i = 0; i < allowlistedCount; i++) {\n                if (shares[i] > 0) {\n                    restakedStrategies[restakedCount++] = address(strategies[i]);\n                }\n            }\n\n            // Resize the array to the actual number of restaked strategies\n            assembly {\n                if lt(restakedCount, allowlistedCount) { mstore(restakedStrategies, restakedCount) }\n            }\n        }\n    }\n\n    function getOperators() external view returns (OperatorValidData[] memory operatorList) {\n        uint256 operators_size = _getVerisenseAVSManagerStorage().operatorAddresses.length();\n        operatorList = new OperatorValidData[](operators_size);\n        IStrategy[] memory strategies = _getStrategies();\n        uint256 registeredCount = 0;\n        for (uint256 i; i < operators_size; i++) {\n            address key = _getVerisenseAVSManagerStorage().operatorAddresses.at(i);\n            if (_getAvsOperatorStatus(key) == IAVSDirectory.OperatorAVSRegistrationStatus.REGISTERED) {\n                OperatorData memory d = _getVerisenseAVSManagerStorage().operators[key];\n                OperatorValidData memory dv = OperatorValidData({\n                    substratePubkey : d.substrate_pubkey,\n                    operator : key,\n                    stake : _getOperatorStake(key, strategies),\n                    restakedStrategies : sortAddresses(_getOperatorRestakedStrategies(key))\n                });\n                operatorList[registeredCount] = dv;\n            }\n        }\n        assembly {\n            if lt(registeredCount, operators_size) { mstore(operatorList, registeredCount) }\n        }\n    }\n\n    function getOperatorRestakedStrategies(address operator)\n        external\n        view\n        returns (address[] memory restakedStrategies)\n    {\n       return _getOperatorRestakedStrategies(operator);\n    }\n\n    function _getOperatorStake(address operator, IStrategy[] memory strategies) internal view returns (uint256) {\n        uint256[] memory shares = EIGEN_DELEGATION_MANAGER.getOperatorShares(operator, strategies);\n        uint256 total_shares = 0;\n        for (uint256 i = 0; i < shares.length; i++) {\n            total_shares += shares[i];\n        }\n        return total_shares;\n    }\n\n    function _getStrategies() internal view returns (IStrategy[] memory) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        uint256 allowlistedCount = $.allowlistedRestakingStrategies.length();\n        IStrategy[] memory strategies = new IStrategy[](allowlistedCount);\n        for (uint256 i = 0; i < allowlistedCount; i++) {\n            strategies[i] = IStrategy($.allowlistedRestakingStrategies.at(i));\n        }\n        return strategies;\n    }\n\n    function getRestakeableStrategies() external view returns (address[] memory) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        return $.allowlistedRestakingStrategies.values();\n    }\n\n    function _getOperator(address operator) internal view returns (OperatorDataExtended memory) {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        OperatorData storage operatorData = $.operators[operator];\n        return OperatorDataExtended({\n            startDeregisterOperatorBlock: operatorData.startDeregisterOperatorBlock,\n            isRegistered: _getAvsOperatorStatus(operator) == IAVSDirectory.OperatorAVSRegistrationStatus.REGISTERED\n        });\n    }\n\n    function _setDeregistrationDelay(uint64 newDelay) internal {\n        VerisenseAVSStorage storage $ = _getVerisenseAVSManagerStorage();\n        uint64 oldDelay = $.deregistrationDelay;\n        $.deregistrationDelay = newDelay;\n        emit DeregistrationDelaySet(oldDelay, newDelay);\n    }\n\n    function sortAddresses(address[] memory arr) internal pure returns (address[] memory) {\n        if (arr.length == 0) {\n            return arr;\n        }\n        address[] memory sortedArr = new address[](arr.length);\n        for (uint i = 0; i < arr.length; i++) {\n            sortedArr[i] = arr[i];\n        }\n        for (uint i = 0; i < sortedArr.length - 1; i++) {\n            for (uint j = 0; j < sortedArr.length - i - 1; j++) {\n                if (uint160(sortedArr[j]) > uint160(sortedArr[j + 1])) {\n                    (sortedArr[j], sortedArr[j + 1]) = (sortedArr[j + 1], sortedArr[j]);\n                }\n            }\n        }\n        return sortedArr;\n    }\n\n    function calculateOperatorAVSRegistrationDigestHash(\n        address operator,\n        address avs,\n        bytes32 salt,\n        uint256 expiry\n    ) public view returns (bytes32) {\n        bytes32 OPERATOR_AVS_REGISTRATION_TYPEHASH =\n        keccak256(\"OperatorAVSRegistration(address operator,address avs,bytes32 salt,uint256 expiry)\");\n        // calculate the struct hash\n        bytes32 sep = AVS_DIRECTORY.domainSeparator();\n        bytes32 structHash = keccak256(abi.encode(OPERATOR_AVS_REGISTRATION_TYPEHASH, operator, avs, salt, expiry));\n        // calculate the digest hash\n        bytes32 digestHash = keccak256(abi.encodePacked(\"\\x19\\x01\", sep, structHash));\n        return digestHash;\n    }\n\n    function ecdsa_check(bytes32 message_hash, bytes memory signature ) public pure returns (address) {\n        return ECDSA.recover(message_hash, signature);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal virtual override onlyOwner { }\n}\n"},"contracts/VerisenseAVSManagerStorage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.0 <0.9.0;\n\nimport { EnumerableSet } from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {IVerisenseAVSManager} from \"./interfaces/IVerisenseAVSManager.sol\";\n/**\n * @title VerisenseAVSManagerStorage\n * @author Puffer Finance\n * @custom:security-contact security@puffer.fi\n */\n\nabstract contract VerisenseAVSManagerStorage is IVerisenseAVSManager {\n    struct VerisenseAVSStorage {\n        mapping(address operator => OperatorData operatorData) operators;\n        EnumerableSet.AddressSet operatorAddresses;\n        uint64 deregistrationDelay;\n        uint256 stakeFloor;\n        uint256 latestRewardedEra;\n        EnumerableSet.AddressSet allowlistedRestakingStrategies;\n    }\n    bytes32 private constant _STORAGE_LOCATION = 0xaf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f00;\n\n    function _getVerisenseAVSManagerStorage() internal pure returns (VerisenseAVSStorage storage $) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            $.slot := _STORAGE_LOCATION\n        }\n    }\n\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"./ISignatureUtils.sol\";\n\ninterface IAVSDirectory is ISignatureUtils {\n    /// @notice Enum representing the status of an operator's registration with an AVS\n    enum OperatorAVSRegistrationStatus {\n        UNREGISTERED, // Operator not registered to AVS\n        REGISTERED // Operator registered to AVS\n\n    }\n\n    /**\n     * @notice Emitted when @param avs indicates that they are updating their MetadataURI string\n     * @dev Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\n     */\n    event AVSMetadataURIUpdated(address indexed avs, string metadataURI);\n\n    /// @notice Emitted when an operator's registration status for an AVS is updated\n    event OperatorAVSRegistrationStatusUpdated(\n        address indexed operator, address indexed avs, OperatorAVSRegistrationStatus status\n    );\n\n    /**\n     * @notice Called by the AVS's service manager contract to register an operator with the avs.\n     * @param operator The address of the operator to register.\n     * @param operatorSignature The signature, salt, and expiry of the operator's signature.\n     */\n    function registerOperatorToAVS(\n        address operator,\n        ISignatureUtils.SignatureWithSaltAndExpiry memory operatorSignature\n    ) external;\n\n    /**\n     * @notice Called by an avs to deregister an operator with the avs.\n     * @param operator The address of the operator to deregister.\n     */\n    function deregisterOperatorFromAVS(address operator) external;\n\n    /**\n     * @notice Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\n     * @param metadataURI The URI for metadata associated with an AVS\n     * @dev Note that the `metadataURI` is *never stored * and is only emitted in the `AVSMetadataURIUpdated` event\n     */\n    function updateAVSMetadataURI(string calldata metadataURI) external;\n\n    /**\n     * @notice Returns whether or not the salt has already been used by the operator.\n     * @dev Salts is used in the `registerOperatorToAVS` function.\n     */\n    function operatorSaltIsSpent(address operator, bytes32 salt) external view returns (bool);\n\n    /**\n     * @notice Calculates the digest hash to be signed by an operator to register with an AVS\n     * @param operator The account registering as an operator\n     * @param avs The address of the service manager contract for the AVS that the operator is registering to\n     * @param salt A unique and single use value associated with the approver signature.\n     * @param expiry Time after which the approver's signature becomes invalid\n     */\n    function calculateOperatorAVSRegistrationDigestHash(\n        address operator,\n        address avs,\n        bytes32 salt,\n        uint256 expiry\n    ) external view returns (bytes32);\n\n    /// @notice The EIP-712 typehash for the Registration struct used by the contract\n    function OPERATOR_AVS_REGISTRATION_TYPEHASH() external view returns (bytes32);\n\n    /**\n     * @notice Called by an operator to cancel a salt that has been used to register with an AVS.\n     * @param salt A unique and single use value associated with the approver signature.\n     */\n    function cancelSalt(bytes32 salt) external;\n\n    /**\n     * @notice Getter function for the current EIP-712 domain separator for this contract.\n     *\n     * @dev The domain separator will change in the event of a fork that changes the ChainID.\n     * @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n     * for more detailed information please read EIP-712.\n     */\n    function domainSeparator() external view returns (bytes32);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"./IStrategy.sol\";\nimport \"./ISignatureUtils.sol\";\n\n/**\n * @title DelegationManager\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @notice  This is the contract for delegation in EigenLayer. The main functionalities of this contract are\n * - enabling anyone to register as an operator in EigenLayer\n * - allowing operators to specify parameters related to stakers who delegate to them\n * - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time)\n * - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\n */\ninterface IDelegationManager is ISignatureUtils {\n    // @notice Struct used for storing information about a single operator who has registered with EigenLayer\n    struct OperatorDetails {\n        /// @notice DEPRECATED -- this field is no longer used, payments are handled in PaymentCoordinator.sol\n        address __deprecated_earningsReceiver;\n        /**\n         * @notice Address to verify signatures when a staker wishes to delegate to the operator, as well as controlling \"forced undelegations\".\n         * @dev Signature verification follows these rules:\n         * 1) If this address is left as address(0), then any staker will be free to delegate to the operator, i.e. no signature verification will be performed.\n         * 2) If this address is an EOA (i.e. it has no code), then we follow standard ECDSA signature verification for delegations to the operator.\n         * 3) If this address is a contract (i.e. it has code) then we forward a call to the contract and verify that it returns the correct EIP-1271 \"magic value\".\n         */\n        address delegationApprover;\n        /**\n         * @notice A minimum delay -- measured in blocks -- enforced between:\n         * 1) the operator signalling their intent to register for a service, via calling `Slasher.optIntoSlashing`\n         * and\n         * 2) the operator completing registration for the service, via the service ultimately calling `Slasher.recordFirstStakeUpdate`\n         * @dev note that for a specific operator, this value *cannot decrease*, i.e. if the operator wishes to modify their OperatorDetails,\n         * then they are only allowed to either increase this value or keep it the same.\n         */\n        uint32 stakerOptOutWindowBlocks;\n    }\n\n    /**\n     * @notice Abstract struct used in calculating an EIP712 signature for a staker to approve that they (the staker themselves) delegate to a specific operator.\n     * @dev Used in computing the `STAKER_DELEGATION_TYPEHASH` and as a reference in the computation of the stakerDigestHash in the `delegateToBySignature` function.\n     */\n    struct StakerDelegation {\n        // the staker who is delegating\n        address staker;\n        // the operator being delegated to\n        address operator;\n        // the staker's nonce\n        uint256 nonce;\n        // the expiration timestamp (UTC) of the signature\n        uint256 expiry;\n    }\n\n    /**\n     * @notice Abstract struct used in calculating an EIP712 signature for an operator's delegationApprover to approve that a specific staker delegate to the operator.\n     * @dev Used in computing the `DELEGATION_APPROVAL_TYPEHASH` and as a reference in the computation of the approverDigestHash in the `_delegate` function.\n     */\n    struct DelegationApproval {\n        // the staker who is delegating\n        address staker;\n        // the operator being delegated to\n        address operator;\n        // the operator's provided salt\n        bytes32 salt;\n        // the expiration timestamp (UTC) of the signature\n        uint256 expiry;\n    }\n\n    /**\n     * Struct type used to specify an existing queued withdrawal. Rather than storing the entire struct, only a hash is stored.\n     * In functions that operate on existing queued withdrawals -- e.g. completeQueuedWithdrawal`, the data is resubmitted and the hash of the submitted\n     * data is computed by `calculateWithdrawalRoot` and checked against the stored hash in order to confirm the integrity of the submitted data.\n     */\n    struct Withdrawal {\n        // The address that originated the Withdrawal\n        address staker;\n        // The address that the staker was delegated to at the time that the Withdrawal was created\n        address delegatedTo;\n        // The address that can complete the Withdrawal + will receive funds when completing the withdrawal\n        address withdrawer;\n        // Nonce used to guarantee that otherwise identical withdrawals have unique hashes\n        uint256 nonce;\n        // Block number when the Withdrawal was created\n        uint32 startBlock;\n        // Array of strategies that the Withdrawal contains\n        IStrategy[] strategies;\n        // Array containing the amount of shares in each Strategy in the `strategies` array\n        uint256[] shares;\n    }\n\n    struct QueuedWithdrawalParams {\n        // Array of strategies that the QueuedWithdrawal contains\n        IStrategy[] strategies;\n        // Array containing the amount of shares in each Strategy in the `strategies` array\n        uint256[] shares;\n        // The address of the withdrawer\n        address withdrawer;\n    }\n\n    // @notice Emitted when a new operator registers in EigenLayer and provides their OperatorDetails.\n    event OperatorRegistered(address indexed operator, OperatorDetails operatorDetails);\n\n    /// @notice Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\n    event OperatorDetailsModified(address indexed operator, OperatorDetails newOperatorDetails);\n\n    /**\n     * @notice Emitted when @param operator indicates that they are updating their MetadataURI string\n     * @dev Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\n     */\n    event OperatorMetadataURIUpdated(address indexed operator, string metadataURI);\n\n    /// @notice Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\n    event OperatorSharesIncreased(address indexed operator, address staker, IStrategy strategy, uint256 shares);\n\n    /// @notice Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\n    event OperatorSharesDecreased(address indexed operator, address staker, IStrategy strategy, uint256 shares);\n\n    /// @notice Emitted when @param staker delegates to @param operator.\n    event StakerDelegated(address indexed staker, address indexed operator);\n\n    /// @notice Emitted when @param staker undelegates from @param operator.\n    event StakerUndelegated(address indexed staker, address indexed operator);\n\n    /// @notice Emitted when @param staker is undelegated via a call not originating from the staker themself\n    event StakerForceUndelegated(address indexed staker, address indexed operator);\n\n    /**\n     * @notice Emitted when a new withdrawal is queued.\n     * @param withdrawalRoot Is the hash of the `withdrawal`.\n     * @param withdrawal Is the withdrawal itself.\n     */\n    event WithdrawalQueued(bytes32 withdrawalRoot, Withdrawal withdrawal);\n\n    /// @notice Emitted when a queued withdrawal is completed\n    event WithdrawalCompleted(bytes32 withdrawalRoot);\n\n    /// @notice Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\n    event MinWithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue);\n\n    /// @notice Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\n    event StrategyWithdrawalDelayBlocksSet(IStrategy strategy, uint256 previousValue, uint256 newValue);\n\n    /**\n     * @notice Registers the caller as an operator in EigenLayer.\n     * @param registeringOperatorDetails is the `OperatorDetails` for the operator.\n     * @param metadataURI is a URI for the operator's metadata, i.e. a link providing more details on the operator.\n     *\n     * @dev Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".\n     * @dev This function will revert if the caller is already delegated to an operator.\n     * @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\n     */\n    function registerAsOperator(\n        OperatorDetails calldata registeringOperatorDetails,\n        string calldata metadataURI\n    ) external;\n\n    /**\n     * @notice Updates an operator's stored `OperatorDetails`.\n     * @param newOperatorDetails is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\n     *\n     * @dev The caller must have previously registered as an operator in EigenLayer.\n     */\n    function modifyOperatorDetails(OperatorDetails calldata newOperatorDetails) external;\n\n    /**\n     * @notice Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\n     * @param metadataURI The URI for metadata associated with an operator\n     * @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\n     */\n    function updateOperatorMetadataURI(string calldata metadataURI) external;\n\n    /**\n     * @notice Caller delegates their stake to an operator.\n     * @param operator The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\n     * @param approverSignatureAndExpiry Verifies the operator approves of this delegation\n     * @param approverSalt A unique single use value tied to an individual signature.\n     * @dev The approverSignatureAndExpiry is used in the event that:\n     *          1) the operator's `delegationApprover` address is set to a non-zero value.\n     *                  AND\n     *          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator\n     *             or their delegationApprover is the `msg.sender`, then approval is assumed.\n     * @dev In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n     * in this case to save on complexity + gas costs\n     */\n    function delegateTo(\n        address operator,\n        SignatureWithExpiry memory approverSignatureAndExpiry,\n        bytes32 approverSalt\n    ) external;\n\n    /**\n     * @notice Caller delegates a staker's stake to an operator with valid signatures from both parties.\n     * @param staker The account delegating stake to an `operator` account\n     * @param operator The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\n     * @param stakerSignatureAndExpiry Signed data from the staker authorizing delegating stake to an operator\n     * @param approverSignatureAndExpiry is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\n     * @param approverSalt Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\n     *\n     * @dev If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.\n     * @dev If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.\n     * @dev the operator's `delegationApprover` address is set to a non-zero value.\n     * @dev neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover\n     * is the `msg.sender`, then approval is assumed.\n     * @dev This function will revert if the current `block.timestamp` is equal to or exceeds the expiry\n     * @dev In the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n     * in this case to save on complexity + gas costs\n     */\n    function delegateToBySignature(\n        address staker,\n        address operator,\n        SignatureWithExpiry memory stakerSignatureAndExpiry,\n        SignatureWithExpiry memory approverSignatureAndExpiry,\n        bytes32 approverSalt\n    ) external;\n\n    /**\n     * @notice Undelegates the staker from the operator who they are delegated to. Puts the staker into the \"undelegation limbo\" mode of the EigenPodManager\n     * and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary.\n     * @param staker The account to be undelegated.\n     * @return withdrawalRoot The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0).\n     *\n     * @dev Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.\n     * @dev Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"\n     * @dev Reverts if the `staker` is already undelegated.\n     */\n    function undelegate(address staker) external returns (bytes32[] memory withdrawalRoot);\n\n    /**\n     * Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed\n     * from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from\n     * their operator.\n     *\n     * All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\n     */\n    function queueWithdrawals(QueuedWithdrawalParams[] calldata queuedWithdrawalParams)\n        external\n        returns (bytes32[] memory);\n\n    /**\n     * @notice Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\n     * @param withdrawal The Withdrawal to complete.\n     * @param tokens Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array.\n     * This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\n     * @param middlewareTimesIndex is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\n     * @param receiveAsTokens If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves\n     * and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies\n     * will simply be transferred to the caller directly.\n     * @dev middlewareTimesIndex is unused, but will be used in the Slasher eventually\n     * @dev beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that\n     * any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in\n     * any other strategies, which will be transferred to the withdrawer.\n     */\n    function completeQueuedWithdrawal(\n        Withdrawal calldata withdrawal,\n        IERC20[] calldata tokens,\n        uint256 middlewareTimesIndex,\n        bool receiveAsTokens\n    ) external;\n\n    /**\n     * @notice Array-ified version of `completeQueuedWithdrawal`.\n     * Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\n     * @param withdrawals The Withdrawals to complete.\n     * @param tokens Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\n     * @param middlewareTimesIndexes One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\n     * @param receiveAsTokens Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\n     * @dev See `completeQueuedWithdrawal` for relevant dev tags\n     */\n    function completeQueuedWithdrawals(\n        Withdrawal[] calldata withdrawals,\n        IERC20[][] calldata tokens,\n        uint256[] calldata middlewareTimesIndexes,\n        bool[] calldata receiveAsTokens\n    ) external;\n\n    /**\n     * @notice Increases a staker's delegated share balance in a strategy.\n     * @param staker The address to increase the delegated shares for their operator.\n     * @param strategy The strategy in which to increase the delegated shares.\n     * @param shares The number of shares to increase.\n     *\n     * @dev *If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n     * @dev Callable only by the StrategyManager or EigenPodManager.\n     */\n    function increaseDelegatedShares(address staker, IStrategy strategy, uint256 shares) external;\n\n    /**\n     * @notice Decreases a staker's delegated share balance in a strategy.\n     * @param staker The address to increase the delegated shares for their operator.\n     * @param strategy The strategy in which to decrease the delegated shares.\n     * @param shares The number of shares to decrease.\n     *\n     * @dev *If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n     * @dev Callable only by the StrategyManager or EigenPodManager.\n     */\n    function decreaseDelegatedShares(address staker, IStrategy strategy, uint256 shares) external;\n\n    /**\n     * @notice Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\n     * @param newMinWithdrawalDelayBlocks new value of `minWithdrawalDelayBlocks`.\n     */\n    function setMinWithdrawalDelayBlocks(uint256 newMinWithdrawalDelayBlocks) external; \n\n    /**\n     * @notice Called by owner to set the minimum withdrawal delay blocks for each passed in strategy\n     * Note that the min number of blocks to complete a withdrawal of a strategy is\n     * MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\n     * @param strategies The strategies to set the minimum withdrawal delay blocks for\n     * @param withdrawalDelayBlocks The minimum withdrawal delay blocks to set for each strategy\n     */\n    function setStrategyWithdrawalDelayBlocks(IStrategy[] calldata strategies, uint256[] calldata withdrawalDelayBlocks) external;\n\n    /**\n     * @notice returns the address of the operator that `staker` is delegated to.\n     * @notice Mapping: staker => operator whom the staker is currently delegated to.\n     * @dev Note that returning address(0) indicates that the staker is not actively delegated to any operator.\n     */\n    function delegatedTo(address staker) external view returns (address);\n\n    /**\n     * @notice Returns the OperatorDetails struct associated with an `operator`.\n     */\n    function operatorDetails(address operator) external view returns (OperatorDetails memory);\n\n    /**\n     * @notice Returns the delegationApprover account for an operator\n     */\n    function delegationApprover(address operator) external view returns (address);\n\n    /**\n     * @notice Returns the stakerOptOutWindowBlocks for an operator\n     */\n    function stakerOptOutWindowBlocks(address operator) external view returns (uint256);\n\n    /**\n     * @notice Given array of strategies, returns array of shares for the operator\n     */\n    function getOperatorShares(\n        address operator,\n        IStrategy[] memory strategies\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @notice Given a list of strategies, return the minimum number of blocks that must pass to withdraw\n     * from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\n     * @param strategies The strategies to check withdrawal delays for\n     */\n    function getWithdrawalDelay(IStrategy[] calldata strategies) external view returns (uint256);\n\n    /**\n     * @notice returns the total number of shares in `strategy` that are delegated to `operator`.\n     * @notice Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\n     * @dev By design, the following invariant should hold for each Strategy:\n     * (operator's shares in delegation manager) = sum (shares above zero of all stakers delegated to operator)\n     * = sum (delegateable shares of all stakers delegated to the operator)\n     */\n    function operatorShares(address operator, IStrategy strategy) external view returns (uint256);\n\n\n    /**\n     * @notice Returns the number of actively-delegatable shares a staker has across all strategies.\n     * @dev Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\n     */\n    function getDelegatableShares(address staker) external view returns (IStrategy[] memory, uint256[] memory);\n\n    /**\n     * @notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\n     */\n    function isDelegated(address staker) external view returns (bool);\n\n    /**\n     * @notice Returns true is an operator has previously registered for delegation.\n     */\n    function isOperator(address operator) external view returns (bool);\n\n    /// @notice Mapping: staker => number of signed delegation nonces (used in `delegateToBySignature`) from the staker that the contract has already checked\n    function stakerNonce(address staker) external view returns (uint256);\n\n    /**\n     * @notice Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\n     * @dev Salts are used in the `delegateTo` and `delegateToBySignature` functions. Note that these functions only process the delegationApprover's\n     * signature + the provided salt if the operator being delegated to has specified a nonzero address as their `delegationApprover`.\n     */\n    function delegationApproverSaltIsSpent(address _delegationApprover, bytes32 salt) external view returns (bool);\n\n    /**\n     * @notice Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner,\n     * up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\n     * Note that strategies each have a separate withdrawal delay, which can be greater than this value. So the minimum number of blocks that must pass\n     * to withdraw a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\n     */\n    function minWithdrawalDelayBlocks() external view returns (uint256);\n\n    /**\n     * @notice Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner,\n     * up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\n     */\n    function strategyWithdrawalDelayBlocks(IStrategy strategy) external view returns (uint256);\n\n    /// @notice return address of the beaconChainETHStrategy\n    function beaconChainETHStrategy() external view returns (IStrategy);\n\n    /**\n     * @notice Calculates the digestHash for a `staker` to sign to delegate to an `operator`\n     * @param staker The signing staker\n     * @param operator The operator who is being delegated to\n     * @param expiry The desired expiry time of the staker's signature\n     */\n    function calculateCurrentStakerDelegationDigestHash(\n        address staker,\n        address operator,\n        uint256 expiry\n    ) external view returns (bytes32);\n\n    /**\n     * @notice Calculates the digest hash to be signed and used in the `delegateToBySignature` function\n     * @param staker The signing staker\n     * @param _stakerNonce The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\n     * @param operator The operator who is being delegated to\n     * @param expiry The desired expiry time of the staker's signature\n     */\n    function calculateStakerDelegationDigestHash(\n        address staker,\n        uint256 _stakerNonce,\n        address operator,\n        uint256 expiry\n    ) external view returns (bytes32);\n\n    /**\n     * @notice Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\n     * @param staker The account delegating their stake\n     * @param operator The account receiving delegated stake\n     * @param _delegationApprover the operator's `delegationApprover` who will be signing the delegationHash (in general)\n     * @param approverSalt A unique and single use value associated with the approver signature.\n     * @param expiry Time after which the approver's signature becomes invalid\n     */\n    function calculateDelegationApprovalDigestHash(\n        address staker,\n        address operator,\n        address _delegationApprover,\n        bytes32 approverSalt,\n        uint256 expiry\n    ) external view returns (bytes32);\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    function DOMAIN_TYPEHASH() external view returns (bytes32);\n\n    /// @notice The EIP-712 typehash for the StakerDelegation struct used by the contract\n    function STAKER_DELEGATION_TYPEHASH() external view returns (bytes32);\n\n    /// @notice The EIP-712 typehash for the DelegationApproval struct used by the contract\n    function DELEGATION_APPROVAL_TYPEHASH() external view returns (bytes32);\n\n    /**\n     * @notice Getter function for the current EIP-712 domain separator for this contract.\n     *\n     * @dev The domain separator will change in the event of a fork that changes the ChainID.\n     * @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n     * for more detailed information please read EIP-712.\n     */\n    function domainSeparator() external view returns (bytes32);\n\n    /// @notice Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\n    /// @dev This only increments (doesn't decrement), and is used to help ensure that otherwise identical withdrawals have unique hashes.\n    function cumulativeWithdrawalsQueued(address staker) external view returns (uint256);\n\n    /// @notice Returns the keccak256 hash of `withdrawal`.\n    function calculateWithdrawalRoot(Withdrawal memory withdrawal) external pure returns (bytes32);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"../libraries/BeaconChainProofs.sol\";\nimport \"./IEigenPodManager.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title The implementation contract used for restaking beacon chain ETH on EigenLayer\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @dev Note that all beacon chain balances are stored as gwei within the beacon chain datastructures. We choose\n *   to account balances in terms of gwei in the EigenPod contract and convert to wei when making calls to other contracts\n */\ninterface IEigenPod {\n    /**\n     *\n     *                                STRUCTS / ENUMS\n     *\n     */\n    enum VALIDATOR_STATUS {\n        INACTIVE, // doesnt exist\n        ACTIVE, // staked on ethpos and withdrawal credentials are pointed to the EigenPod\n        WITHDRAWN // withdrawn from the Beacon Chain\n\n    }\n\n    struct ValidatorInfo {\n        // index of the validator in the beacon chain\n        uint64 validatorIndex;\n        // amount of beacon chain ETH restaked on EigenLayer in gwei\n        uint64 restakedBalanceGwei;\n        //timestamp of the validator's most recent balance update\n        uint64 lastCheckpointedAt;\n        // status of the validator\n        VALIDATOR_STATUS status;\n    }\n\n    struct Checkpoint {\n        bytes32 beaconBlockRoot;\n        uint24 proofsRemaining;\n        uint64 podBalanceGwei;\n        int128 balanceDeltasGwei;\n    }\n\n    /**\n     *\n     *                                    EVENTS\n     *\n     */\n\n    /// @notice Emitted when an ETH validator stakes via this eigenPod\n    event EigenPodStaked(bytes pubkey);\n\n    /// @notice Emitted when a pod owner updates the proof submitter address\n    event ProofSubmitterUpdated(address prevProofSubmitter, address newProofSubmitter);\n\n    /// @notice Emitted when an ETH validator's withdrawal credentials are successfully verified to be pointed to this eigenPod\n    event ValidatorRestaked(uint40 validatorIndex);\n\n    /// @notice Emitted when an ETH validator's  balance is proven to be updated.  Here newValidatorBalanceGwei\n    //  is the validator's balance that is credited on EigenLayer.\n    event ValidatorBalanceUpdated(uint40 validatorIndex, uint64 balanceTimestamp, uint64 newValidatorBalanceGwei);\n\n    /// @notice Emitted when restaked beacon chain ETH is withdrawn from the eigenPod.\n    event RestakedBeaconChainETHWithdrawn(address indexed recipient, uint256 amount);\n\n    /// @notice Emitted when ETH is received via the `receive` fallback\n    event NonBeaconChainETHReceived(uint256 amountReceived);\n\n    /// @notice Emitted when a checkpoint is created\n    event CheckpointCreated(\n        uint64 indexed checkpointTimestamp, bytes32 indexed beaconBlockRoot, uint256 validatorCount\n    );\n\n    /// @notice Emitted when a checkpoint is finalized\n    event CheckpointFinalized(uint64 indexed checkpointTimestamp, int256 totalShareDeltaWei);\n\n    /// @notice Emitted when a validator is proven for a given checkpoint\n    event ValidatorCheckpointed(uint64 indexed checkpointTimestamp, uint40 indexed validatorIndex);\n\n    /// @notice Emitted when a validaor is proven to have 0 balance at a given checkpoint\n    event ValidatorWithdrawn(uint64 indexed checkpointTimestamp, uint40 indexed validatorIndex);\n\n    /**\n     *\n     *                       EXTERNAL STATE-CHANGING METHODS\n     *\n     */\n\n    /// @notice Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager\n    function initialize(address owner) external;\n\n    /// @notice Called by EigenPodManager when the owner wants to create another ETH validator.\n    function stake(bytes calldata pubkey, bytes calldata signature, bytes32 depositDataRoot) external payable;\n\n    /**\n     * @notice Transfers `amountWei` in ether from this contract to the specified `recipient` address\n     * @notice Called by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain.\n     * @dev The podOwner must have already proved sufficient withdrawals, so that this pod's `withdrawableRestakedExecutionLayerGwei` exceeds the\n     * `amountWei` input (when converted to GWEI).\n     * @dev Reverts if `amountWei` is not a whole Gwei amount\n     */\n    function withdrawRestakedBeaconChainETH(address recipient, uint256 amount) external;\n\n    /**\n     * @dev Create a checkpoint used to prove this pod's active validator set. Checkpoints are completed\n     * by submitting one checkpoint proof per ACTIVE validator. During the checkpoint process, the total\n     * change in ACTIVE validator balance is tracked, and any validators with 0 balance are marked `WITHDRAWN`.\n     * @dev Once finalized, the pod owner is awarded shares corresponding to:\n     * - the total change in their ACTIVE validator balances\n     * - any ETH in the pod not already awarded shares\n     * @dev A checkpoint cannot be created if the pod already has an outstanding checkpoint. If\n     * this is the case, the pod owner MUST complete the existing checkpoint before starting a new one.\n     * @param revertIfNoBalance Forces a revert if the pod ETH balance is 0. This allows the pod owner\n     * to prevent accidentally starting a checkpoint that will not increase their shares\n     */\n    function startCheckpoint(bool revertIfNoBalance) external;\n\n    /**\n     * @dev Progress the current checkpoint towards completion by submitting one or more validator\n     * checkpoint proofs. Anyone can call this method to submit proofs towards the current checkpoint.\n     * For each validator proven, the current checkpoint's `proofsRemaining` decreases.\n     * @dev If the checkpoint's `proofsRemaining` reaches 0, the checkpoint is finalized.\n     * (see `_updateCheckpoint` for more details)\n     * @dev This method can only be called when there is a currently-active checkpoint.\n     * @param balanceContainerProof proves the beacon's current balance container root against a checkpoint's `beaconBlockRoot`\n     * @param proofs Proofs for one or more validator current balances against the `balanceContainerRoot`\n     */\n    function verifyCheckpointProofs(\n        BeaconChainProofs.BalanceContainerProof calldata balanceContainerProof,\n        BeaconChainProofs.BalanceProof[] calldata proofs\n    ) external;\n\n    /**\n     * @dev Verify one or more validators have their withdrawal credentials pointed at this EigenPod, and award\n     * shares based on their effective balance. Proven validators are marked `ACTIVE` within the EigenPod, and\n     * future checkpoint proofs will need to include them.\n     * @dev Withdrawal credential proofs MUST NOT be older than `currentCheckpointTimestamp`.\n     * @dev Validators proven via this method MUST NOT have an exit epoch set already.\n     * @param beaconTimestamp the beacon chain timestamp sent to the 4788 oracle contract. Corresponds\n     * to the parent beacon block root against which the proof is verified.\n     * @param stateRootProof proves a beacon state root against a beacon block root\n     * @param validatorIndices a list of validator indices being proven\n     * @param validatorFieldsProofs proofs of each validator's `validatorFields` against the beacon state root\n     * @param validatorFields the fields of the beacon chain \"Validator\" container. See consensus specs for\n     * details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\n     */\n    function verifyWithdrawalCredentials(\n        uint64 beaconTimestamp,\n        BeaconChainProofs.StateRootProof calldata stateRootProof,\n        uint40[] calldata validatorIndices,\n        bytes[] calldata validatorFieldsProofs,\n        bytes32[][] calldata validatorFields\n    ) external;\n\n    /**\n     * @dev Prove that one of this pod's active validators was slashed on the beacon chain. A successful\n     * staleness proof allows the caller to start a checkpoint.\n     *\n     * @dev Note that in order to start a checkpoint, any existing checkpoint must already be completed!\n     * (See `_startCheckpoint` for details)\n     *\n     * @dev Note that this method allows anyone to start a checkpoint as soon as a slashing occurs on the beacon\n     * chain. This is intended to make it easier to external watchers to keep a pod's balance up to date.\n     *\n     * @dev Note too that beacon chain slashings are not instant. There is a delay between the initial slashing event\n     * and the validator's final exit back to the execution layer. During this time, the validator's balance may or\n     * may not drop further due to a correlation penalty. This method allows proof of a slashed validator\n     * to initiate a checkpoint for as long as the validator remains on the beacon chain. Once the validator\n     * has exited and been checkpointed at 0 balance, they are no longer \"checkpoint-able\" and cannot be proven\n     * \"stale\" via this method.\n     * See https://eth2book.info/capella/part3/transition/epoch/#slashings for more info.\n     *\n     * @param beaconTimestamp the beacon chain timestamp sent to the 4788 oracle contract. Corresponds\n     * to the parent beacon block root against which the proof is verified.\n     * @param stateRootProof proves a beacon state root against a beacon block root\n     * @param proof the fields of the beacon chain \"Validator\" container, along with a merkle proof against\n     * the beacon state root. See the consensus specs for more details:\n     * https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\n     *\n     * @dev Staleness conditions:\n     * - Validator's last checkpoint is older than `beaconTimestamp`\n     * - Validator MUST be in `ACTIVE` status in the pod\n     * - Validator MUST be slashed on the beacon chain\n     */\n    function verifyStaleBalance(\n        uint64 beaconTimestamp,\n        BeaconChainProofs.StateRootProof calldata stateRootProof,\n        BeaconChainProofs.ValidatorProof calldata proof\n    ) external;\n\n    /// @notice called by owner of a pod to remove any ERC20s deposited in the pod\n    function recoverTokens(IERC20[] memory tokenList, uint256[] memory amountsToWithdraw, address recipient) external;\n\n    /// @notice Allows the owner of a pod to update the proof submitter, a permissioned\n    /// address that can call `startCheckpoint` and `verifyWithdrawalCredentials`.\n    /// @dev Note that EITHER the podOwner OR proofSubmitter can access these methods,\n    /// so it's fine to set your proofSubmitter to 0 if you want the podOwner to be the\n    /// only address that can call these methods.\n    /// @param newProofSubmitter The new proof submitter address. If set to 0, only the\n    /// pod owner will be able to call `startCheckpoint` and `verifyWithdrawalCredentials`\n    function setProofSubmitter(address newProofSubmitter) external;\n\n    /**\n     *\n     *                                VIEW METHODS\n     *\n     */\n\n    /// @notice An address with permissions to call `startCheckpoint` and `verifyWithdrawalCredentials`, set\n    /// by the podOwner. This role exists to allow a podOwner to designate a hot wallet that can call\n    /// these methods, allowing the podOwner to remain a cold wallet that is only used to manage funds.\n    /// @dev If this address is NOT set, only the podOwner can call `startCheckpoint` and `verifyWithdrawalCredentials`\n    function proofSubmitter() external view returns (address);\n\n    /// @notice the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),\n    function withdrawableRestakedExecutionLayerGwei() external view returns (uint64);\n\n    /// @notice The single EigenPodManager for EigenLayer\n    function eigenPodManager() external view returns (IEigenPodManager);\n\n    /// @notice The owner of this EigenPod\n    function podOwner() external view returns (address);\n\n    /// @notice Returns the validatorInfo struct for the provided pubkeyHash\n    function validatorPubkeyHashToInfo(bytes32 validatorPubkeyHash) external view returns (ValidatorInfo memory);\n\n    /// @notice Returns the validatorInfo struct for the provided pubkey\n    function validatorPubkeyToInfo(bytes calldata validatorPubkey) external view returns (ValidatorInfo memory);\n\n    /// @notice This returns the status of a given validator\n    function validatorStatus(bytes32 pubkeyHash) external view returns (VALIDATOR_STATUS);\n\n    /// @notice This returns the status of a given validator pubkey\n    function validatorStatus(bytes calldata validatorPubkey) external view returns (VALIDATOR_STATUS);\n\n    /// @notice Number of validators with proven withdrawal credentials, who do not have proven full withdrawals\n    function activeValidatorCount() external view returns (uint256);\n\n    /// @notice The timestamp of the last checkpoint finalized\n    function lastCheckpointTimestamp() external view returns (uint64);\n\n    /// @notice The timestamp of the currently-active checkpoint. Will be 0 if there is not active checkpoint\n    function currentCheckpointTimestamp() external view returns (uint64);\n\n    /// @notice Returns the currently-active checkpoint\n    function currentCheckpoint() external view returns (Checkpoint memory);\n\n    /// @notice For each checkpoint, the total balance attributed to exited validators, in gwei\n    ///\n    /// NOTE that the values added to this mapping are NOT guaranteed to capture the entirety of a validator's\n    /// exit - rather, they capture the total change in a validator's balance when a checkpoint shows their\n    /// balance change from nonzero to zero. While a change from nonzero to zero DOES guarantee that a validator\n    /// has been fully exited, it is possible that the magnitude of this change does not capture what is\n    /// typically thought of as a \"full exit.\"\n    ///\n    /// For example:\n    /// 1. Consider a validator was last checkpointed at 32 ETH before exiting. Once the exit has been processed,\n    /// it is expected that the validator's exited balance is calculated to be `32 ETH`.\n    /// 2. However, before `startCheckpoint` is called, a deposit is made to the validator for 1 ETH. The beacon\n    /// chain will automatically withdraw this ETH, but not until the withdrawal sweep passes over the validator\n    /// again. Until this occurs, the validator's current balance (used for checkpointing) is 1 ETH.\n    /// 3. If `startCheckpoint` is called at this point, the balance delta calculated for this validator will be\n    /// `-31 ETH`, and because the validator has a nonzero balance, it is not marked WITHDRAWN.\n    /// 4. After the exit is processed by the beacon chain, a subsequent `startCheckpoint` and checkpoint proof\n    /// will calculate a balance delta of `-1 ETH` and attribute a 1 ETH exit to the validator.\n    ///\n    /// If this edge case impacts your usecase, it should be possible to mitigate this by monitoring for deposits\n    /// to your exited validators, and waiting to call `startCheckpoint` until those deposits have been automatically\n    /// exited.\n    ///\n    /// Additional edge cases this mapping does not cover:\n    /// - If a validator is slashed, their balance exited will reflect their original balance rather than the slashed amount\n    /// - The final partial withdrawal for an exited validator will be likely be included in this mapping.\n    ///   i.e. if a validator was last checkpointed at 32.1 ETH before exiting, the next checkpoint will calculate their\n    ///   \"exited\" amount to be 32.1 ETH rather than 32 ETH.\n    function checkpointBalanceExitedGwei(uint64) external view returns (uint64);\n\n    /// @notice Query the 4788 oracle to get the parent block root of the slot with the given `timestamp`\n    /// @param timestamp of the block for which the parent block root will be returned. MUST correspond\n    /// to an existing slot within the last 24 hours. If the slot at `timestamp` was skipped, this method\n    /// will revert.\n    function getParentBlockRoot(uint64 timestamp) external view returns (bytes32);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\";\nimport \"./IETHPOSDeposit.sol\";\nimport \"./IStrategyManager.sol\";\nimport \"./IEigenPod.sol\";\nimport \"./IPausable.sol\";\nimport \"./ISlasher.sol\";\nimport \"./IStrategy.sol\";\n\n/**\n * @title Interface for factory that creates and manages solo staking pods that have their withdrawal credentials pointed to EigenLayer.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n */\ninterface IEigenPodManager is IPausable {\n    /// @notice Emitted to notify the deployment of an EigenPod\n    event PodDeployed(address indexed eigenPod, address indexed podOwner);\n\n    /// @notice Emitted to notify a deposit of beacon chain ETH recorded in the strategy manager\n    event BeaconChainETHDeposited(address indexed podOwner, uint256 amount);\n\n    /// @notice Emitted when the balance of an EigenPod is updated\n    event PodSharesUpdated(address indexed podOwner, int256 sharesDelta);\n\n    /// @notice Emitted every time the total shares of a pod are updated\n    event NewTotalShares(address indexed podOwner, int256 newTotalShares);\n\n    /// @notice Emitted when a withdrawal of beacon chain ETH is completed\n    event BeaconChainETHWithdrawalCompleted(\n        address indexed podOwner,\n        uint256 shares,\n        uint96 nonce,\n        address delegatedAddress,\n        address withdrawer,\n        bytes32 withdrawalRoot\n    );\n\n    /**\n     * @notice Creates an EigenPod for the sender.\n     * @dev Function will revert if the `msg.sender` already has an EigenPod.\n     * @dev Returns EigenPod address\n     */\n    function createPod() external returns (address);\n\n    /**\n     * @notice Stakes for a new beacon chain validator on the sender's EigenPod.\n     * Also creates an EigenPod for the sender if they don't have one already.\n     * @param pubkey The 48 bytes public key of the beacon chain validator.\n     * @param signature The validator's signature of the deposit data.\n     * @param depositDataRoot The root/hash of the deposit data for the validator's deposit.\n     */\n    function stake(bytes calldata pubkey, bytes calldata signature, bytes32 depositDataRoot) external payable;\n\n    /**\n     * @notice Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager\n     * to ensure that delegated shares are also tracked correctly\n     * @param podOwner is the pod owner whose balance is being updated.\n     * @param sharesDelta is the change in podOwner's beaconChainETHStrategy shares\n     * @dev Callable only by the podOwner's EigenPod contract.\n     * @dev Reverts if `sharesDelta` is not a whole Gwei amount\n     */\n    function recordBeaconChainETHBalanceUpdate(address podOwner, int256 sharesDelta) external;\n\n    /// @notice Returns the address of the `podOwner`'s EigenPod if it has been deployed.\n    function ownerToPod(address podOwner) external view returns (IEigenPod);\n\n    /// @notice Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not).\n    function getPod(address podOwner) external view returns (IEigenPod);\n\n    /// @notice The ETH2 Deposit Contract\n    function ethPOS() external view returns (IETHPOSDeposit);\n\n    /// @notice Beacon proxy to which the EigenPods point\n    function eigenPodBeacon() external view returns (IBeacon);\n\n    /// @notice EigenLayer's StrategyManager contract\n    function strategyManager() external view returns (IStrategyManager);\n\n    /// @notice EigenLayer's Slasher contract\n    function slasher() external view returns (ISlasher);\n\n    /// @notice Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise.\n    function hasPod(address podOwner) external view returns (bool);\n\n    /// @notice Returns the number of EigenPods that have been created\n    function numPods() external view returns (uint256);\n\n    /**\n     * @notice Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy.\n     * @dev The share amount can become negative. This is necessary to accommodate the fact that a pod owner's virtual beacon chain ETH shares can\n     * decrease between the pod owner queuing and completing a withdrawal.\n     * When the pod owner's shares would otherwise increase, this \"deficit\" is decreased first _instead_.\n     * Likewise, when a withdrawal is completed, this \"deficit\" is decreased and the withdrawal amount is decreased; We can think of this\n     * as the withdrawal \"paying off the deficit\".\n     */\n    function podOwnerShares(address podOwner) external view returns (int256);\n\n    /// @notice returns canonical, virtual beaconChainETH strategy\n    function beaconChainETHStrategy() external view returns (IStrategy);\n\n    /**\n     * @notice Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue.\n     * Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\n     * @dev This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to\n     * result in the `podOwner` incurring a \"share deficit\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive\n     * shares from the operator to whom the staker is delegated.\n     * @dev Reverts if `shares` is not a whole Gwei amount\n     */\n    function removeShares(address podOwner, uint256 shares) external;\n\n    /**\n     * @notice Increases the `podOwner`'s shares by `shares`, paying off deficit if possible.\n     * Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\n     * @dev Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input\n     * in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)\n     * @dev Reverts if `shares` is not a whole Gwei amount\n     */\n    function addShares(address podOwner, uint256 shares) external returns (uint256);\n\n    /**\n     * @notice Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\n     * @dev Prioritizes decreasing the podOwner's share deficit, if they have one\n     * @dev Reverts if `shares` is not a whole Gwei amount\n     */\n    function withdrawSharesAsTokens(address podOwner, address destination, uint256 shares) external;\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"content":"// ┏━━━┓━┏┓━┏┓━━┏━━━┓━━┏━━━┓━━━━┏━━━┓━━━━━━━━━━━━━━━━━━━┏┓━━━━━┏━━━┓━━━━━━━━━┏┓━━━━━━━━━━━━━━┏┓━\n// ┃┏━━┛┏┛┗┓┃┃━━┃┏━┓┃━━┃┏━┓┃━━━━┗┓┏┓┃━━━━━━━━━━━━━━━━━━┏┛┗┓━━━━┃┏━┓┃━━━━━━━━┏┛┗┓━━━━━━━━━━━━┏┛┗┓\n// ┃┗━━┓┗┓┏┛┃┗━┓┗┛┏┛┃━━┃┃━┃┃━━━━━┃┃┃┃┏━━┓┏━━┓┏━━┓┏━━┓┏┓┗┓┏┛━━━━┃┃━┗┛┏━━┓┏━┓━┗┓┏┛┏━┓┏━━┓━┏━━┓┗┓┏┛\n// ┃┏━━┛━┃┃━┃┏┓┃┏━┛┏┛━━┃┃━┃┃━━━━━┃┃┃┃┃┏┓┃┃┏┓┃┃┏┓┃┃━━┫┣┫━┃┃━━━━━┃┃━┏┓┃┏┓┃┃┏┓┓━┃┃━┃┏┛┗━┓┃━┃┏━┛━┃┃━\n// ┃┗━━┓━┃┗┓┃┃┃┃┃┃┗━┓┏┓┃┗━┛┃━━━━┏┛┗┛┃┃┃━┫┃┗┛┃┃┗┛┃┣━━┃┃┃━┃┗┓━━━━┃┗━┛┃┃┗┛┃┃┃┃┃━┃┗┓┃┃━┃┗┛┗┓┃┗━┓━┃┗┓\n// ┗━━━┛━┗━┛┗┛┗┛┗━━━┛┗┛┗━━━┛━━━━┗━━━┛┗━━┛┃┏━┛┗━━┛┗━━┛┗┛━┗━┛━━━━┗━━━┛┗━━┛┗┛┗┛━┗━┛┗┛━┗━━━┛┗━━┛━┗━┛\n// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┃┃━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┗┛━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n// SPDX-License-Identifier: CC0-1.0\n\npragma solidity >=0.5.0;\n\n// This interface is designed to be compatible with the Vyper version.\n/// @notice This is the Ethereum 2.0 deposit contract interface.\n/// For more information see the Phase 0 specification under https://github.com/ethereum/eth2.0-specs\ninterface IETHPOSDeposit {\n    /// @notice A processed deposit event.\n    event DepositEvent(bytes pubkey, bytes withdrawal_credentials, bytes amount, bytes signature, bytes index);\n\n    /// @notice Submit a Phase 0 DepositData object.\n    /// @param pubkey A BLS12-381 public key.\n    /// @param withdrawal_credentials Commitment to a public key for withdrawals.\n    /// @param signature A BLS12-381 signature.\n    /// @param deposit_data_root The SHA-256 hash of the SSZ-encoded DepositData object.\n    /// Used as a protection against malformed input.\n    function deposit(\n        bytes calldata pubkey,\n        bytes calldata withdrawal_credentials,\n        bytes calldata signature,\n        bytes32 deposit_data_root\n    ) external payable;\n\n    /// @notice Query the current deposit root hash.\n    /// @return The deposit root hash.\n    function get_deposit_root() external view returns (bytes32);\n\n    /// @notice Query the current deposit count.\n    /// @return The deposit count encoded as a little endian 64-bit number.\n    function get_deposit_count() external view returns (bytes memory);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"../interfaces/IPauserRegistry.sol\";\n\n/**\n * @title Adds pausability to a contract, with pausing & unpausing controlled by the `pauser` and `unpauser` of a PauserRegistry contract.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @notice Contracts that inherit from this contract may define their own `pause` and `unpause` (and/or related) functions.\n * These functions should be permissioned as \"onlyPauser\" which defers to a `PauserRegistry` for determining access control.\n * @dev Pausability is implemented using a uint256, which allows up to 256 different single bit-flags; each bit can potentially pause different functionality.\n * Inspiration for this was taken from the NearBridge design here https://etherscan.io/address/0x3FEFc5A4B1c02f21cBc8D3613643ba0635b9a873#code.\n * For the `pause` and `unpause` functions we've implemented, if you pause, you can only flip (any number of) switches to on/1 (aka \"paused\"), and if you unpause,\n * you can only flip (any number of) switches to off/0 (aka \"paused\").\n * If you want a pauseXYZ function that just flips a single bit / \"pausing flag\", it will:\n * 1) 'bit-wise and' (aka `&`) a flag with the current paused state (as a uint256)\n * 2) update the paused state to this new value\n * @dev We note as well that we have chosen to identify flags by their *bit index* as opposed to their numerical value, so, e.g. defining `DEPOSITS_PAUSED = 3`\n * indicates specifically that if the *third bit* of `_paused` is flipped -- i.e. it is a '1' -- then deposits should be paused\n */\ninterface IPausable {\n    /// @notice Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\n    event PauserRegistrySet(IPauserRegistry pauserRegistry, IPauserRegistry newPauserRegistry);\n\n    /// @notice Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\n    event Paused(address indexed account, uint256 newPausedStatus);\n\n    /// @notice Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\n    event Unpaused(address indexed account, uint256 newPausedStatus);\n\n    /// @notice Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\n    function pauserRegistry() external view returns (IPauserRegistry);\n\n    /**\n     * @notice This function is used to pause an EigenLayer contract's functionality.\n     * It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\n     * @param newPausedStatus represents the new value for `_paused` to take, which means it may flip several bits at once.\n     * @dev This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\n     */\n    function pause(uint256 newPausedStatus) external;\n\n    /**\n     * @notice Alias for `pause(type(uint256).max)`.\n     */\n    function pauseAll() external;\n\n    /**\n     * @notice This function is used to unpause an EigenLayer contract's functionality.\n     * It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\n     * @param newPausedStatus represents the new value for `_paused` to take, which means it may flip several bits at once.\n     * @dev This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\n     */\n    function unpause(uint256 newPausedStatus) external;\n\n    /// @notice Returns the current paused status as a uint256.\n    function paused() external view returns (uint256);\n\n    /// @notice Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\n    function paused(uint8 index) external view returns (bool);\n\n    /// @notice Allows the unpauser to set a new pauser registry\n    function setPauserRegistry(IPauserRegistry newPauserRegistry) external;\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\n/**\n * @title Interface for the `PauserRegistry` contract.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n */\ninterface IPauserRegistry {\n    event PauserStatusChanged(address pauser, bool canPause);\n\n    event UnpauserChanged(address previousUnpauser, address newUnpauser);\n\n    /// @notice Mapping of addresses to whether they hold the pauser role.\n    function isPauser(address pauser) external view returns (bool);\n\n    /// @notice Unique address that holds the unpauser role. Capable of changing *both* the pauser and unpauser addresses.\n    function unpauser() external view returns (address);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IStrategy.sol\";\n\n/**\n * @title Interface for the `IRewardsCoordinator` contract.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @notice Allows AVSs to make \"Rewards Submissions\", which get distributed amongst the AVSs' confirmed\n * Operators and the Stakers delegated to those Operators.\n * Calculations are performed based on the completed RewardsSubmission, with the results posted in\n * a Merkle root against which Stakers & Operators can make claims.\n */\ninterface IRewardsCoordinator {\n    /// STRUCTS ///\n    /**\n     * @notice A linear combination of strategies and multipliers for AVSs to weigh\n     * EigenLayer strategies.\n     * @param strategy The EigenLayer strategy to be used for the rewards submission\n     * @param multiplier The weight of the strategy in the rewards submission\n     */\n    struct StrategyAndMultiplier {\n        IStrategy strategy;\n        uint96 multiplier;\n    }\n\n    /**\n     * @notice A reward struct for an operator\n     * @param operator The operator to be rewarded\n     * @param amount The reward amount for the operator\n     */\n    struct OperatorReward {\n        address operator;\n        uint256 amount;\n    }\n\n    /**\n     * @notice A split struct for an Operator\n     * @param oldSplitBips The old split in basis points. This is the split that is active if `block.timestamp < activatedAt`\n     * @param newSplitBips The new split in basis points. This is the split that is active if `block.timestamp >= activatedAt`\n     * @param activatedAt The timestamp at which the split will be activated\n     */\n    struct OperatorSplit {\n        uint16 oldSplitBips;\n        uint16 newSplitBips;\n        uint32 activatedAt;\n    }\n\n    /**\n     * Sliding Window for valid RewardsSubmission startTimestamp\n     *\n     * Scenario A: GENESIS_REWARDS_TIMESTAMP IS WITHIN RANGE\n     *         <-----MAX_RETROACTIVE_LENGTH-----> t (block.timestamp) <---MAX_FUTURE_LENGTH--->\n     *             <--------------------valid range for startTimestamp------------------------>\n     *             ^\n     *         GENESIS_REWARDS_TIMESTAMP\n     *\n     *\n     * Scenario B: GENESIS_REWARDS_TIMESTAMP IS OUT OF RANGE\n     *         <-----MAX_RETROACTIVE_LENGTH-----> t (block.timestamp) <---MAX_FUTURE_LENGTH--->\n     *         <------------------------valid range for startTimestamp------------------------>\n     *     ^\n     * GENESIS_REWARDS_TIMESTAMP\n     * @notice RewardsSubmission struct submitted by AVSs when making rewards for their operators and stakers\n     * RewardsSubmission can be for a time range within the valid window for startTimestamp and must be within max duration.\n     * See `createAVSRewardsSubmission()` for more details.\n     * @param strategiesAndMultipliers The strategies and their relative weights\n     * cannot have duplicate strategies and need to be sorted in ascending address order\n     * @param token The rewards token to be distributed\n     * @param amount The total amount of tokens to be distributed\n     * @param startTimestamp The timestamp (seconds) at which the submission range is considered for distribution\n     * could start in the past or in the future but within a valid range. See the diagram above.\n     * @param duration The duration of the submission range in seconds. Must be <= MAX_REWARDS_DURATION\n     */\n    struct RewardsSubmission {\n        StrategyAndMultiplier[] strategiesAndMultipliers;\n        IERC20 token;\n        uint256 amount;\n        uint32 startTimestamp;\n        uint32 duration;\n    }\n\n    /**\n     * @notice OperatorDirectedRewardsSubmission struct submitted by AVSs when making operator-directed rewards for their operators and stakers.\n     * @param strategiesAndMultipliers The strategies and their relative weights.\n     * @param token The rewards token to be distributed.\n     * @param operatorRewards The rewards for the operators.\n     * @param startTimestamp The timestamp (seconds) at which the submission range is considered for distribution.\n     * @param duration The duration of the submission range in seconds.\n     * @param description Describes what the rewards submission is for.\n     */\n    struct OperatorDirectedRewardsSubmission {\n        StrategyAndMultiplier[] strategiesAndMultipliers;\n        IERC20 token;\n        OperatorReward[] operatorRewards;\n        uint32 startTimestamp;\n        uint32 duration;\n        string description;\n    }\n\n    /**\n     * @notice A distribution root is a merkle root of the distribution of earnings for a given period.\n     * The RewardsCoordinator stores all historical distribution roots so that earners can claim their earnings against older roots\n     * if they wish but the merkle tree contains the cumulative earnings of all earners and tokens for a given period so earners (or their claimers if set)\n     * only need to claim against the latest root to claim all available earnings.\n     * @param root The merkle root of the distribution\n     * @param rewardsCalculationEndTimestamp The timestamp (seconds) until which rewards have been calculated\n     * @param activatedAt The timestamp (seconds) at which the root can be claimed against\n     */\n    struct DistributionRoot {\n        bytes32 root;\n        uint32 rewardsCalculationEndTimestamp;\n        uint32 activatedAt;\n        bool disabled;\n    }\n\n    /**\n     * @notice Internal leaf in the merkle tree for the earner's account leaf\n     * @param earner The address of the earner\n     * @param earnerTokenRoot The merkle root of the earner's token subtree\n     * Each leaf in the earner's token subtree is a TokenTreeMerkleLeaf\n     */\n    struct EarnerTreeMerkleLeaf {\n        address earner;\n        bytes32 earnerTokenRoot;\n    }\n\n    /**\n     * @notice The actual leaves in the distribution merkle tree specifying the token earnings\n     * for the respective earner's subtree. Each leaf is a claimable amount of a token for an earner.\n     * @param token The token for which the earnings are being claimed\n     * @param cumulativeEarnings The cumulative earnings of the earner for the token\n     */\n    struct TokenTreeMerkleLeaf {\n        IERC20 token;\n        uint256 cumulativeEarnings;\n    }\n\n    /**\n     * @notice A claim against a distribution root called by an\n     * earners claimer (could be the earner themselves). Each token claim will claim the difference\n     * between the cumulativeEarnings of the earner and the cumulativeClaimed of the claimer.\n     * Each claim can specify which of the earner's earned tokens they want to claim.\n     * See `processClaim()` for more details.\n     * @param rootIndex The index of the root in the list of DistributionRoots\n     * @param earnerIndex The index of the earner's account root in the merkle tree\n     * @param earnerTreeProof The proof of the earner's EarnerTreeMerkleLeaf against the merkle root\n     * @param earnerLeaf The earner's EarnerTreeMerkleLeaf struct, providing the earner address and earnerTokenRoot\n     * @param tokenIndices The indices of the token leaves in the earner's subtree\n     * @param tokenTreeProofs The proofs of the token leaves against the earner's earnerTokenRoot\n     * @param tokenLeaves The token leaves to be claimed\n     * @dev The merkle tree is structured with the merkle root at the top and EarnerTreeMerkleLeaf as internal leaves\n     * in the tree. Each earner leaf has its own subtree with TokenTreeMerkleLeaf as leaves in the subtree.\n     * To prove a claim against a specified rootIndex(which specifies the distributionRoot being used),\n     * the claim will first verify inclusion of the earner leaf in the tree against _distributionRoots[rootIndex].root.\n     * Then for each token, it will verify inclusion of the token leaf in the earner's subtree against the earner's earnerTokenRoot.\n     */\n    struct RewardsMerkleClaim {\n        uint32 rootIndex;\n        uint32 earnerIndex;\n        bytes earnerTreeProof;\n        EarnerTreeMerkleLeaf earnerLeaf;\n        uint32[] tokenIndices;\n        bytes[] tokenTreeProofs;\n        TokenTreeMerkleLeaf[] tokenLeaves;\n    }\n\n    /// EVENTS ///\n\n    /// @notice emitted when an AVS creates a valid RewardsSubmission\n    event AVSRewardsSubmissionCreated(\n        address indexed avs,\n        uint256 indexed submissionNonce,\n        bytes32 indexed rewardsSubmissionHash,\n        RewardsSubmission rewardsSubmission\n    );\n    /// @notice emitted when a valid RewardsSubmission is created for all stakers by a valid submitter\n    event RewardsSubmissionForAllCreated(\n        address indexed submitter,\n        uint256 indexed submissionNonce,\n        bytes32 indexed rewardsSubmissionHash,\n        RewardsSubmission rewardsSubmission\n    );\n    /// @notice emitted when a valid RewardsSubmission is created when rewardAllStakersAndOperators is called\n    event RewardsSubmissionForAllEarnersCreated(\n        address indexed tokenHopper,\n        uint256 indexed submissionNonce,\n        bytes32 indexed rewardsSubmissionHash,\n        RewardsSubmission rewardsSubmission\n    );\n\n    /**\n     * @notice Emitted when an AVS creates a valid `OperatorDirectedRewardsSubmission`\n     * @param caller The address calling `createOperatorDirectedAVSRewardsSubmission`.\n     * @param avs The avs on behalf of which the operator-directed rewards are being submitted.\n     * @param operatorDirectedRewardsSubmissionHash Keccak256 hash of (`avs`, `submissionNonce` and `operatorDirectedRewardsSubmission`).\n     * @param submissionNonce Current nonce of the avs. Used to generate a unique submission hash.\n     * @param operatorDirectedRewardsSubmission The Operator-Directed Rewards Submission. Contains the token, start timestamp, duration, operator rewards, description and, strategy and multipliers.\n     */\n    event OperatorDirectedAVSRewardsSubmissionCreated(\n        address indexed caller,\n        address indexed avs,\n        bytes32 indexed operatorDirectedRewardsSubmissionHash,\n        uint256 submissionNonce,\n        OperatorDirectedRewardsSubmission operatorDirectedRewardsSubmission\n    );\n\n    /// @notice rewardsUpdater is responsible for submiting DistributionRoots, only owner can set rewardsUpdater\n    event RewardsUpdaterSet(address indexed oldRewardsUpdater, address indexed newRewardsUpdater);\n    event RewardsForAllSubmitterSet(\n        address indexed rewardsForAllSubmitter,\n        bool indexed oldValue,\n        bool indexed newValue\n    );\n    event ActivationDelaySet(uint32 oldActivationDelay, uint32 newActivationDelay);\n    event DefaultOperatorSplitBipsSet(uint16 oldDefaultOperatorSplitBips, uint16 newDefaultOperatorSplitBips);\n\n    /**\n     * @notice Emitted when the operator split for an AVS is set.\n     * @param caller The address calling `setOperatorAVSSplit`.\n     * @param operator The operator on behalf of which the split is being set.\n     * @param avs The avs for which the split is being set by the operator.\n     * @param activatedAt The timestamp at which the split will be activated.\n     * @param oldOperatorAVSSplitBips The old split for the operator for the AVS.\n     * @param newOperatorAVSSplitBips The new split for the operator for the AVS.\n     */\n    event OperatorAVSSplitBipsSet(\n        address indexed caller,\n        address indexed operator,\n        address indexed avs,\n        uint32 activatedAt,\n        uint16 oldOperatorAVSSplitBips,\n        uint16 newOperatorAVSSplitBips\n    );\n\n    /**\n     * @notice Emitted when the operator split for Programmatic Incentives is set.\n     * @param caller The address calling `setOperatorPISplit`.\n     * @param operator The operator on behalf of which the split is being set.\n     * @param activatedAt The timestamp at which the split will be activated.\n     * @param oldOperatorPISplitBips The old split for the operator for Programmatic Incentives.\n     * @param newOperatorPISplitBips The new split for the operator for Programmatic Incentives.\n     */\n    event OperatorPISplitBipsSet(\n        address indexed caller,\n        address indexed operator,\n        uint32 activatedAt,\n        uint16 oldOperatorPISplitBips,\n        uint16 newOperatorPISplitBips\n    );\n\n    event ClaimerForSet(address indexed earner, address indexed oldClaimer, address indexed claimer);\n    /// @notice rootIndex is the specific array index of the newly created root in the storage array\n    event DistributionRootSubmitted(\n        uint32 indexed rootIndex,\n        bytes32 indexed root,\n        uint32 indexed rewardsCalculationEndTimestamp,\n        uint32 activatedAt\n    );\n    event DistributionRootDisabled(uint32 indexed rootIndex);\n    /// @notice root is one of the submitted distribution roots that was claimed against\n    event RewardsClaimed(\n        bytes32 root,\n        address indexed earner,\n        address indexed claimer,\n        address indexed recipient,\n        IERC20 token,\n        uint256 claimedAmount\n    );\n\n    /**\n     *\n     *                         VIEW FUNCTIONS\n     *\n     */\n\n    /// @notice The address of the entity that can update the contract with new merkle roots\n    function rewardsUpdater() external view returns (address);\n\n    /**\n     * @notice The interval in seconds at which the calculation for a RewardsSubmission distribution is done.\n     * @dev Rewards Submission durations must be multiples of this interval.\n     */\n    function CALCULATION_INTERVAL_SECONDS() external view returns (uint32);\n\n    /// @notice The maximum amount of time (seconds) that a RewardsSubmission can span over\n    function MAX_REWARDS_DURATION() external view returns (uint32);\n\n    /// @notice max amount of time (seconds) that a submission can start in the past\n    function MAX_RETROACTIVE_LENGTH() external view returns (uint32);\n\n    /// @notice max amount of time (seconds) that a submission can start in the future\n    function MAX_FUTURE_LENGTH() external view returns (uint32);\n\n    /// @notice absolute min timestamp (seconds) that a submission can start at\n    function GENESIS_REWARDS_TIMESTAMP() external view returns (uint32);\n\n    /// @notice Delay in timestamp (seconds) before a posted root can be claimed against\n    function activationDelay() external view returns (uint32);\n\n    /// @notice Mapping: earner => the address of the entity who can call `processClaim` on behalf of the earner\n    function claimerFor(address earner) external view returns (address);\n\n    /// @notice Mapping: claimer => token => total amount claimed\n    function cumulativeClaimed(address claimer, IERC20 token) external view returns (uint256);\n\n    /// @notice the defautl split for all operators across all avss\n    function defaultOperatorSplitBips() external view returns (uint16);\n\n    /// @notice the split for a specific `operator` for a specific `avs`\n    function getOperatorAVSSplit(address operator, address avs) external view returns (uint16);\n\n    /// @notice the split for a specific `operator` for Programmatic Incentives\n    function getOperatorPISplit(address operator) external view returns (uint16);\n\n    /// @notice return the hash of the earner's leaf\n    function calculateEarnerLeafHash(EarnerTreeMerkleLeaf calldata leaf) external pure returns (bytes32);\n\n    /// @notice returns the hash of the earner's token leaf\n    function calculateTokenLeafHash(TokenTreeMerkleLeaf calldata leaf) external pure returns (bytes32);\n\n    /// @notice returns 'true' if the claim would currently pass the check in `processClaims`\n    /// but will revert if not valid\n    function checkClaim(RewardsMerkleClaim calldata claim) external view returns (bool);\n\n    /// @notice The timestamp until which RewardsSubmissions have been calculated\n    function currRewardsCalculationEndTimestamp() external view returns (uint32);\n\n    /// @notice returns the number of distribution roots posted\n    function getDistributionRootsLength() external view returns (uint256);\n\n    /// @notice returns the distributionRoot at the specified index\n    function getDistributionRootAtIndex(uint256 index) external view returns (DistributionRoot memory);\n\n    /// @notice returns the current distributionRoot\n    function getCurrentDistributionRoot() external view returns (DistributionRoot memory);\n\n    /// @notice loop through the distribution roots from reverse and get latest root that is not disabled and activated\n    /// i.e. a root that can be claimed against\n    function getCurrentClaimableDistributionRoot() external view returns (DistributionRoot memory);\n\n    /// @notice loop through distribution roots from reverse and return index from hash\n    function getRootIndexFromHash(bytes32 rootHash) external view returns (uint32);\n\n    /**\n     *\n     *                         EXTERNAL FUNCTIONS\n     *\n     */\n\n    /**\n     * @notice Creates a new rewards submission on behalf of an AVS, to be split amongst the\n     * set of stakers delegated to operators who are registered to the `avs`\n     * @param rewardsSubmissions The rewards submissions being created\n     * @dev Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being made\n     * @dev The duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`\n     * @dev The tokens are sent to the `RewardsCoordinator` contract\n     * @dev Strategies must be in ascending order of addresses to check for duplicates\n     * @dev This function will revert if the `rewardsSubmission` is malformed,\n     * e.g. if the `strategies` and `weights` arrays are of non-equal lengths\n     */\n    function createAVSRewardsSubmission(RewardsSubmission[] calldata rewardsSubmissions) external;\n\n    /**\n     * @notice similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers\n     * rather than just those delegated to operators who are registered to a single avs and is\n     * a permissioned call based on isRewardsForAllSubmitter mapping.\n     * @param rewardsSubmission The rewards submission being created\n     */\n    function createRewardsForAllSubmission(RewardsSubmission[] calldata rewardsSubmission) external;\n\n    /**\n     * @notice Creates a new rewards submission for all earners across all AVSs.\n     * Earners in this case indicating all operators and their delegated stakers. Undelegated stake\n     * is not rewarded from this RewardsSubmission. This interface is only callable\n     * by the token hopper contract from the Eigen Foundation\n     * @param rewardsSubmissions The rewards submissions being created\n     */\n    function createRewardsForAllEarners(RewardsSubmission[] calldata rewardsSubmissions) external;\n\n    /**\n     * @notice Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and\n     * set of stakers delegated to operators who are registered to the `avs`.\n     * @param avs The AVS on behalf of which the reward is being submitted\n     * @param operatorDirectedRewardsSubmissions The operator-directed rewards submissions being created\n     * @dev Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being made\n     * @dev The duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`\n     * @dev The tokens are sent to the `RewardsCoordinator` contract\n     * @dev The `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.\n     * @dev Strategies must be in ascending order of addresses to check for duplicates\n     * @dev Operators must be in ascending order of addresses to check for duplicates.\n     * @dev This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.\n     */\n    function createOperatorDirectedAVSRewardsSubmission(\n        address avs,\n        OperatorDirectedRewardsSubmission[] calldata operatorDirectedRewardsSubmissions\n    ) external;\n\n    /**\n     * @notice Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]).\n     * Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for,\n     * they can simply claim against the latest root and the contract will calculate the difference between\n     * their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\n     * @param claim The RewardsMerkleClaim to be processed.\n     * Contains the root index, earner, token leaves, and required proofs\n     * @param recipient The address recipient that receives the ERC20 rewards\n     * @dev only callable by the valid claimer, that is\n     * if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only\n     * claimerFor[claim.earner] can claim the rewards.\n     */\n    function processClaim(RewardsMerkleClaim calldata claim, address recipient) external;\n\n    /**\n     * @notice Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]).\n     * Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for,\n     * they can simply claim against the latest root and the contract will calculate the difference between\n     * their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\n     * @param claims The RewardsMerkleClaims to be processed.\n     * Contains the root index, earner, token leaves, and required proofs\n     * @param recipient The address recipient that receives the ERC20 rewards\n     * @dev only callable by the valid claimer, that is\n     * if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only\n     * claimerFor[claim.earner] can claim the rewards.\n     * @dev This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary.\n     */\n    function processClaims(RewardsMerkleClaim[] calldata claims, address recipient) external;\n\n    /**\n     * @notice Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\n     * @param root The merkle root of the distribution\n     * @param rewardsCalculationEndTimestamp The timestamp until which rewards have been calculated\n     * @dev Only callable by the rewardsUpdater\n     */\n    function submitRoot(bytes32 root, uint32 rewardsCalculationEndTimestamp) external;\n\n    /**\n     * @notice allow the rewardsUpdater to disable/cancel a pending root submission in case of an error\n     * @param rootIndex The index of the root to be disabled\n     */\n    function disableRoot(uint32 rootIndex) external;\n\n    /**\n     * @notice Sets the address of the entity that can call `processClaim` on behalf of the earner (msg.sender)\n     * @param claimer The address of the entity that can call `processClaim` on behalf of the earner\n     * @dev Only callable by the `earner`\n     */\n    function setClaimerFor(address claimer) external;\n\n    /**\n     * @notice Sets the delay in timestamp before a posted root can be claimed against\n     * @dev Only callable by the contract owner\n     * @param _activationDelay The new value for activationDelay\n     */\n    function setActivationDelay(uint32 _activationDelay) external;\n\n    /**\n     * @notice Sets the default split for all operators across all avss.\n     * @param split The default split for all operators across all avss in bips.\n     * @dev Only callable by the contract owner.\n     */\n    function setDefaultOperatorSplit(uint16 split) external;\n\n    /**\n     * @notice Sets the split for a specific operator for a specific avs\n     * @param operator The operator who is setting the split\n     * @param avs The avs for which the split is being set by the operator\n     * @param split The split for the operator for the specific avs in bips.\n     * @dev Only callable by the operator\n     * @dev Split has to be between 0 and 10000 bips (inclusive)\n     * @dev The split will be activated after the activation delay\n     */\n    function setOperatorAVSSplit(address operator, address avs, uint16 split) external;\n\n    /**\n     * @notice Sets the split for a specific operator for Programmatic Incentives.\n     * @param operator The operator on behalf of which the split is being set.\n     * @param split The split for the operator for Programmatic Incentives in bips.\n     * @dev Only callable by the operator\n     * @dev Split has to be between 0 and 10000 bips (inclusive)\n     * @dev The split will be activated after the activation delay\n     */\n    function setOperatorPISplit(address operator, uint16 split) external;\n\n    /**\n     * @notice Sets the permissioned `rewardsUpdater` address which can post new roots\n     * @dev Only callable by the contract owner\n     * @param _rewardsUpdater The address of the new rewardsUpdater\n     */\n    function setRewardsUpdater(address _rewardsUpdater) external;\n\n    /**\n     * @notice Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission\n     * @dev Only callable by the contract owner\n     * @param _submitter The address of the rewardsForAllSubmitter\n     * @param _newValue The new value for isRewardsForAllSubmitter\n     */\n    function setRewardsForAllSubmitter(address _submitter, bool _newValue) external;\n\n    /**\n     * @notice Getter function for the current EIP-712 domain separator for this contract.\n     *\n     * @dev The domain separator will change in the event of a fork that changes the ChainID.\n     * @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n     * for more detailed information please read EIP-712.\n     */\n    function domainSeparator() external view returns (bytes32);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\n/**\n * @title The interface for common signature utilities.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n */\ninterface ISignatureUtils {\n    // @notice Struct that bundles together a signature and an expiration time for the signature. Used primarily for stack management.\n    struct SignatureWithExpiry {\n        // the signature itself, formatted as a single bytes object\n        bytes signature;\n        // the expiration timestamp (UTC) of the signature\n        uint256 expiry;\n    }\n\n    // @notice Struct that bundles together a signature, a salt for uniqueness, and an expiration time for the signature. Used primarily for stack management.\n    struct SignatureWithSaltAndExpiry {\n        // the signature itself, formatted as a single bytes object\n        bytes signature;\n        // the salt used to generate the signature\n        bytes32 salt;\n        // the expiration timestamp (UTC) of the signature\n        uint256 expiry;\n    }\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"./IStrategyManager.sol\";\nimport \"./IDelegationManager.sol\";\n\n/**\n * @title Interface for the primary 'slashing' contract for EigenLayer.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @notice See the `Slasher` contract itself for implementation details.\n */\ninterface ISlasher {\n    // struct used to store information about the current state of an operator's obligations to middlewares they are serving\n    struct MiddlewareTimes {\n        // The update block for the middleware whose most recent update was earliest, i.e. the 'stalest' update out of all middlewares the operator is serving\n        uint32 stalestUpdateBlock;\n        // The latest 'serveUntilBlock' from all of the middleware that the operator is serving\n        uint32 latestServeUntilBlock;\n    }\n\n    // struct used to store details relevant to a single middleware that an operator has opted-in to serving\n    struct MiddlewareDetails {\n        // the block at which the contract begins being able to finalize the operator's registration with the service via calling `recordFirstStakeUpdate`\n        uint32 registrationMayBeginAtBlock;\n        // the block before which the contract is allowed to slash the user\n        uint32 contractCanSlashOperatorUntilBlock;\n        // the block at which the middleware's view of the operator's stake was most recently updated\n        uint32 latestUpdateBlock;\n    }\n\n    /// @notice Emitted when a middleware times is added to `operator`'s array.\n    event MiddlewareTimesAdded(\n        address operator, uint256 index, uint32 stalestUpdateBlock, uint32 latestServeUntilBlock\n    );\n\n    /// @notice Emitted when `operator` begins to allow `contractAddress` to slash them.\n    event OptedIntoSlashing(address indexed operator, address indexed contractAddress);\n\n    /// @notice Emitted when `contractAddress` signals that it will no longer be able to slash `operator` after the `contractCanSlashOperatorUntilBlock`.\n    event SlashingAbilityRevoked(\n        address indexed operator, address indexed contractAddress, uint32 contractCanSlashOperatorUntilBlock\n    );\n\n    /**\n     * @notice Emitted when `slashingContract` 'freezes' the `slashedOperator`.\n     * @dev The `slashingContract` must have permission to slash the `slashedOperator`, i.e. `canSlash(slasherOperator, slashingContract)` must return 'true'.\n     */\n    event OperatorFrozen(address indexed slashedOperator, address indexed slashingContract);\n\n    /// @notice Emitted when `previouslySlashedAddress` is 'unfrozen', allowing them to again move deposited funds within EigenLayer.\n    event FrozenStatusReset(address indexed previouslySlashedAddress);\n\n    /**\n     * @notice Gives the `contractAddress` permission to slash the funds of the caller.\n     * @dev Typically, this function must be called prior to registering for a middleware.\n     */\n    function optIntoSlashing(address contractAddress) external;\n\n    /**\n     * @notice Used for 'slashing' a certain operator.\n     * @param toBeFrozen The operator to be frozen.\n     * @dev Technically the operator is 'frozen' (hence the name of this function), and then subject to slashing pending a decision by a human-in-the-loop.\n     * @dev The operator must have previously given the caller (which should be a contract) the ability to slash them, through a call to `optIntoSlashing`.\n     */\n    function freezeOperator(address toBeFrozen) external;\n\n    /**\n     * @notice Removes the 'frozen' status from each of the `frozenAddresses`\n     * @dev Callable only by the contract owner (i.e. governance).\n     */\n    function resetFrozenStatus(address[] calldata frozenAddresses) external;\n\n    /**\n     * @notice this function is a called by middlewares during an operator's registration to make sure the operator's stake at registration\n     *         is slashable until serveUntil\n     * @param operator the operator whose stake update is being recorded\n     * @param serveUntilBlock the block until which the operator's stake at the current block is slashable\n     * @dev adds the middleware's slashing contract to the operator's linked list\n     */\n    function recordFirstStakeUpdate(address operator, uint32 serveUntilBlock) external;\n\n    /**\n     * @notice this function is a called by middlewares during a stake update for an operator (perhaps to free pending withdrawals)\n     *         to make sure the operator's stake at updateBlock is slashable until serveUntil\n     * @param operator the operator whose stake update is being recorded\n     * @param updateBlock the block for which the stake update is being recorded\n     * @param serveUntilBlock the block until which the operator's stake at updateBlock is slashable\n     * @param insertAfter the element of the operators linked list that the currently updating middleware should be inserted after\n     * @dev insertAfter should be calculated offchain before making the transaction that calls this. this is subject to race conditions,\n     *      but it is anticipated to be rare and not detrimental.\n     */\n    function recordStakeUpdate(\n        address operator,\n        uint32 updateBlock,\n        uint32 serveUntilBlock,\n        uint256 insertAfter\n    ) external;\n\n    /**\n     * @notice this function is a called by middlewares during an operator's deregistration to make sure the operator's stake at deregistration\n     *         is slashable until serveUntil\n     * @param operator the operator whose stake update is being recorded\n     * @param serveUntilBlock the block until which the operator's stake at the current block is slashable\n     * @dev removes the middleware's slashing contract to the operator's linked list and revokes the middleware's (i.e. caller's) ability to\n     * slash `operator` once `serveUntil` is reached\n     */\n    function recordLastStakeUpdateAndRevokeSlashingAbility(address operator, uint32 serveUntilBlock) external;\n\n    /// @notice The StrategyManager contract of EigenLayer\n    function strategyManager() external view returns (IStrategyManager);\n\n    /// @notice The DelegationManager contract of EigenLayer\n    function delegation() external view returns (IDelegationManager);\n\n    /**\n     * @notice Used to determine whether `staker` is actively 'frozen'. If a staker is frozen, then they are potentially subject to\n     * slashing of their funds, and cannot cannot deposit or withdraw from the strategyManager until the slashing process is completed\n     * and the staker's status is reset (to 'unfrozen').\n     * @param staker The staker of interest.\n     * @return Returns 'true' if `staker` themselves has their status set to frozen, OR if the staker is delegated\n     * to an operator who has their status set to frozen. Otherwise returns 'false'.\n     */\n    function isFrozen(address staker) external view returns (bool);\n\n    /// @notice Returns true if `slashingContract` is currently allowed to slash `toBeSlashed`.\n    function canSlash(address toBeSlashed, address slashingContract) external view returns (bool);\n\n    /// @notice Returns the block until which `serviceContract` is allowed to slash the `operator`.\n    function contractCanSlashOperatorUntilBlock(\n        address operator,\n        address serviceContract\n    ) external view returns (uint32);\n\n    /// @notice Returns the block at which the `serviceContract` last updated its view of the `operator`'s stake\n    function latestUpdateBlock(address operator, address serviceContract) external view returns (uint32);\n\n    /// @notice A search routine for finding the correct input value of `insertAfter` to `recordStakeUpdate` / `_updateMiddlewareList`.\n    function getCorrectValueForInsertAfter(address operator, uint32 updateBlock) external view returns (uint256);\n\n    /**\n     * @notice Returns 'true' if `operator` can currently complete a withdrawal started at the `withdrawalStartBlock`, with `middlewareTimesIndex` used\n     * to specify the index of a `MiddlewareTimes` struct in the operator's list (i.e. an index in `operatorToMiddlewareTimes[operator]`). The specified\n     * struct is consulted as proof of the `operator`'s ability (or lack thereof) to complete the withdrawal.\n     * This function will return 'false' if the operator cannot currently complete a withdrawal started at the `withdrawalStartBlock`, *or* in the event\n     * that an incorrect `middlewareTimesIndex` is supplied, even if one or more correct inputs exist.\n     * @param operator Either the operator who queued the withdrawal themselves, or if the withdrawing party is a staker who delegated to an operator,\n     * this address is the operator *who the staker was delegated to* at the time of the `withdrawalStartBlock`.\n     * @param withdrawalStartBlock The block number at which the withdrawal was initiated.\n     * @param middlewareTimesIndex Indicates an index in `operatorToMiddlewareTimes[operator]` to consult as proof of the `operator`'s ability to withdraw\n     * @dev The correct `middlewareTimesIndex` input should be computable off-chain.\n     */\n    function canWithdraw(\n        address operator,\n        uint32 withdrawalStartBlock,\n        uint256 middlewareTimesIndex\n    ) external returns (bool);\n\n    /**\n     * operator =>\n     *  [\n     *      (\n     *          the least recent update block of all of the middlewares it's serving/served,\n     *          latest time that the stake bonded at that update needed to serve until\n     *      )\n     *  ]\n     */\n    function operatorToMiddlewareTimes(\n        address operator,\n        uint256 arrayIndex\n    ) external view returns (MiddlewareTimes memory);\n\n    /// @notice Getter function for fetching `operatorToMiddlewareTimes[operator].length`\n    function middlewareTimesLength(address operator) external view returns (uint256);\n\n    /// @notice Getter function for fetching `operatorToMiddlewareTimes[operator][index].stalestUpdateBlock`.\n    function getMiddlewareTimesIndexStalestUpdateBlock(address operator, uint32 index) external view returns (uint32);\n\n    /// @notice Getter function for fetching `operatorToMiddlewareTimes[operator][index].latestServeUntil`.\n    function getMiddlewareTimesIndexServeUntilBlock(address operator, uint32 index) external view returns (uint32);\n\n    /// @notice Getter function for fetching `_operatorToWhitelistedContractsByUpdate[operator].size`.\n    function operatorWhitelistedContractsLinkedListSize(address operator) external view returns (uint256);\n\n    /// @notice Getter function for fetching a single node in the operator's linked list (`_operatorToWhitelistedContractsByUpdate[operator]`).\n    function operatorWhitelistedContractsLinkedListEntry(\n        address operator,\n        address node\n    ) external view returns (bool, uint256, uint256);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Minimal interface for an `Strategy` contract.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @notice Custom `Strategy` implementations may expand extensively on this interface.\n */\ninterface IStrategy {\n    /**\n     * @notice Used to emit an event for the exchange rate between 1 share and underlying token in a strategy contract\n     * @param rate is the exchange rate in wad 18 decimals\n     * @dev Tokens that do not have 18 decimals must have offchain services scale the exchange rate by the proper magnitude\n     */\n    event ExchangeRateEmitted(uint256 rate);\n\n    /**\n     * Used to emit the underlying token and its decimals on strategy creation\n     * @notice token\n     * @param token is the ERC20 token of the strategy\n     * @param decimals are the decimals of the ERC20 token in the strategy\n     */\n    event StrategyTokenSet(IERC20 token, uint8 decimals);\n\n    /**\n     * @notice Used to deposit tokens into this Strategy\n     * @param token is the ERC20 token being deposited\n     * @param amount is the amount of token being deposited\n     * @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n     * `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.\n     * @return newShares is the number of new shares issued at the current exchange ratio.\n     */\n    function deposit(IERC20 token, uint256 amount) external returns (uint256);\n\n    /**\n     * @notice Used to withdraw tokens from this Strategy, to the `recipient`'s address\n     * @param recipient is the address to receive the withdrawn funds\n     * @param token is the ERC20 token being transferred out\n     * @param amountShares is the amount of shares being withdrawn\n     * @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n     * other functions, and individual share balances are recorded in the strategyManager as well.\n     */\n    function withdraw(address recipient, IERC20 token, uint256 amountShares) external;\n\n    /**\n     * @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n     * @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n     * @param amountShares is the amount of shares to calculate its conversion into the underlying token\n     * @return The amount of underlying tokens corresponding to the input `amountShares`\n     * @dev Implementation for these functions in particular may vary significantly for different strategies\n     */\n    function sharesToUnderlying(uint256 amountShares) external returns (uint256);\n\n    /**\n     * @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n     * @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n     * @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n     * @return The amount of underlying tokens corresponding to the input `amountShares`\n     * @dev Implementation for these functions in particular may vary significantly for different strategies\n     */\n    function underlyingToShares(uint256 amountUnderlying) external returns (uint256);\n\n    /**\n     * @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n     * this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\n     */\n    function userUnderlying(address user) external returns (uint256);\n\n    /**\n     * @notice convenience function for fetching the current total shares of `user` in this strategy, by\n     * querying the `strategyManager` contract\n     */\n    function shares(address user) external view returns (uint256);\n\n    /**\n     * @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n     * @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n     * @param amountShares is the amount of shares to calculate its conversion into the underlying token\n     * @return The amount of shares corresponding to the input `amountUnderlying`\n     * @dev Implementation for these functions in particular may vary significantly for different strategies\n     */\n    function sharesToUnderlyingView(uint256 amountShares) external view returns (uint256);\n\n    /**\n     * @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n     * @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n     * @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n     * @return The amount of shares corresponding to the input `amountUnderlying`\n     * @dev Implementation for these functions in particular may vary significantly for different strategies\n     */\n    function underlyingToSharesView(uint256 amountUnderlying) external view returns (uint256);\n\n    /**\n     * @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n     * this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\n     */\n    function userUnderlyingView(address user) external view returns (uint256);\n\n    /// @notice The underlying token for shares in this Strategy\n    function underlyingToken() external view returns (IERC20);\n\n    /// @notice The total number of extant shares in this Strategy\n    function totalShares() external view returns (uint256);\n\n    /// @notice Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail.\n    function explanation() external view returns (string memory);\n}\n"},"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport \"./IStrategy.sol\";\nimport \"./ISlasher.sol\";\nimport \"./IDelegationManager.sol\";\nimport \"./IEigenPodManager.sol\";\n\n/**\n * @title Interface for the primary entrypoint for funds into EigenLayer.\n * @author Layr Labs, Inc.\n * @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n * @notice See the `StrategyManager` contract itself for implementation details.\n */\ninterface IStrategyManager {\n    /**\n     * @notice Emitted when a new deposit occurs on behalf of `staker`.\n     * @param staker Is the staker who is depositing funds into EigenLayer.\n     * @param strategy Is the strategy that `staker` has deposited into.\n     * @param token Is the token that `staker` deposited.\n     * @param shares Is the number of new shares `staker` has been granted in `strategy`.\n     */\n    event Deposit(address staker, IERC20 token, IStrategy strategy, uint256 shares);\n\n    /// @notice Emitted when `thirdPartyTransfersForbidden` is updated for a strategy and value by the owner\n    event UpdatedThirdPartyTransfersForbidden(IStrategy strategy, bool value);\n\n    /// @notice Emitted when the `strategyWhitelister` is changed\n    event StrategyWhitelisterChanged(address previousAddress, address newAddress);\n\n    /// @notice Emitted when a strategy is added to the approved list of strategies for deposit\n    event StrategyAddedToDepositWhitelist(IStrategy strategy);\n\n    /// @notice Emitted when a strategy is removed from the approved list of strategies for deposit\n    event StrategyRemovedFromDepositWhitelist(IStrategy strategy);\n\n    /**\n     * @notice Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\n     * @param strategy is the specified strategy where deposit is to be made,\n     * @param token is the denomination in which the deposit is to be made,\n     * @param amount is the amount of token to be deposited in the strategy by the staker\n     * @return shares The amount of new shares in the `strategy` created as part of the action.\n     * @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n     * @dev Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen).\n     *\n     * WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n     *          where the token balance and corresponding strategy shares are not in sync upon reentrancy.\n     */\n    function depositIntoStrategy(IStrategy strategy, IERC20 token, uint256 amount) external returns (uint256 shares);\n\n    /**\n     * @notice Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`,\n     * who must sign off on the action.\n     * Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed\n     * purely to help one address deposit 'for' another.\n     * @param strategy is the specified strategy where deposit is to be made,\n     * @param token is the denomination in which the deposit is to be made,\n     * @param amount is the amount of token to be deposited in the strategy by the staker\n     * @param staker the staker that the deposited assets will be credited to\n     * @param expiry the timestamp at which the signature expires\n     * @param signature is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward\n     * following EIP-1271 if the `staker` is a contract\n     * @return shares The amount of new shares in the `strategy` created as part of the action.\n     * @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n     * @dev A signature is required for this function to eliminate the possibility of griefing attacks, specifically those\n     * targeting stakers who may be attempting to undelegate.\n     * @dev Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy\n     *\n     *  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n     *          where the token balance and corresponding strategy shares are not in sync upon reentrancy\n     */\n    function depositIntoStrategyWithSignature(\n        IStrategy strategy,\n        IERC20 token,\n        uint256 amount,\n        address staker,\n        uint256 expiry,\n        bytes memory signature\n    ) external returns (uint256 shares);\n\n    /// @notice Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue\n    function removeShares(address staker, IStrategy strategy, uint256 shares) external;\n\n    /// @notice Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue\n    function addShares(address staker, IERC20 token, IStrategy strategy, uint256 shares) external;\n\n    /// @notice Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient\n    function withdrawSharesAsTokens(address recipient, IStrategy strategy, uint256 shares, IERC20 token) external;\n\n    /// @notice Returns the current shares of `user` in `strategy`\n    function stakerStrategyShares(address user, IStrategy strategy) external view returns (uint256 shares);\n\n    /**\n     * @notice Get all details on the staker's deposits and corresponding shares\n     * @param staker The staker of interest, whose deposits this function will fetch\n     * @return (staker's strategies, shares in these strategies)\n     */\n    function getDeposits(address staker) external view returns (IStrategy[] memory, uint256[] memory);\n\n    /// @notice Simple getter function that returns `stakerStrategyList[staker].length`.\n    function stakerStrategyListLength(address staker) external view returns (uint256);\n\n    /**\n     * @notice Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\n     * @param strategiesToWhitelist Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\n     * @param thirdPartyTransfersForbiddenValues bool values to set `thirdPartyTransfersForbidden` to for each strategy\n     */\n    function addStrategiesToDepositWhitelist(\n        IStrategy[] calldata strategiesToWhitelist,\n        bool[] calldata thirdPartyTransfersForbiddenValues\n    ) external;\n\n    /**\n     * @notice Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\n     * @param strategiesToRemoveFromWhitelist Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)\n     */\n    function removeStrategiesFromDepositWhitelist(IStrategy[] calldata strategiesToRemoveFromWhitelist) external;\n\n    /**\n     * If true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker\n     * and also when performing DelegationManager.queueWithdrawals, a staker can only withdraw to themselves.\n     * Defaulted to false for all existing strategies.\n     * @param strategy The strategy to set `thirdPartyTransfersForbidden` value to\n     * @param value bool value to set `thirdPartyTransfersForbidden` to\n     */\n    function setThirdPartyTransfersForbidden(IStrategy strategy, bool value) external;\n\n    /// @notice Returns the single, central Delegation contract of EigenLayer\n    function delegation() external view returns (IDelegationManager);\n\n    /// @notice Returns the single, central Slasher contract of EigenLayer\n    function slasher() external view returns (ISlasher);\n\n    /// @notice Returns the EigenPodManager contract of EigenLayer\n    function eigenPodManager() external view returns (IEigenPodManager);\n\n    /// @notice Returns the address of the `strategyWhitelister`\n    function strategyWhitelister() external view returns (address);\n\n    /// @notice Returns bool for whether or not `strategy` is whitelisted for deposit\n    function strategyIsWhitelistedForDeposit(IStrategy strategy) external view returns (bool);\n\n    /**\n     * @notice Owner-only function to change the `strategyWhitelister` address.\n     * @param newStrategyWhitelister new address for the `strategyWhitelister`.\n     */\n    function setStrategyWhitelister(address newStrategyWhitelister) external;\n\n    /**\n     * @notice Returns bool for whether or not `strategy` enables credit transfers. i.e enabling\n     * depositIntoStrategyWithSignature calls or queueing withdrawals to a different address than the staker.\n     */\n    function thirdPartyTransfersForbidden(IStrategy strategy) external view returns (bool);\n\n    /**\n     * @notice Getter function for the current EIP-712 domain separator for this contract.\n     * @dev The domain separator will change in the event of a fork that changes the ChainID.\n     */\n    function domainSeparator() external view returns (bytes32);\n}\n"},"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.0;\n\nimport \"./Merkle.sol\";\nimport \"../libraries/Endian.sol\";\n\n//Utility library for parsing and PHASE0 beacon chain block headers\n//SSZ Spec: https://github.com/ethereum/consensus-specs/blob/dev/ssz/simple-serialize.md#merkleization\n//BeaconBlockHeader Spec: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#beaconblockheader\n//BeaconState Spec: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#beaconstate\nlibrary BeaconChainProofs {\n    /// @notice Heights of various merkle trees in the beacon chain\n    /// - beaconBlockRoot\n    /// |                                             HEIGHT: BEACON_BLOCK_HEADER_TREE_HEIGHT\n    /// -- beaconStateRoot\n    /// |                                             HEIGHT: BEACON_STATE_TREE_HEIGHT\n    /// validatorContainerRoot, balanceContainerRoot\n    /// |                       |                     HEIGHT: BALANCE_TREE_HEIGHT\n    /// |                       individual balances\n    /// |                                             HEIGHT: VALIDATOR_TREE_HEIGHT\n    /// individual validators\n    uint256 internal constant BEACON_BLOCK_HEADER_TREE_HEIGHT = 3;\n    uint256 internal constant BEACON_STATE_TREE_HEIGHT = 5;\n    uint256 internal constant BALANCE_TREE_HEIGHT = 38;\n    uint256 internal constant VALIDATOR_TREE_HEIGHT = 40;\n\n    /// @notice Index of the beaconStateRoot in the `BeaconBlockHeader` container\n    ///\n    /// BeaconBlockHeader = [..., state_root, ...]\n    ///                      0...      3\n    ///\n    /// (See https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#beaconblockheader)\n    uint256 internal constant STATE_ROOT_INDEX = 3;\n\n    /// @notice Indices for fields in the `BeaconState` container\n    ///\n    /// BeaconState = [..., validators, balances, ...]\n    ///                0...     11         12\n    ///\n    /// (See https://github.com/ethereum/consensus-specs/blob/dev/specs/capella/beacon-chain.md#beaconstate)\n    uint256 internal constant VALIDATOR_CONTAINER_INDEX = 11;\n    uint256 internal constant BALANCE_CONTAINER_INDEX = 12;\n\n    /// @notice Number of fields in the `Validator` container\n    /// (See https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator)\n    uint256 internal constant VALIDATOR_FIELDS_LENGTH = 8;\n\n    /// @notice Indices for fields in the `Validator` container\n    uint256 internal constant VALIDATOR_PUBKEY_INDEX = 0;\n    uint256 internal constant VALIDATOR_WITHDRAWAL_CREDENTIALS_INDEX = 1;\n    uint256 internal constant VALIDATOR_BALANCE_INDEX = 2;\n    uint256 internal constant VALIDATOR_SLASHED_INDEX = 3;\n    uint256 internal constant VALIDATOR_ACTIVATION_EPOCH_INDEX = 5;\n    uint256 internal constant VALIDATOR_EXIT_EPOCH_INDEX = 6;\n\n    /// @notice Slot/Epoch timings\n    uint64 internal constant SECONDS_PER_SLOT = 12;\n    uint64 internal constant SLOTS_PER_EPOCH = 32;\n    uint64 internal constant SECONDS_PER_EPOCH = SLOTS_PER_EPOCH * SECONDS_PER_SLOT;\n\n    /// @notice `FAR_FUTURE_EPOCH` is used as the default value for certain `Validator`\n    /// fields when a `Validator` is first created on the beacon chain\n    uint64 internal constant FAR_FUTURE_EPOCH = type(uint64).max;\n    bytes8 internal constant UINT64_MASK = 0xffffffffffffffff;\n\n    /// @notice Contains a beacon state root and a merkle proof verifying its inclusion under a beacon block root\n    struct StateRootProof {\n        bytes32 beaconStateRoot;\n        bytes proof;\n    }\n\n    /// @notice Contains a validator's fields and a merkle proof of their inclusion under a beacon state root\n    struct ValidatorProof {\n        bytes32[] validatorFields;\n        bytes proof;\n    }\n\n    /// @notice Contains a beacon balance container root and a proof of this root under a beacon block root\n    struct BalanceContainerProof {\n        bytes32 balanceContainerRoot;\n        bytes proof;\n    }\n\n    /// @notice Contains a validator balance root and a proof of its inclusion under a balance container root\n    struct BalanceProof {\n        bytes32 pubkeyHash;\n        bytes32 balanceRoot;\n        bytes proof;\n    }\n\n    /**\n     *\n     *              VALIDATOR FIELDS -> BEACON STATE ROOT -> BEACON BLOCK ROOT\n     *\n     */\n\n    /// @notice Verify a merkle proof of the beacon state root against a beacon block root\n    /// @param beaconBlockRoot merkle root of the beacon block\n    /// @param proof the beacon state root and merkle proof of its inclusion under `beaconBlockRoot`\n    function verifyStateRoot(bytes32 beaconBlockRoot, StateRootProof calldata proof) internal view {\n        require(\n            proof.proof.length == 32 * (BEACON_BLOCK_HEADER_TREE_HEIGHT),\n            \"BeaconChainProofs.verifyStateRoot: Proof has incorrect length\"\n        );\n\n        /// This merkle proof verifies the `beaconStateRoot` under the `beaconBlockRoot`\n        /// - beaconBlockRoot\n        /// |                            HEIGHT: BEACON_BLOCK_HEADER_TREE_HEIGHT\n        /// -- beaconStateRoot\n        require(\n            Merkle.verifyInclusionSha256({\n                proof: proof.proof,\n                root: beaconBlockRoot,\n                leaf: proof.beaconStateRoot,\n                index: STATE_ROOT_INDEX\n            }),\n            \"BeaconChainProofs.verifyStateRoot: Invalid state root merkle proof\"\n        );\n    }\n\n    /// @notice Verify a merkle proof of a validator container against a `beaconStateRoot`\n    /// @dev This proof starts at a validator's container root, proves through the validator container root,\n    /// and continues proving to the root of the `BeaconState`\n    /// @dev See https://eth2book.info/capella/part3/containers/dependencies/#validator for info on `Validator` containers\n    /// @dev See https://eth2book.info/capella/part3/containers/state/#beaconstate for info on `BeaconState` containers\n    /// @param beaconStateRoot merkle root of the `BeaconState` container\n    /// @param validatorFields an individual validator's fields. These are merklized to form a `validatorRoot`,\n    /// which is used as the leaf to prove against `beaconStateRoot`\n    /// @param validatorFieldsProof a merkle proof of inclusion of `validatorFields` under `beaconStateRoot`\n    /// @param validatorIndex the validator's unique index\n    function verifyValidatorFields(\n        bytes32 beaconStateRoot,\n        bytes32[] calldata validatorFields,\n        bytes calldata validatorFieldsProof,\n        uint40 validatorIndex\n    ) internal view {\n        require(\n            validatorFields.length == VALIDATOR_FIELDS_LENGTH,\n            \"BeaconChainProofs.verifyValidatorFields: Validator fields has incorrect length\"\n        );\n\n        /// Note: the reason we use `VALIDATOR_TREE_HEIGHT + 1` here is because the merklization process for\n        /// this container includes hashing the root of the validator tree with the length of the validator list\n        require(\n            validatorFieldsProof.length == 32 * ((VALIDATOR_TREE_HEIGHT + 1) + BEACON_STATE_TREE_HEIGHT),\n            \"BeaconChainProofs.verifyValidatorFields: Proof has incorrect length\"\n        );\n\n        // Merkleize `validatorFields` to get the leaf to prove\n        bytes32 validatorRoot = Merkle.merkleizeSha256(validatorFields);\n\n        /// This proof combines two proofs, so its index accounts for the relative position of leaves in two trees:\n        /// - beaconStateRoot\n        /// |                            HEIGHT: BEACON_STATE_TREE_HEIGHT\n        /// -- validatorContainerRoot\n        /// |                            HEIGHT: VALIDATOR_TREE_HEIGHT + 1\n        /// ---- validatorRoot\n        uint256 index = (VALIDATOR_CONTAINER_INDEX << (VALIDATOR_TREE_HEIGHT + 1)) | uint256(validatorIndex);\n\n        require(\n            Merkle.verifyInclusionSha256({\n                proof: validatorFieldsProof,\n                root: beaconStateRoot,\n                leaf: validatorRoot,\n                index: index\n            }),\n            \"BeaconChainProofs.verifyValidatorFields: Invalid merkle proof\"\n        );\n    }\n\n    /**\n     *\n     *          VALIDATOR BALANCE -> BALANCE CONTAINER ROOT -> BEACON BLOCK ROOT\n     *\n     */\n\n    /// @notice Verify a merkle proof of the beacon state's balances container against the beacon block root\n    /// @dev This proof starts at the balance container root, proves through the beacon state root, and\n    /// continues proving through the beacon block root. As a result, this proof will contain elements\n    /// of a `StateRootProof` under the same block root, with the addition of proving the balances field\n    /// within the beacon state.\n    /// @dev This is used to make checkpoint proofs more efficient, as a checkpoint will verify multiple balances\n    /// against the same balance container root.\n    /// @param beaconBlockRoot merkle root of the beacon block\n    /// @param proof a beacon balance container root and merkle proof of its inclusion under `beaconBlockRoot`\n    function verifyBalanceContainer(bytes32 beaconBlockRoot, BalanceContainerProof calldata proof) internal view {\n        require(\n            proof.proof.length == 32 * (BEACON_BLOCK_HEADER_TREE_HEIGHT + BEACON_STATE_TREE_HEIGHT),\n            \"BeaconChainProofs.verifyBalanceContainer: Proof has incorrect length\"\n        );\n\n        /// This proof combines two proofs, so its index accounts for the relative position of leaves in two trees:\n        /// - beaconBlockRoot\n        /// |                            HEIGHT: BEACON_BLOCK_HEADER_TREE_HEIGHT\n        /// -- beaconStateRoot\n        /// |                            HEIGHT: BEACON_STATE_TREE_HEIGHT\n        /// ---- balancesContainerRoot\n        uint256 index = (STATE_ROOT_INDEX << (BEACON_STATE_TREE_HEIGHT)) | BALANCE_CONTAINER_INDEX;\n\n        require(\n            Merkle.verifyInclusionSha256({\n                proof: proof.proof,\n                root: beaconBlockRoot,\n                leaf: proof.balanceContainerRoot,\n                index: index\n            }),\n            \"BeaconChainProofs.verifyBalanceContainer: invalid balance container proof\"\n        );\n    }\n\n    /// @notice Verify a merkle proof of a validator's balance against the beacon state's `balanceContainerRoot`\n    /// @param balanceContainerRoot the merkle root of all validators' current balances\n    /// @param validatorIndex the index of the validator whose balance we are proving\n    /// @param proof the validator's associated balance root and a merkle proof of inclusion under `balanceContainerRoot`\n    /// @return validatorBalanceGwei the validator's current balance (in gwei)\n    function verifyValidatorBalance(\n        bytes32 balanceContainerRoot,\n        uint40 validatorIndex,\n        BalanceProof calldata proof\n    ) internal view returns (uint64 validatorBalanceGwei) {\n        /// Note: the reason we use `BALANCE_TREE_HEIGHT + 1` here is because the merklization process for\n        /// this container includes hashing the root of the balances tree with the length of the balances list\n        require(\n            proof.proof.length == 32 * (BALANCE_TREE_HEIGHT + 1),\n            \"BeaconChainProofs.verifyValidatorBalance: Proof has incorrect length\"\n        );\n\n        /// When merkleized, beacon chain balances are combined into groups of 4 called a `balanceRoot`. The merkle\n        /// proof here verifies that this validator's `balanceRoot` is included in the `balanceContainerRoot`\n        /// - balanceContainerRoot\n        /// |                            HEIGHT: BALANCE_TREE_HEIGHT\n        /// -- balanceRoot\n        uint256 balanceIndex = uint256(validatorIndex / 4);\n\n        require(\n            Merkle.verifyInclusionSha256({\n                proof: proof.proof,\n                root: balanceContainerRoot,\n                leaf: proof.balanceRoot,\n                index: balanceIndex\n            }),\n            \"BeaconChainProofs.verifyValidatorBalance: Invalid merkle proof\"\n        );\n\n        /// Extract the individual validator's balance from the `balanceRoot`\n        return getBalanceAtIndex(proof.balanceRoot, validatorIndex);\n    }\n\n    /**\n     * @notice Parses a balanceRoot to get the uint64 balance of a validator.\n     * @dev During merkleization of the beacon state balance tree, four uint64 values are treated as a single\n     * leaf in the merkle tree. We use validatorIndex % 4 to determine which of the four uint64 values to\n     * extract from the balanceRoot.\n     * @param balanceRoot is the combination of 4 validator balances being proven for\n     * @param validatorIndex is the index of the validator being proven for\n     * @return The validator's balance, in Gwei\n     */\n    function getBalanceAtIndex(bytes32 balanceRoot, uint40 validatorIndex) internal pure returns (uint64) {\n        uint256 bitShiftAmount = (validatorIndex % 4) * 64;\n        return Endian.fromLittleEndianUint64(bytes32((uint256(balanceRoot) << bitShiftAmount)));\n    }\n\n    /// @notice Indices for fields in the `Validator` container:\n    /// 0: pubkey\n    /// 1: withdrawal credentials\n    /// 2: effective balance\n    /// 3: slashed?\n    /// 4: activation eligibility epoch\n    /// 5: activation epoch\n    /// 6: exit epoch\n    /// 7: withdrawable epoch\n    ///\n    /// (See https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator)\n\n    /// @dev Retrieves a validator's pubkey hash\n    function getPubkeyHash(bytes32[] memory validatorFields) internal pure returns (bytes32) {\n        return validatorFields[VALIDATOR_PUBKEY_INDEX];\n    }\n\n    /// @dev Retrieves a validator's withdrawal credentials\n    function getWithdrawalCredentials(bytes32[] memory validatorFields) internal pure returns (bytes32) {\n        return validatorFields[VALIDATOR_WITHDRAWAL_CREDENTIALS_INDEX];\n    }\n\n    /// @dev Retrieves a validator's effective balance (in gwei)\n    function getEffectiveBalanceGwei(bytes32[] memory validatorFields) internal pure returns (uint64) {\n        return Endian.fromLittleEndianUint64(validatorFields[VALIDATOR_BALANCE_INDEX]);\n    }\n\n    /// @dev Retrieves a validator's activation epoch\n    function getActivationEpoch(bytes32[] memory validatorFields) internal pure returns (uint64) {\n        return Endian.fromLittleEndianUint64(validatorFields[VALIDATOR_ACTIVATION_EPOCH_INDEX]);\n    }\n\n    /// @dev Retrieves true IFF a validator is marked slashed\n    function isValidatorSlashed(bytes32[] memory validatorFields) internal pure returns (bool) {\n        return validatorFields[VALIDATOR_SLASHED_INDEX] != 0;\n    }\n\n    /// @dev Retrieves a validator's exit epoch\n    function getExitEpoch(bytes32[] memory validatorFields) internal pure returns (uint64) {\n        return Endian.fromLittleEndianUint64(validatorFields[VALIDATOR_EXIT_EPOCH_INDEX]);\n    }\n}\n"},"eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary Endian {\n    /**\n     * @notice Converts a little endian-formatted uint64 to a big endian-formatted uint64\n     * @param lenum little endian-formatted uint64 input, provided as 'bytes32' type\n     * @return n The big endian-formatted uint64\n     * @dev Note that the input is formatted as a 'bytes32' type (i.e. 256 bits), but it is immediately truncated to a uint64 (i.e. 64 bits)\n     * through a right-shift/shr operation.\n     */\n    function fromLittleEndianUint64(bytes32 lenum) internal pure returns (uint64 n) {\n        // the number needs to be stored in little-endian encoding (ie in bytes 0-8)\n        n = uint64(uint256(lenum >> 192));\n        // forgefmt: disable-next-item\n        return (n >> 56) | \n            ((0x00FF000000000000 & n) >> 40) | \n            ((0x0000FF0000000000 & n) >> 24) | \n            ((0x000000FF00000000 & n) >> 8)  | \n            ((0x00000000FF000000 & n) << 8)  | \n            ((0x0000000000FF0000 & n) << 24) | \n            ((0x000000000000FF00 & n) << 40) | \n            ((0x00000000000000FF & n) << 56);\n    }\n}\n"},"eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"content":"// SPDX-License-Identifier: MIT\n// Adapted from OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary Merkle {\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. The tree is built assuming `leaf` is\n     * the 0 indexed `index`'th leaf from the bottom left of the tree.\n     *\n     * Note this is for a Merkle tree using the keccak/sha3 hash function\n     */\n    function verifyInclusionKeccak(\n        bytes memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        uint256 index\n    ) internal pure returns (bool) {\n        return processInclusionProofKeccak(proof, leaf, index) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. The tree is built assuming `leaf` is\n     * the 0 indexed `index`'th leaf from the bottom left of the tree.\n     * @dev If the proof length is 0 then the leaf hash is returned.\n     *\n     * _Available since v4.4._\n     *\n     * Note this is for a Merkle tree using the keccak/sha3 hash function\n     */\n    function processInclusionProofKeccak(\n        bytes memory proof,\n        bytes32 leaf,\n        uint256 index\n    ) internal pure returns (bytes32) {\n        require(proof.length % 32 == 0, \"Merkle.processInclusionProofKeccak: proof length should be a multiple of 32\");\n        bytes32 computedHash = leaf;\n        for (uint256 i = 32; i <= proof.length; i += 32) {\n            if (index % 2 == 0) {\n                // if ith bit of index is 0, then computedHash is a left sibling\n                assembly {\n                    mstore(0x00, computedHash)\n                    mstore(0x20, mload(add(proof, i)))\n                    computedHash := keccak256(0x00, 0x40)\n                    index := div(index, 2)\n                }\n            } else {\n                // if ith bit of index is 1, then computedHash is a right sibling\n                assembly {\n                    mstore(0x00, mload(add(proof, i)))\n                    mstore(0x20, computedHash)\n                    computedHash := keccak256(0x00, 0x40)\n                    index := div(index, 2)\n                }\n            }\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. The tree is built assuming `leaf` is\n     * the 0 indexed `index`'th leaf from the bottom left of the tree.\n     *\n     * Note this is for a Merkle tree using the sha256 hash function\n     */\n    function verifyInclusionSha256(\n        bytes memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        uint256 index\n    ) internal view returns (bool) {\n        return processInclusionProofSha256(proof, leaf, index) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. The tree is built assuming `leaf` is\n     * the 0 indexed `index`'th leaf from the bottom left of the tree.\n     *\n     * _Available since v4.4._\n     *\n     * Note this is for a Merkle tree using the sha256 hash function\n     */\n    function processInclusionProofSha256(\n        bytes memory proof,\n        bytes32 leaf,\n        uint256 index\n    ) internal view returns (bytes32) {\n        require(\n            proof.length != 0 && proof.length % 32 == 0,\n            \"Merkle.processInclusionProofSha256: proof length should be a non-zero multiple of 32\"\n        );\n        bytes32[1] memory computedHash = [leaf];\n        for (uint256 i = 32; i <= proof.length; i += 32) {\n            if (index % 2 == 0) {\n                // if ith bit of index is 0, then computedHash is a left sibling\n                assembly {\n                    mstore(0x00, mload(computedHash))\n                    mstore(0x20, mload(add(proof, i)))\n                    if iszero(staticcall(sub(gas(), 2000), 2, 0x00, 0x40, computedHash, 0x20)) { revert(0, 0) }\n                    index := div(index, 2)\n                }\n            } else {\n                // if ith bit of index is 1, then computedHash is a right sibling\n                assembly {\n                    mstore(0x00, mload(add(proof, i)))\n                    mstore(0x20, mload(computedHash))\n                    if iszero(staticcall(sub(gas(), 2000), 2, 0x00, 0x40, computedHash, 0x20)) { revert(0, 0) }\n                    index := div(index, 2)\n                }\n            }\n        }\n        return computedHash[0];\n    }\n\n    /**\n     * @notice this function returns the merkle root of a tree created from a set of leaves using sha256 as its hash function\n     *  @param leaves the leaves of the merkle tree\n     *  @return The computed Merkle root of the tree.\n     *  @dev A pre-condition to this function is that leaves.length is a power of two.  If not, the function will merkleize the inputs incorrectly.\n     */\n    function merkleizeSha256(bytes32[] memory leaves) internal pure returns (bytes32) {\n        //there are half as many nodes in the layer above the leaves\n        uint256 numNodesInLayer = leaves.length / 2;\n        //create a layer to store the internal nodes\n        bytes32[] memory layer = new bytes32[](numNodesInLayer);\n        //fill the layer with the pairwise hashes of the leaves\n        for (uint256 i = 0; i < numNodesInLayer; i++) {\n            layer[i] = sha256(abi.encodePacked(leaves[2 * i], leaves[2 * i + 1]));\n        }\n        //the next layer above has half as many nodes\n        numNodesInLayer /= 2;\n        //while we haven't computed the root\n        while (numNodesInLayer != 0) {\n            //overwrite the first numNodesInLayer nodes in layer with the pairwise hashes of their children\n            for (uint256 i = 0; i < numNodesInLayer; i++) {\n                layer[i] = sha256(abi.encodePacked(layer[2 * i], layer[2 * i + 1]));\n            }\n            //the next layer above has half as many nodes\n            numNodesInLayer /= 2;\n        }\n        //the first node in the layer is the root\n        return layer[0];\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[989],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":990,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$989_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":716,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$989_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":747,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$989_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":716,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$989_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":808,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$989_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":721,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,721,734,1416,1419],"usedEvents":[219,700]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1656],"ERC1967Utils":[989],"IBeacon":[999],"StorageSlot":[1766]},"id":990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":990,"sourceUnit":1000,"src":"140:46:5","symbolAliases":[{"foreign":{"id":689,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":990,"sourceUnit":1657,"src":"187:48:5","symbolAliases":[{"foreign":{"id":691,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"195:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":990,"sourceUnit":1767,"src":"236:56:5","symbolAliases":[{"foreign":{"id":693,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"244:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"294:154:5","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":989,"linearizedBaseContracts":[989],"name":"ERC1967Utils","nameLocation":"457:12:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"660:68:5","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":700,"name":"Upgraded","nameLocation":"739:8:5","nodeType":"EventDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:5","nodeType":"VariableDeclaration","scope":700,"src":"748:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:5"},"src":"733:47:5"},{"anonymous":false,"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"786:67:5","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":707,"name":"AdminChanged","nameLocation":"864:12:5","nodeType":"EventDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:5","nodeType":"VariableDeclaration","scope":707,"src":"877:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:5","nodeType":"VariableDeclaration","scope":707,"src":"900:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:5"},"src":"858:60:5"},{"anonymous":false,"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"924:59:5","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":712,"name":"BeaconUpgraded","nameLocation":"994:14:5","nodeType":"EventDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:5","nodeType":"VariableDeclaration","scope":712,"src":"1009:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:5"},"src":"988:45:5"},{"constant":true,"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"1039:170:5","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":716,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:5","nodeType":"VariableDeclaration","scope":989,"src":"1279:114:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:5","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"1400:69:5","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":721,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:5","nodeType":"ErrorDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:5","nodeType":"VariableDeclaration","scope":721,"src":"1509:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:5"},"src":"1474:59:5"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1539:60:5","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":726,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:5","nodeType":"ErrorDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"admin","nameLocation":"1638:5:5","nodeType":"VariableDeclaration","scope":726,"src":"1630:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:5"},"src":"1604:41:5"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"1651:61:5","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":731,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:5","nodeType":"ErrorDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:5","nodeType":"VariableDeclaration","scope":731,"src":"1744:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:5"},"src":"1717:43:5"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1766:82:5","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":734,"name":"ERC1967NonPayable","nameLocation":"1859:17:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"1876:2:5"},"src":"1853:26:5"},{"body":{"id":746,"nodeType":"Block","src":"2018:77:5","statements":[{"expression":{"expression":{"arguments":[{"id":742,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2062:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":740,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"2035:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1766_$","typeString":"type(library StorageSlot)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"2035:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1662_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"2035:53:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":739,"id":745,"nodeType":"Return","src":"2028:60:5"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"1885:67:5","text":" @dev Returns the current implementation address."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:5","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"1983:2:5"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"2009:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:5"},"scope":989,"src":"1957:138:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":773,"nodeType":"Block","src":"2249:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":753,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2263:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:5","memberName":"code","nodeType":"MemberAccess","src":"2263:22:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:5","memberName":"length","nodeType":"MemberAccess","src":"2263:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"IfStatement","src":"2259:119:5","trueBody":{"id":762,"nodeType":"Block","src":"2299:79:5","statements":[{"errorCall":{"arguments":[{"id":759,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2349:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":758,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2320:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"RevertStatement","src":"2313:54:5"}]}},{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":767,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2414:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":764,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"2387:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1766_$","typeString":"type(library StorageSlot)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"2387:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1662_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"2387:53:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":770,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"2443:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":772,"nodeType":"ExpressionStatement","src":"2387:73:5"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"2101:80:5","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":774,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:5","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:5","nodeType":"VariableDeclaration","scope":774,"src":"2214:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:5"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"2249:0:5"},"scope":989,"src":"2186:281:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":807,"nodeType":"Block","src":"2860:254:5","statements":[{"expression":{"arguments":[{"id":783,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2889:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":782,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"2870:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"2870:37:5"},{"eventCall":{"arguments":[{"id":787,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2931:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":786,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2922:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"EmitStatement","src":"2917:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2964:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:5","memberName":"length","nodeType":"MemberAccess","src":"2964:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":805,"nodeType":"Block","src":"3065:43:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":802,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"3079:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"3079:18:5"}]},"id":806,"nodeType":"IfStatement","src":"2960:148:5","trueBody":{"id":801,"nodeType":"Block","src":"2981:78:5","statements":[{"expression":{"arguments":[{"id":797,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3024:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3043:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":794,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2995:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1656_$","typeString":"type(library Address)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"2995:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":800,"nodeType":"ExpressionStatement","src":"2995:53:5"}]}}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"2473:301:5","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:5","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:5","nodeType":"VariableDeclaration","scope":808,"src":"2805:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"data","nameLocation":"2845:4:5","nodeType":"VariableDeclaration","scope":808,"src":"2832:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":778,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:5"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"2860:0:5"},"scope":989,"src":"2779:335:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"3120:145:5","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":812,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:5","nodeType":"VariableDeclaration","scope":989,"src":"3335:105:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:5","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"3844:68:5","statements":[{"expression":{"expression":{"arguments":[{"id":820,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"3888:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":818,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3861:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1766_$","typeString":"type(library StorageSlot)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"3861:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1662_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"3861:44:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":817,"id":823,"nodeType":"Return","src":"3854:51:5"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"3447:340:5","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:5","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"3809:2:5"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"3835:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:5"},"scope":989,"src":"3792:120:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":855,"nodeType":"Block","src":"4039:172:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4053:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:5","typeDescriptions":{}}},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":845,"nodeType":"IfStatement","src":"4049:91:5","trueBody":{"id":844,"nodeType":"Block","src":"4077:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:5","typeDescriptions":{}}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":837,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"4098:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"RevertStatement","src":"4091:38:5"}]}},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":849,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"4176:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":846,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4149:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1766_$","typeString":"type(library StorageSlot)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"4149:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1662_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"4149:44:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4196:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":854,"nodeType":"ExpressionStatement","src":"4149:55:5"}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"3918:71:5","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":856,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:5","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:5","nodeType":"VariableDeclaration","scope":856,"src":"4013:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:5"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"4039:0:5"},"scope":989,"src":"3994:217:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":872,"nodeType":"Block","src":"4379:85:5","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4407:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4419:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":862,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4394:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"EmitStatement","src":"4389:39:5"},{"expression":{"arguments":[{"id":869,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4448:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4438:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"4438:19:5"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"4217:109:5","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:5","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:5","nodeType":"VariableDeclaration","scope":873,"src":"4352:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:5"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"4379:0:5"},"scope":989,"src":"4331:133:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"4470:201:5","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":877,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:5","nodeType":"VariableDeclaration","scope":989,"src":"4741:106:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:5","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":889,"nodeType":"Block","src":"4963:69:5","statements":[{"expression":{"expression":{"arguments":[{"id":885,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"5007:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":883,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4980:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1766_$","typeString":"type(library StorageSlot)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"4980:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1662_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"4980:45:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":882,"id":888,"nodeType":"Return","src":"4973:52:5"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"4854:51:5","text":" @dev Returns the current beacon."},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:5","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"4928:2:5"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"4954:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:5"},"scope":989,"src":"4910:122:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"5161:390:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":896,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5175:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:5","memberName":"code","nodeType":"MemberAccess","src":"5175:14:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:5","memberName":"length","nodeType":"MemberAccess","src":"5175:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":906,"nodeType":"IfStatement","src":"5171:95:5","trueBody":{"id":905,"nodeType":"Block","src":"5203:63:5","statements":[{"errorCall":{"arguments":[{"id":902,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5245:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":901,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"5224:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"RevertStatement","src":"5217:38:5"}]}},{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":910,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"5303:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":907,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5276:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1766_$","typeString":"type(library StorageSlot)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"5276:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1662_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"5276:45:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":913,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5324:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":915,"nodeType":"ExpressionStatement","src":"5276:57:5"},{"assignments":[917],"declarations":[{"constant":false,"id":917,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:5","nodeType":"VariableDeclaration","scope":935,"src":"5344:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":923,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":919,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5383:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"5375:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$999_$","typeString":"type(contract IBeacon)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$999","typeString":"contract IBeacon"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":998,"src":"5375:33:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":924,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5424:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:5","memberName":"code","nodeType":"MemberAccess","src":"5424:25:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:5","memberName":"length","nodeType":"MemberAccess","src":"5424:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":934,"nodeType":"IfStatement","src":"5420:125:5","trueBody":{"id":933,"nodeType":"Block","src":"5463:82:5","statements":[{"errorCall":{"arguments":[{"id":930,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5513:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":929,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5484:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":932,"nodeType":"RevertStatement","src":"5477:57:5"}]}}]},"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"5038:71:5","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:5","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:5","nodeType":"VariableDeclaration","scope":936,"src":"5134:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:5"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"5161:0:5"},"scope":989,"src":"5114:437:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":973,"nodeType":"Block","src":"6155:254:5","statements":[{"expression":{"arguments":[{"id":945,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6176:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":944,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6165:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"6165:21:5"},{"eventCall":{"arguments":[{"id":949,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6216:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":948,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6201:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"EmitStatement","src":"6196:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":952,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6241:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:5","memberName":"length","nodeType":"MemberAccess","src":"6241:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":971,"nodeType":"Block","src":"6360:43:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":968,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"6374:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"6374:18:5"}]},"id":972,"nodeType":"IfStatement","src":"6237:166:5","trueBody":{"id":967,"nodeType":"Block","src":"6258:96:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":960,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6309:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":959,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"6301:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$999_$","typeString":"type(contract IBeacon)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$999","typeString":"contract IBeacon"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":998,"src":"6301:33:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6338:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":956,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"6272:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1656_$","typeString":"type(library Address)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"6272:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":966,"nodeType":"ExpressionStatement","src":"6272:71:5"}]}}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"5557:514:5","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:5","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:5","nodeType":"VariableDeclaration","scope":974,"src":"6108:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"data","nameLocation":"6140:4:5","nodeType":"VariableDeclaration","scope":974,"src":"6127:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:5"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[],"src":"6155:0:5"},"scope":989,"src":"6076:333:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"6634:86:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:5","memberName":"value","nodeType":"MemberAccess","src":"6648:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":986,"nodeType":"IfStatement","src":"6644:70:5","trueBody":{"id":985,"nodeType":"Block","src":"6663:51:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6684:17:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"RevertStatement","src":"6677:26:5"}]}}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"6415:178:5","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:5","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"6623:2:5"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"6634:0:5"},"scope":989,"src":"6598:122:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":990,"src":"449:6273:5","usedErrors":[721,726,731,734],"usedEvents":[700,707,712]}],"src":"114:6609:5"},"id":5},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[999]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":991,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"134:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":999,"linearizedBaseContracts":[999],"name":"IBeacon","nameLocation":"224:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"238:168:6","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":998,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:6","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"434:2:6"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"460:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:6"},"scope":999,"src":"411:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1000,"src":"214:257:6","usedErrors":[],"usedEvents":[]}],"src":"108:364:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1077]},"id":1078,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1077,"linearizedBaseContracts":[1077],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1011,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":1011,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":1011,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":1011,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1020,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":1020,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":1020,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":1020,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1026,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1077,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":1034,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":1077,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1044,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":1044,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":1044,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1044,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1041,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":1077,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1054,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":1054,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":1054,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":1077,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1064,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":1064,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":1064,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1061,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":1077,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1076,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":1076,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":1076,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":1076,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":1077,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1078,"src":"203:2575:7","usedErrors":[],"usedEvents":[1011,1020]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1113]},"id":1114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1079,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"149:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1113,"linearizedBaseContracts":[1113],"name":"IERC20Permit","nameLocation":"2123:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"2142:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1098,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:8","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"owner","nameLocation":"3030:5:8","nodeType":"VariableDeclaration","scope":1098,"src":"3022:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"spender","nameLocation":"3053:7:8","nodeType":"VariableDeclaration","scope":1098,"src":"3045:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"value","nameLocation":"3078:5:8","nodeType":"VariableDeclaration","scope":1098,"src":"3070:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:8","nodeType":"VariableDeclaration","scope":1098,"src":"3093:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"v","nameLocation":"3125:1:8","nodeType":"VariableDeclaration","scope":1098,"src":"3119:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1090,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"r","nameLocation":"3144:1:8","nodeType":"VariableDeclaration","scope":1098,"src":"3136:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"s","nameLocation":"3163:1:8","nodeType":"VariableDeclaration","scope":1098,"src":"3155:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:8"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"3179:0:8"},"scope":1113,"src":"2997:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"3186:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1106,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:8","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"owner","nameLocation":"3509:5:8","nodeType":"VariableDeclaration","scope":1106,"src":"3501:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:8"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"3539:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:8"},"scope":1113,"src":"3485:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"3554:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1112,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:8","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"3765:2:8"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"3791:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:8"},"scope":1113,"src":"3740:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1114,"src":"2113:1689:8","usedErrors":[],"usedEvents":[]}],"src":"123:3680:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1656],"IERC20":[1077],"IERC20Permit":[1113],"SafeERC20":[1403]},"id":1404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1115,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1404,"sourceUnit":1078,"src":"141:37:9","symbolAliases":[{"foreign":{"id":1116,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"149:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1404,"sourceUnit":1114,"src":"179:60:9","symbolAliases":[{"foreign":{"id":1118,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"187:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1404,"sourceUnit":1657,"src":"240:51:9","symbolAliases":[{"foreign":{"id":1120,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"248:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"293:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1403,"linearizedBaseContracts":[1403],"name":"SafeERC20","nameLocation":"759:9:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1125,"libraryName":{"id":1123,"name":"Address","nameLocations":["781:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1656,"src":"781:7:9"},"nodeType":"UsingForDirective","src":"775:26:9","typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"807:64:9","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1130,"name":"SafeERC20FailedOperation","nameLocation":"882:24:9","nodeType":"ErrorDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"token","nameLocation":"915:5:9","nodeType":"VariableDeclaration","scope":1130,"src":"907:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:9"},"src":"876:46:9"},{"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"928:71:9","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1139,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:9","nodeType":"ErrorDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"spender","nameLocation":"1051:7:9","nodeType":"VariableDeclaration","scope":1139,"src":"1043:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:9","nodeType":"VariableDeclaration","scope":1139,"src":"1060:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:9","nodeType":"VariableDeclaration","scope":1139,"src":"1086:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:9"},"src":"1004:109:9"},{"body":{"id":1162,"nodeType":"Block","src":"1375:88:9","statements":[{"expression":{"arguments":[{"id":1151,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"1405:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1154,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"1427:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1044,"src":"1427:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"1444:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1448:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1152,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1150,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1385:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"ExpressionStatement","src":"1385:71:9"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"1119:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:9","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"token","nameLocation":"1332:5:9","nodeType":"VariableDeclaration","scope":1163,"src":"1325:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1142,"nodeType":"UserDefinedTypeName","pathNode":{"id":1141,"name":"IERC20","nameLocations":["1325:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"1325:6:9"},"referencedDeclaration":1077,"src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"to","nameLocation":"1347:2:9","nodeType":"VariableDeclaration","scope":1163,"src":"1339:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"value","nameLocation":"1359:5:9","nodeType":"VariableDeclaration","scope":1163,"src":"1351:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:9"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"1375:0:9"},"scope":1403,"src":"1303:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1189,"nodeType":"Block","src":"1792:98:9","statements":[{"expression":{"arguments":[{"id":1177,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1822:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1180,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1844:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"1844:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1182,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1865:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1871:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"1875:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1178,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1176,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1802:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"1802:81:9"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"1469:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:9","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"token","nameLocation":"1735:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"1728:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"IERC20","nameLocations":["1728:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"1728:6:9"},"referencedDeclaration":1077,"src":"1728:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"from","nameLocation":"1750:4:9","nodeType":"VariableDeclaration","scope":1190,"src":"1742:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"to","nameLocation":"1764:2:9","nodeType":"VariableDeclaration","scope":1190,"src":"1756:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"value","nameLocation":"1776:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"1768:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:9"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"1792:0:9"},"scope":1403,"src":"1702:188:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1220,"nodeType":"Block","src":"2167:139:9","statements":[{"assignments":[1202],"declarations":[{"constant":false,"id":1202,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:9","nodeType":"VariableDeclaration","scope":1220,"src":"2177:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1211,"initialValue":{"arguments":[{"arguments":[{"id":1207,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1403","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1403","typeString":"library SafeERC20"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:9","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1203,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2200:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"2200:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:9"},{"expression":{"arguments":[{"id":1213,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2262:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"id":1214,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"2269:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"2278:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"2293:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1212,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2249:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"ExpressionStatement","src":"2249:50:9"}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1896:180:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:9","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"token","nameLocation":"2119:5:9","nodeType":"VariableDeclaration","scope":1221,"src":"2112:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1193,"nodeType":"UserDefinedTypeName","pathNode":{"id":1192,"name":"IERC20","nameLocations":["2112:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"2112:6:9"},"referencedDeclaration":1077,"src":"2112:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"spender","nameLocation":"2134:7:9","nodeType":"VariableDeclaration","scope":1221,"src":"2126:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"value","nameLocation":"2151:5:9","nodeType":"VariableDeclaration","scope":1221,"src":"2143:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:9"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"2167:0:9"},"scope":1403,"src":"2081:225:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1263,"nodeType":"Block","src":"2607:370:9","statements":[{"id":1262,"nodeType":"UncheckedBlock","src":"2617:354:9","statements":[{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:9","nodeType":"VariableDeclaration","scope":1262,"src":"2641:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1242,"initialValue":{"arguments":[{"arguments":[{"id":1238,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1403","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1403","typeString":"library SafeERC20"}],"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:9","typeDescriptions":{}}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2699:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2668:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"2668:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1243,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2725:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1244,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2744:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1253,"nodeType":"IfStatement","src":"2721:160:9","trueBody":{"id":1252,"nodeType":"Block","src":"2763:118:9","statements":[{"errorCall":{"arguments":[{"id":1247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2821:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1248,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2830:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1249,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2848:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1246,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2788:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"RevertStatement","src":"2781:85:9"}]}},{"expression":{"arguments":[{"id":1255,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2907:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"id":1256,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2914:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2923:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1258,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2942:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1254,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2894:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"2894:66:9"}]}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"2312:192:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"token","nameLocation":"2547:5:9","nodeType":"VariableDeclaration","scope":1264,"src":"2540:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"IERC20","nameLocations":["2540:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"2540:6:9"},"referencedDeclaration":1077,"src":"2540:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"spender","nameLocation":"2562:7:9","nodeType":"VariableDeclaration","scope":1264,"src":"2554:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:9","nodeType":"VariableDeclaration","scope":1264,"src":"2571:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:9"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"2607:0:9"},"scope":1403,"src":"2509:468:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"3373:303:9","statements":[{"assignments":[1276],"declarations":[{"constant":false,"id":1276,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:9","nodeType":"VariableDeclaration","scope":1310,"src":"3383:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1275,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1285,"initialValue":{"arguments":[{"expression":{"id":1279,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3426:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"3426:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1281,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"3442:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1277,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:9"},{"condition":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:9","subExpression":{"arguments":[{"id":1287,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3498:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"id":1288,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3505:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1286,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3474:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"3469:201:9","trueBody":{"id":1308,"nodeType":"Block","src":"3520:150:9","statements":[{"expression":{"arguments":[{"id":1292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3554:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1295,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3576:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1064,"src":"3576:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1297,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"3592:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1293,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1291,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"3534:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"ExpressionStatement","src":"3534:71:9"},{"expression":{"arguments":[{"id":1304,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3639:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},{"id":1305,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3646:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1303,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"3619:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"ExpressionStatement","src":"3619:40:9"}]}}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"2983:308:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:9","nodeType":"FunctionDefinition","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"token","nameLocation":"3325:5:9","nodeType":"VariableDeclaration","scope":1311,"src":"3318:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1267,"nodeType":"UserDefinedTypeName","pathNode":{"id":1266,"name":"IERC20","nameLocations":["3318:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"3318:6:9"},"referencedDeclaration":1077,"src":"3318:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"spender","nameLocation":"3340:7:9","nodeType":"VariableDeclaration","scope":1311,"src":"3332:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"value","nameLocation":"3357:5:9","nodeType":"VariableDeclaration","scope":1311,"src":"3349:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:9"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[],"src":"3373:0:9"},"scope":1403,"src":"3296:380:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"4129:559:9","statements":[{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:9","nodeType":"VariableDeclaration","scope":1352,"src":"4478:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1329,"initialValue":{"arguments":[{"id":1327,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"4532:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1324,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4512:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:9","typeDescriptions":{}}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:9","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1477,"src":"4504:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1330,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4551:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:9","memberName":"length","nodeType":"MemberAccess","src":"4551:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:9","subExpression":{"arguments":[{"id":1336,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4589:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1337,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:9","typeDescriptions":{}}}],"id":1339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1334,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:9","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"4547:135:9","trueBody":{"id":1350,"nodeType":"Block","src":"4610:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1346,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4664:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}],"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:9","typeDescriptions":{}}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1343,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4631:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"RevertStatement","src":"4624:47:9"}]}}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"3682:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:9","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"token","nameLocation":"4095:5:9","nodeType":"VariableDeclaration","scope":1353,"src":"4088:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"IERC20","nameLocations":["4088:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"4088:6:9"},"referencedDeclaration":1077,"src":"4088:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"data","nameLocation":"4115:4:9","nodeType":"VariableDeclaration","scope":1353,"src":"4102:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1316,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:9"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"4129:0:9"},"scope":1403,"src":"4059:629:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1401,"nodeType":"Block","src":"5278:489:9","statements":[{"assignments":[1365,1367],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"success","nameLocation":"5579:7:9","nodeType":"VariableDeclaration","scope":1401,"src":"5574:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1364,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:9","nodeType":"VariableDeclaration","scope":1401,"src":"5588:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1375,"initialValue":{"arguments":[{"id":1373,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"5635:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1370,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5623:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:9","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:9","memberName":"call","nodeType":"MemberAccess","src":"5615:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5657:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1377,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5669:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:9","memberName":"length","nodeType":"MemberAccess","src":"5669:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1383,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5706:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1384,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:9","typeDescriptions":{}}}],"id":1386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1381,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:9","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1393,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5738:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:9","typeDescriptions":{}}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:9","memberName":"code","nodeType":"MemberAccess","src":"5730:19:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:9","memberName":"length","nodeType":"MemberAccess","src":"5730:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1363,"id":1400,"nodeType":"Return","src":"5650:110:9"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"4694:490:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:9","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"token","nameLocation":"5229:5:9","nodeType":"VariableDeclaration","scope":1402,"src":"5222:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":1356,"nodeType":"UserDefinedTypeName","pathNode":{"id":1355,"name":"IERC20","nameLocations":["5222:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"5222:6:9"},"referencedDeclaration":1077,"src":"5222:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"data","nameLocation":"5249:4:9","nodeType":"VariableDeclaration","scope":1402,"src":"5236:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1358,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:9"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"5272:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1361,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:9"},"scope":1403,"src":"5189:578:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1404,"src":"751:5018:9","usedErrors":[1130,1139],"usedEvents":[]}],"src":"115:5655:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1656]},"id":1657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"127:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1656,"linearizedBaseContracts":[1656],"name":"Address","nameLocation":"203:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"217:94:10","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1411,"name":"AddressInsufficientBalance","nameLocation":"322:26:10","nodeType":"ErrorDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"account","nameLocation":"357:7:10","nodeType":"VariableDeclaration","scope":1411,"src":"349:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:10"},"src":"316:50:10"},{"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"372:75:10","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1416,"name":"AddressEmptyCode","nameLocation":"458:16:10","nodeType":"ErrorDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"target","nameLocation":"483:6:10","nodeType":"VariableDeclaration","scope":1416,"src":"475:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:10"},"src":"452:39:10"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"497:89:10","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1419,"name":"FailedInnerCall","nameLocation":"597:15:10","nodeType":"ErrorDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"612:2:10"},"src":"591:24:10"},{"body":{"id":1459,"nodeType":"Block","src":"1602:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1429,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:10","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1432,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1442,"nodeType":"IfStatement","src":"1612:109:10","trueBody":{"id":1441,"nodeType":"Block","src":"1648:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1437,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:10","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1434,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1669:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"RevertStatement","src":"1662:48:10"}]}},{"assignments":[1444,null],"declarations":[{"constant":false,"id":1444,"mutability":"mutable","name":"success","nameLocation":"1737:7:10","nodeType":"VariableDeclaration","scope":1459,"src":"1732:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1443,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1451,"initialValue":{"arguments":[{"hexValue":"","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1445,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1750:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:10","memberName":"call","nodeType":"MemberAccess","src":"1750:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:10"},{"condition":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:10","subExpression":{"id":1452,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"1798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"IfStatement","src":"1793:63:10","trueBody":{"id":1457,"nodeType":"Block","src":"1807:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1454,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1828:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"RevertStatement","src":"1821:24:10"}]}}]},"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"621:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:10","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:10","nodeType":"VariableDeclaration","scope":1460,"src":"1550:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"amount","nameLocation":"1585:6:10","nodeType":"VariableDeclaration","scope":1460,"src":"1577:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:10"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"1602:0:10"},"scope":1656,"src":"1531:331:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"2794:62:10","statements":[{"expression":{"arguments":[{"id":1471,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2833:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1472,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2841:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1470,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2811:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1469,"id":1475,"nodeType":"Return","src":"2804:45:10"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"1868:832:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:10","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"target","nameLocation":"2735:6:10","nodeType":"VariableDeclaration","scope":1477,"src":"2727:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"data","nameLocation":"2756:4:10","nodeType":"VariableDeclaration","scope":1477,"src":"2743:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1464,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:10"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"2780:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1467,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:10"},"scope":1656,"src":"2705:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"3293:279:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1491,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}],"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:10","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"3331:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"IfStatement","src":"3303:108:10","trueBody":{"id":1503,"nodeType":"Block","src":"3338:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1656","typeString":"library Address"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:10","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1496,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"3359:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"RevertStatement","src":"3352:48:10"}]}},{"assignments":[1506,1508],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"success","nameLocation":"3426:7:10","nodeType":"VariableDeclaration","scope":1522,"src":"3421:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1505,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:10","nodeType":"VariableDeclaration","scope":1522,"src":"3435:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1515,"initialValue":{"arguments":[{"id":1513,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3488:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1509,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3462:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:10","memberName":"call","nodeType":"MemberAccess","src":"3462:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"3481:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:10"},{"expression":{"arguments":[{"id":1517,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3537:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"3545:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1519,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"3554:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1516,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"3510:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1488,"id":1521,"nodeType":"Return","src":"3503:62:10"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"2862:313:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:10","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"target","nameLocation":"3219:6:10","nodeType":"VariableDeclaration","scope":1523,"src":"3211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"data","nameLocation":"3240:4:10","nodeType":"VariableDeclaration","scope":1523,"src":"3227:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1481,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"value","nameLocation":"3254:5:10","nodeType":"VariableDeclaration","scope":1523,"src":"3246:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:10"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1523,"src":"3279:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1486,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:10"},"scope":1656,"src":"3180:392:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"3811:154:10","statements":[{"assignments":[1534,1536],"declarations":[{"constant":false,"id":1534,"mutability":"mutable","name":"success","nameLocation":"3827:7:10","nodeType":"VariableDeclaration","scope":1548,"src":"3822:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1533,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:10","nodeType":"VariableDeclaration","scope":1548,"src":"3836:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1535,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1541,"initialValue":{"arguments":[{"id":1539,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"3881:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1537,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3863:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:10"},{"expression":{"arguments":[{"id":1543,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3930:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1544,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"3938:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1545,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"3947:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1542,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"3903:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1532,"id":1547,"nodeType":"Return","src":"3896:62:10"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"3578:128:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:10","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"target","nameLocation":"3747:6:10","nodeType":"VariableDeclaration","scope":1549,"src":"3739:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"data","nameLocation":"3768:4:10","nodeType":"VariableDeclaration","scope":1549,"src":"3755:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1527,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:10"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"3797:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1530,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:10"},"scope":1656,"src":"3711:254:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"4203:156:10","statements":[{"assignments":[1560,1562],"declarations":[{"constant":false,"id":1560,"mutability":"mutable","name":"success","nameLocation":"4219:7:10","nodeType":"VariableDeclaration","scope":1574,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1559,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:10","nodeType":"VariableDeclaration","scope":1574,"src":"4228:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1567,"initialValue":{"arguments":[{"id":1565,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4275:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1563,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4255:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:10"},{"expression":{"arguments":[{"id":1569,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4324:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1570,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1571,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"4341:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1568,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"4297:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1558,"id":1573,"nodeType":"Return","src":"4290:62:10"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"3971:130:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:10","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"target","nameLocation":"4144:6:10","nodeType":"VariableDeclaration","scope":1575,"src":"4136:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"data","nameLocation":"4165:4:10","nodeType":"VariableDeclaration","scope":1575,"src":"4152:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1553,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:10"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"4189:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1556,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:10"},"scope":1656,"src":"4106:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"4783:424:10","statements":[{"condition":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:10","subExpression":{"id":1587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"4798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1612,"nodeType":"Block","src":"4857:344:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1594,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5045:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:10","memberName":"length","nodeType":"MemberAccess","src":"5045:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1598,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5071:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:10","memberName":"code","nodeType":"MemberAccess","src":"5071:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:10","memberName":"length","nodeType":"MemberAccess","src":"5071:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1609,"nodeType":"IfStatement","src":"5041:119:10","trueBody":{"id":1608,"nodeType":"Block","src":"5096:64:10","statements":[{"errorCall":{"arguments":[{"id":1605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5138:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1604,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"5121:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"RevertStatement","src":"5114:31:10"}]}},{"expression":{"id":1610,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5180:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1586,"id":1611,"nodeType":"Return","src":"5173:17:10"}]},"id":1613,"nodeType":"IfStatement","src":"4793:408:10","trueBody":{"id":1593,"nodeType":"Block","src":"4807:44:10","statements":[{"expression":{"arguments":[{"id":1590,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4829:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1589,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"4821:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"4821:19:10"}]}}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"4365:255:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:10","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"target","nameLocation":"4678:6:10","nodeType":"VariableDeclaration","scope":1615,"src":"4670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"success","nameLocation":"4699:7:10","nodeType":"VariableDeclaration","scope":1615,"src":"4694:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1579,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:10","nodeType":"VariableDeclaration","scope":1615,"src":"4716:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:10"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"4769:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1584,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:10"},"scope":1656,"src":"4625:582:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"5509:122:10","statements":[{"condition":{"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:10","subExpression":{"id":1625,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"5524:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1634,"nodeType":"Block","src":"5583:42:10","statements":[{"expression":{"id":1632,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"5604:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1624,"id":1633,"nodeType":"Return","src":"5597:17:10"}]},"id":1635,"nodeType":"IfStatement","src":"5519:106:10","trueBody":{"id":1631,"nodeType":"Block","src":"5533:44:10","statements":[{"expression":{"arguments":[{"id":1628,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"5555:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1627,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"5547:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1630,"nodeType":"ExpressionStatement","src":"5547:19:10"}]}}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"5213:189:10","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:10","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"success","nameLocation":"5438:7:10","nodeType":"VariableDeclaration","scope":1637,"src":"5433:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1617,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:10","nodeType":"VariableDeclaration","scope":1637,"src":"5447:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1619,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:10"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"5495:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1622,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:10"},"scope":1656,"src":"5407:224:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1654,"nodeType":"Block","src":"5798:461:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1643,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5874:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:10","memberName":"length","nodeType":"MemberAccess","src":"5874:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1652,"nodeType":"Block","src":"6204:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1649,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"6225:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"RevertStatement","src":"6218:24:10"}]},"id":1653,"nodeType":"IfStatement","src":"5870:383:10","trueBody":{"id":1648,"nodeType":"Block","src":"5897:301:10","statements":[{"AST":{"nativeSrc":"6055:133:10","nodeType":"YulBlock","src":"6055:133:10","statements":[{"nativeSrc":"6073:40:10","nodeType":"YulVariableDeclaration","src":"6073:40:10","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:10","nodeType":"YulIdentifier","src":"6102:10:10"}],"functionName":{"name":"mload","nativeSrc":"6096:5:10","nodeType":"YulIdentifier","src":"6096:5:10"},"nativeSrc":"6096:17:10","nodeType":"YulFunctionCall","src":"6096:17:10"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:10","nodeType":"YulTypedName","src":"6077:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:10","nodeType":"YulLiteral","src":"6141:2:10","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:10","nodeType":"YulIdentifier","src":"6145:10:10"}],"functionName":{"name":"add","nativeSrc":"6137:3:10","nodeType":"YulIdentifier","src":"6137:3:10"},"nativeSrc":"6137:19:10","nodeType":"YulFunctionCall","src":"6137:19:10"},{"name":"returndata_size","nativeSrc":"6158:15:10","nodeType":"YulIdentifier","src":"6158:15:10"}],"functionName":{"name":"revert","nativeSrc":"6130:6:10","nodeType":"YulIdentifier","src":"6130:6:10"},"nativeSrc":"6130:44:10","nodeType":"YulFunctionCall","src":"6130:44:10"},"nativeSrc":"6130:44:10","nodeType":"YulExpressionStatement","src":"6130:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1640,"isOffset":false,"isSlot":false,"src":"6102:10:10","valueSize":1},{"declaration":1640,"isOffset":false,"isSlot":false,"src":"6145:10:10","valueSize":1}],"id":1647,"nodeType":"InlineAssembly","src":"6046:142:10"}]}}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"5637:101:10","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:10","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:10","nodeType":"VariableDeclaration","scope":1655,"src":"5760:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1639,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:10"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"5798:0:10"},"scope":1656,"src":"5743:516:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1657,"src":"195:6066:10","usedErrors":[1411,1416,1419],"usedEvents":[]}],"src":"101:6161:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1766]},"id":1767,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1658,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"219:1025:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1766,"linearizedBaseContracts":[1766],"name":"StorageSlot","nameLocation":"1253:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1662,"members":[{"constant":false,"id":1661,"mutability":"mutable","name":"value","nameLocation":"1308:5:11","nodeType":"VariableDeclaration","scope":1662,"src":"1300:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:11","nodeType":"StructDefinition","scope":1766,"src":"1271:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1665,"members":[{"constant":false,"id":1664,"mutability":"mutable","name":"value","nameLocation":"1360:5:11","nodeType":"VariableDeclaration","scope":1665,"src":"1355:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1663,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:11","nodeType":"StructDefinition","scope":1766,"src":"1326:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1668,"members":[{"constant":false,"id":1667,"mutability":"mutable","name":"value","nameLocation":"1415:5:11","nodeType":"VariableDeclaration","scope":1668,"src":"1407:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:11","nodeType":"StructDefinition","scope":1766,"src":"1378:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1671,"members":[{"constant":false,"id":1670,"mutability":"mutable","name":"value","nameLocation":"1470:5:11","nodeType":"VariableDeclaration","scope":1671,"src":"1462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:11","nodeType":"StructDefinition","scope":1766,"src":"1433:49:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1674,"members":[{"constant":false,"id":1673,"mutability":"mutable","name":"value","nameLocation":"1523:5:11","nodeType":"VariableDeclaration","scope":1674,"src":"1516:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1672,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:11","nodeType":"StructDefinition","scope":1766,"src":"1488:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1677,"members":[{"constant":false,"id":1676,"mutability":"mutable","name":"value","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":1677,"src":"1568:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1675,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:11","nodeType":"StructDefinition","scope":1766,"src":"1541:45:11","visibility":"public"},{"body":{"id":1687,"nodeType":"Block","src":"1768:106:11","statements":[{"AST":{"nativeSrc":"1830:38:11","nodeType":"YulBlock","src":"1830:38:11","statements":[{"nativeSrc":"1844:14:11","nodeType":"YulAssignment","src":"1844:14:11","value":{"name":"slot","nativeSrc":"1854:4:11","nodeType":"YulIdentifier","src":"1854:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:11","nodeType":"YulIdentifier","src":"1844:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1684,"isOffset":false,"isSlot":true,"src":"1844:6:11","suffix":"slot","valueSize":1},{"declaration":1680,"isOffset":false,"isSlot":false,"src":"1854:4:11","valueSize":1}],"id":1686,"nodeType":"InlineAssembly","src":"1821:47:11"}]},"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"1592:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1688,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:11","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"slot","nameLocation":"1716:4:11","nodeType":"VariableDeclaration","scope":1688,"src":"1708:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:11"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"r","nameLocation":"1765:1:11","nodeType":"VariableDeclaration","scope":1688,"src":"1745:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1683,"nodeType":"UserDefinedTypeName","pathNode":{"id":1682,"name":"AddressSlot","nameLocations":["1745:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1662,"src":"1745:11:11"},"referencedDeclaration":1662,"src":"1745:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1662_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:11"},"scope":1766,"src":"1684:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"2056:106:11","statements":[{"AST":{"nativeSrc":"2118:38:11","nodeType":"YulBlock","src":"2118:38:11","statements":[{"nativeSrc":"2132:14:11","nodeType":"YulAssignment","src":"2132:14:11","value":{"name":"slot","nativeSrc":"2142:4:11","nodeType":"YulIdentifier","src":"2142:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:11","nodeType":"YulIdentifier","src":"2132:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1695,"isOffset":false,"isSlot":true,"src":"2132:6:11","suffix":"slot","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"2142:4:11","valueSize":1}],"id":1697,"nodeType":"InlineAssembly","src":"2109:47:11"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"1880:87:11","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:11","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"slot","nameLocation":"2004:4:11","nodeType":"VariableDeclaration","scope":1699,"src":"1996:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:11"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"r","nameLocation":"2053:1:11","nodeType":"VariableDeclaration","scope":1699,"src":"2033:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1665_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1694,"nodeType":"UserDefinedTypeName","pathNode":{"id":1693,"name":"BooleanSlot","nameLocations":["2033:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1665,"src":"2033:11:11"},"referencedDeclaration":1665,"src":"2033:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1665_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:11"},"scope":1766,"src":"1972:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"2344:106:11","statements":[{"AST":{"nativeSrc":"2406:38:11","nodeType":"YulBlock","src":"2406:38:11","statements":[{"nativeSrc":"2420:14:11","nodeType":"YulAssignment","src":"2420:14:11","value":{"name":"slot","nativeSrc":"2430:4:11","nodeType":"YulIdentifier","src":"2430:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:11","nodeType":"YulIdentifier","src":"2420:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1706,"isOffset":false,"isSlot":true,"src":"2420:6:11","suffix":"slot","valueSize":1},{"declaration":1702,"isOffset":false,"isSlot":false,"src":"2430:4:11","valueSize":1}],"id":1708,"nodeType":"InlineAssembly","src":"2397:47:11"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2168:87:11","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:11","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"slot","nameLocation":"2292:4:11","nodeType":"VariableDeclaration","scope":1710,"src":"2284:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:11"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"r","nameLocation":"2341:1:11","nodeType":"VariableDeclaration","scope":1710,"src":"2321:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1668_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1705,"nodeType":"UserDefinedTypeName","pathNode":{"id":1704,"name":"Bytes32Slot","nameLocations":["2321:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1668,"src":"2321:11:11"},"referencedDeclaration":1668,"src":"2321:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1668_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:11"},"scope":1766,"src":"2260:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1720,"nodeType":"Block","src":"2632:106:11","statements":[{"AST":{"nativeSrc":"2694:38:11","nodeType":"YulBlock","src":"2694:38:11","statements":[{"nativeSrc":"2708:14:11","nodeType":"YulAssignment","src":"2708:14:11","value":{"name":"slot","nativeSrc":"2718:4:11","nodeType":"YulIdentifier","src":"2718:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:11","nodeType":"YulIdentifier","src":"2708:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1717,"isOffset":false,"isSlot":true,"src":"2708:6:11","suffix":"slot","valueSize":1},{"declaration":1713,"isOffset":false,"isSlot":false,"src":"2718:4:11","valueSize":1}],"id":1719,"nodeType":"InlineAssembly","src":"2685:47:11"}]},"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"2456:87:11","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:11","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"slot","nameLocation":"2580:4:11","nodeType":"VariableDeclaration","scope":1721,"src":"2572:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:11"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"r","nameLocation":"2629:1:11","nodeType":"VariableDeclaration","scope":1721,"src":"2609:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1671_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1716,"nodeType":"UserDefinedTypeName","pathNode":{"id":1715,"name":"Uint256Slot","nameLocations":["2609:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1671,"src":"2609:11:11"},"referencedDeclaration":1671,"src":"2609:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1671_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:11"},"scope":1766,"src":"2548:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"2917:106:11","statements":[{"AST":{"nativeSrc":"2979:38:11","nodeType":"YulBlock","src":"2979:38:11","statements":[{"nativeSrc":"2993:14:11","nodeType":"YulAssignment","src":"2993:14:11","value":{"name":"slot","nativeSrc":"3003:4:11","nodeType":"YulIdentifier","src":"3003:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:11","nodeType":"YulIdentifier","src":"2993:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1728,"isOffset":false,"isSlot":true,"src":"2993:6:11","suffix":"slot","valueSize":1},{"declaration":1724,"isOffset":false,"isSlot":false,"src":"3003:4:11","valueSize":1}],"id":1730,"nodeType":"InlineAssembly","src":"2970:47:11"}]},"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"2744:86:11","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:11","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"slot","nameLocation":"2866:4:11","nodeType":"VariableDeclaration","scope":1732,"src":"2858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:11"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"r","nameLocation":"2914:1:11","nodeType":"VariableDeclaration","scope":1732,"src":"2895:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1674_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1727,"nodeType":"UserDefinedTypeName","pathNode":{"id":1726,"name":"StringSlot","nameLocations":["2895:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"2895:10:11"},"referencedDeclaration":1674,"src":"2895:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1674_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:11"},"scope":1766,"src":"2835:188:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"3225:112:11","statements":[{"AST":{"nativeSrc":"3287:44:11","nodeType":"YulBlock","src":"3287:44:11","statements":[{"nativeSrc":"3301:20:11","nodeType":"YulAssignment","src":"3301:20:11","value":{"name":"store.slot","nativeSrc":"3311:10:11","nodeType":"YulIdentifier","src":"3311:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:11","nodeType":"YulIdentifier","src":"3301:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1739,"isOffset":false,"isSlot":true,"src":"3301:6:11","suffix":"slot","valueSize":1},{"declaration":1735,"isOffset":false,"isSlot":true,"src":"3311:10:11","suffix":"slot","valueSize":1}],"id":1741,"nodeType":"InlineAssembly","src":"3278:53:11"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"3029:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:11","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"store","nameLocation":"3173:5:11","nodeType":"VariableDeclaration","scope":1743,"src":"3158:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1734,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:11"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"r","nameLocation":"3222:1:11","nodeType":"VariableDeclaration","scope":1743,"src":"3203:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1674_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1738,"nodeType":"UserDefinedTypeName","pathNode":{"id":1737,"name":"StringSlot","nameLocations":["3203:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1674,"src":"3203:10:11"},"referencedDeclaration":1674,"src":"3203:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1674_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:11"},"scope":1766,"src":"3135:202:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"3513:106:11","statements":[{"AST":{"nativeSrc":"3575:38:11","nodeType":"YulBlock","src":"3575:38:11","statements":[{"nativeSrc":"3589:14:11","nodeType":"YulAssignment","src":"3589:14:11","value":{"name":"slot","nativeSrc":"3599:4:11","nodeType":"YulIdentifier","src":"3599:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:11","nodeType":"YulIdentifier","src":"3589:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1750,"isOffset":false,"isSlot":true,"src":"3589:6:11","suffix":"slot","valueSize":1},{"declaration":1746,"isOffset":false,"isSlot":false,"src":"3599:4:11","valueSize":1}],"id":1752,"nodeType":"InlineAssembly","src":"3566:47:11"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"3343:85:11","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:11","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"slot","nameLocation":"3463:4:11","nodeType":"VariableDeclaration","scope":1754,"src":"3455:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:11"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"r","nameLocation":"3510:1:11","nodeType":"VariableDeclaration","scope":1754,"src":"3492:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1677_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1749,"nodeType":"UserDefinedTypeName","pathNode":{"id":1748,"name":"BytesSlot","nameLocations":["3492:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1677,"src":"3492:9:11"},"referencedDeclaration":1677,"src":"3492:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1677_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:11"},"scope":1766,"src":"3433:186:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"3816:112:11","statements":[{"AST":{"nativeSrc":"3878:44:11","nodeType":"YulBlock","src":"3878:44:11","statements":[{"nativeSrc":"3892:20:11","nodeType":"YulAssignment","src":"3892:20:11","value":{"name":"store.slot","nativeSrc":"3902:10:11","nodeType":"YulIdentifier","src":"3902:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:11","nodeType":"YulIdentifier","src":"3892:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1761,"isOffset":false,"isSlot":true,"src":"3892:6:11","suffix":"slot","valueSize":1},{"declaration":1757,"isOffset":false,"isSlot":true,"src":"3902:10:11","suffix":"slot","valueSize":1}],"id":1763,"nodeType":"InlineAssembly","src":"3869:53:11"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"3625:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:11","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"store","nameLocation":"3765:5:11","nodeType":"VariableDeclaration","scope":1765,"src":"3751:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1756,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:11"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"r","nameLocation":"3813:1:11","nodeType":"VariableDeclaration","scope":1765,"src":"3795:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1677_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"BytesSlot","nameLocations":["3795:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1677,"src":"3795:9:11"},"referencedDeclaration":1677,"src":"3795:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1677_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:11"},"scope":1766,"src":"3729:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1767,"src":"1245:2685:11","usedErrors":[],"usedEvents":[]}],"src":"193:3738:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2114]},"id":2115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1768,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"138:205:12","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2114,"linearizedBaseContracts":[2114],"name":"ECDSA","nameLocation":"352:5:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1774,"members":[{"id":1770,"name":"NoError","nameLocation":"392:7:12","nodeType":"EnumValue","src":"392:7:12"},{"id":1771,"name":"InvalidSignature","nameLocation":"409:16:12","nodeType":"EnumValue","src":"409:16:12"},{"id":1772,"name":"InvalidSignatureLength","nameLocation":"435:22:12","nodeType":"EnumValue","src":"435:22:12"},{"id":1773,"name":"InvalidSignatureS","nameLocation":"467:17:12","nodeType":"EnumValue","src":"467:17:12"}],"name":"RecoverError","nameLocation":"369:12:12","nodeType":"EnumDefinition","src":"364:126:12"},{"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"496:63:12","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1777,"name":"ECDSAInvalidSignature","nameLocation":"570:21:12","nodeType":"ErrorDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[],"src":"591:2:12"},"src":"564:30:12"},{"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"600:60:12","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1782,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:12","nodeType":"ErrorDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"length","nameLocation":"707:6:12","nodeType":"VariableDeclaration","scope":1782,"src":"699:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:12"},"src":"665:50:12"},{"documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"721:85:12","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1787,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:12","nodeType":"ErrorDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"s","nameLocation":"848:1:12","nodeType":"VariableDeclaration","scope":1787,"src":"840:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:12"},"src":"811:40:12"},{"body":{"id":1839,"nodeType":"Block","src":"2242:653:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1802,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2256:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:12","memberName":"length","nodeType":"MemberAccess","src":"2256:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1837,"nodeType":"Block","src":"2781:108:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:12","typeDescriptions":{}}},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1828,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2815:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"2815:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1832,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2860:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:12","memberName":"length","nodeType":"MemberAccess","src":"2860:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:12","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1801,"id":1836,"nodeType":"Return","src":"2795:83:12"}]},"id":1838,"nodeType":"IfStatement","src":"2252:637:12","trueBody":{"id":1823,"nodeType":"Block","src":"2280:495:12","statements":[{"assignments":[1807],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"r","nameLocation":"2302:1:12","nodeType":"VariableDeclaration","scope":1823,"src":"2294:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1808,"nodeType":"VariableDeclarationStatement","src":"2294:9:12"},{"assignments":[1810],"declarations":[{"constant":false,"id":1810,"mutability":"mutable","name":"s","nameLocation":"2325:1:12","nodeType":"VariableDeclaration","scope":1823,"src":"2317:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1811,"nodeType":"VariableDeclarationStatement","src":"2317:9:12"},{"assignments":[1813],"declarations":[{"constant":false,"id":1813,"mutability":"mutable","name":"v","nameLocation":"2346:1:12","nodeType":"VariableDeclaration","scope":1823,"src":"2340:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1812,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1814,"nodeType":"VariableDeclarationStatement","src":"2340:7:12"},{"AST":{"nativeSrc":"2548:171:12","nodeType":"YulBlock","src":"2548:171:12","statements":[{"nativeSrc":"2566:32:12","nodeType":"YulAssignment","src":"2566:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:12","nodeType":"YulIdentifier","src":"2581:9:12"},{"kind":"number","nativeSrc":"2592:4:12","nodeType":"YulLiteral","src":"2592:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:12","nodeType":"YulIdentifier","src":"2577:3:12"},"nativeSrc":"2577:20:12","nodeType":"YulFunctionCall","src":"2577:20:12"}],"functionName":{"name":"mload","nativeSrc":"2571:5:12","nodeType":"YulIdentifier","src":"2571:5:12"},"nativeSrc":"2571:27:12","nodeType":"YulFunctionCall","src":"2571:27:12"},"variableNames":[{"name":"r","nativeSrc":"2566:1:12","nodeType":"YulIdentifier","src":"2566:1:12"}]},{"nativeSrc":"2615:32:12","nodeType":"YulAssignment","src":"2615:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:12","nodeType":"YulIdentifier","src":"2630:9:12"},{"kind":"number","nativeSrc":"2641:4:12","nodeType":"YulLiteral","src":"2641:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:12","nodeType":"YulIdentifier","src":"2626:3:12"},"nativeSrc":"2626:20:12","nodeType":"YulFunctionCall","src":"2626:20:12"}],"functionName":{"name":"mload","nativeSrc":"2620:5:12","nodeType":"YulIdentifier","src":"2620:5:12"},"nativeSrc":"2620:27:12","nodeType":"YulFunctionCall","src":"2620:27:12"},"variableNames":[{"name":"s","nativeSrc":"2615:1:12","nodeType":"YulIdentifier","src":"2615:1:12"}]},{"nativeSrc":"2664:41:12","nodeType":"YulAssignment","src":"2664:41:12","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:12","nodeType":"YulLiteral","src":"2674:1:12","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:12","nodeType":"YulIdentifier","src":"2687:9:12"},{"kind":"number","nativeSrc":"2698:4:12","nodeType":"YulLiteral","src":"2698:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:12","nodeType":"YulIdentifier","src":"2683:3:12"},"nativeSrc":"2683:20:12","nodeType":"YulFunctionCall","src":"2683:20:12"}],"functionName":{"name":"mload","nativeSrc":"2677:5:12","nodeType":"YulIdentifier","src":"2677:5:12"},"nativeSrc":"2677:27:12","nodeType":"YulFunctionCall","src":"2677:27:12"}],"functionName":{"name":"byte","nativeSrc":"2669:4:12","nodeType":"YulIdentifier","src":"2669:4:12"},"nativeSrc":"2669:36:12","nodeType":"YulFunctionCall","src":"2669:36:12"},"variableNames":[{"name":"v","nativeSrc":"2664:1:12","nodeType":"YulIdentifier","src":"2664:1:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1807,"isOffset":false,"isSlot":false,"src":"2566:1:12","valueSize":1},{"declaration":1810,"isOffset":false,"isSlot":false,"src":"2615:1:12","valueSize":1},{"declaration":1792,"isOffset":false,"isSlot":false,"src":"2581:9:12","valueSize":1},{"declaration":1792,"isOffset":false,"isSlot":false,"src":"2630:9:12","valueSize":1},{"declaration":1792,"isOffset":false,"isSlot":false,"src":"2687:9:12","valueSize":1},{"declaration":1813,"isOffset":false,"isSlot":false,"src":"2664:1:12","valueSize":1}],"id":1815,"nodeType":"InlineAssembly","src":"2539:180:12"},{"expression":{"arguments":[{"id":1817,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2750:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1818,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2756:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1819,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"2759:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1820,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"2762:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1816,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1840,1920,2028],"referencedDeclaration":2028,"src":"2739:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1801,"id":1822,"nodeType":"Return","src":"2732:32:12"}]}}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"857:1267:12","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:12","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"hash","nameLocation":"2157:4:12","nodeType":"VariableDeclaration","scope":1840,"src":"2149:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"signature","nameLocation":"2176:9:12","nodeType":"VariableDeclaration","scope":1840,"src":"2163:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1791,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:12"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"2210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"2219:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1797,"nodeType":"UserDefinedTypeName","pathNode":{"id":1796,"name":"RecoverError","nameLocations":["2219:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"2219:12:12"},"referencedDeclaration":1774,"src":"2219:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"2233:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:12"},"scope":2114,"src":"2129:766:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"3789:168:12","statements":[{"assignments":[1851,1854,1856],"declarations":[{"constant":false,"id":1851,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:12","nodeType":"VariableDeclaration","scope":1869,"src":"3800:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"error","nameLocation":"3832:5:12","nodeType":"VariableDeclaration","scope":1869,"src":"3819:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1853,"nodeType":"UserDefinedTypeName","pathNode":{"id":1852,"name":"RecoverError","nameLocations":["3819:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"3819:12:12"},"referencedDeclaration":1774,"src":"3819:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:12","nodeType":"VariableDeclaration","scope":1869,"src":"3839:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1861,"initialValue":{"arguments":[{"id":1858,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"3870:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1859,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3876:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1857,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1840,1920,2028],"referencedDeclaration":1840,"src":"3859:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:12"},{"expression":{"arguments":[{"id":1863,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"3908:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"id":1864,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"3915:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1862,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3896:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1774_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"3896:28:12"},{"expression":{"id":1867,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"3941:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1849,"id":1868,"nodeType":"Return","src":"3934:16:12"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"2901:796:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:12","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"hash","nameLocation":"3727:4:12","nodeType":"VariableDeclaration","scope":1870,"src":"3719:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"signature","nameLocation":"3746:9:12","nodeType":"VariableDeclaration","scope":1870,"src":"3733:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:12"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"3780:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:12"},"scope":2114,"src":"3702:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"4285:342:12","statements":[{"id":1918,"nodeType":"UncheckedBlock","src":"4295:326:12","statements":[{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"s","nameLocation":"4327:1:12","nodeType":"VariableDeclaration","scope":1918,"src":"4319:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1895,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4331:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:12","typeDescriptions":{}}},"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:12"},{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"v","nameLocation":"4528:1:12","nodeType":"VariableDeclaration","scope":1918,"src":"4522:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1896,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1910,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1902,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4547:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:12","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:12","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1898,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:12","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:12"},{"expression":{"arguments":[{"id":1912,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"4596:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1913,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"4602:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1914,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"4605:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1915,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"4608:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1911,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1840,1920,2028],"referencedDeclaration":2028,"src":"4585:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1886,"id":1917,"nodeType":"Return","src":"4578:32:12"}]}]},"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"3963:205:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:12","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"hash","nameLocation":"4201:4:12","nodeType":"VariableDeclaration","scope":1920,"src":"4193:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"r","nameLocation":"4215:1:12","nodeType":"VariableDeclaration","scope":1920,"src":"4207:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"vs","nameLocation":"4226:2:12","nodeType":"VariableDeclaration","scope":1920,"src":"4218:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:12"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"4253:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"4262:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1882,"nodeType":"UserDefinedTypeName","pathNode":{"id":1881,"name":"RecoverError","nameLocations":["4262:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"4262:12:12"},"referencedDeclaration":1774,"src":"4262:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"4276:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:12"},"scope":2114,"src":"4173:454:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"4840:164:12","statements":[{"assignments":[1933,1936,1938],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:12","nodeType":"VariableDeclaration","scope":1952,"src":"4851:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"error","nameLocation":"4883:5:12","nodeType":"VariableDeclaration","scope":1952,"src":"4870:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1935,"nodeType":"UserDefinedTypeName","pathNode":{"id":1934,"name":"RecoverError","nameLocations":["4870:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"4870:12:12"},"referencedDeclaration":1774,"src":"4870:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:12","nodeType":"VariableDeclaration","scope":1952,"src":"4890:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1944,"initialValue":{"arguments":[{"id":1940,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"4921:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1941,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"4927:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1942,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4930:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1939,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1840,1920,2028],"referencedDeclaration":1920,"src":"4910:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:12"},{"expression":{"arguments":[{"id":1946,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4955:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"id":1947,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4962:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1945,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4943:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1774_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"4943:28:12"},{"expression":{"id":1950,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"4988:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1931,"id":1951,"nodeType":"Return","src":"4981:16:12"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"4633:116:12","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:12","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"hash","nameLocation":"4779:4:12","nodeType":"VariableDeclaration","scope":1953,"src":"4771:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"r","nameLocation":"4793:1:12","nodeType":"VariableDeclaration","scope":1953,"src":"4785:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"vs","nameLocation":"4804:2:12","nodeType":"VariableDeclaration","scope":1953,"src":"4796:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:12"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"4831:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:12"},"scope":2114,"src":"4754:250:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2027,"nodeType":"Block","src":"5298:1372:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1974,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6194:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:12","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1988,"nodeType":"IfStatement","src":"6182:164:12","trueBody":{"id":1987,"nodeType":"Block","src":"6267:79:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:12","typeDescriptions":{}}},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1982,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6301:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1773,"src":"6301:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"id":1984,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6333:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1971,"id":1986,"nodeType":"Return","src":"6281:54:12"}]}},{"assignments":[1990],"declarations":[{"constant":false,"id":1990,"mutability":"mutable","name":"signer","nameLocation":"6448:6:12","nodeType":"VariableDeclaration","scope":2027,"src":"6440:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1997,"initialValue":{"arguments":[{"id":1992,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"6467:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1993,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6473:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1994,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"6476:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1995,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6479:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1991,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:12","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6495:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:12","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2017,"nodeType":"IfStatement","src":"6491:113:12","trueBody":{"id":2016,"nodeType":"Block","src":"6517:87:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:12","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2008,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6551:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"6551:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:12","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1971,"id":2015,"nodeType":"Return","src":"6531:62:12"}]}},{"expression":{"components":[{"id":2018,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6622:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2019,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6630:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1770,"src":"6630:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:12","typeDescriptions":{}}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1971,"id":2026,"nodeType":"Return","src":"6614:49:12"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"5010:125:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:12","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"hash","nameLocation":"5177:4:12","nodeType":"VariableDeclaration","scope":2028,"src":"5169:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"v","nameLocation":"5197:1:12","nodeType":"VariableDeclaration","scope":2028,"src":"5191:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1957,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"r","nameLocation":"5216:1:12","nodeType":"VariableDeclaration","scope":2028,"src":"5208:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"s","nameLocation":"5235:1:12","nodeType":"VariableDeclaration","scope":2028,"src":"5227:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:12"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"5266:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"5275:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1967,"nodeType":"UserDefinedTypeName","pathNode":{"id":1966,"name":"RecoverError","nameLocations":["5275:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"5275:12:12"},"referencedDeclaration":1774,"src":"5275:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"5289:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:12"},"scope":2114,"src":"5140:1530:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2063,"nodeType":"Block","src":"6897:166:12","statements":[{"assignments":[2043,2046,2048],"declarations":[{"constant":false,"id":2043,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:12","nodeType":"VariableDeclaration","scope":2063,"src":"6908:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"error","nameLocation":"6940:5:12","nodeType":"VariableDeclaration","scope":2063,"src":"6927:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2045,"nodeType":"UserDefinedTypeName","pathNode":{"id":2044,"name":"RecoverError","nameLocations":["6927:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"6927:12:12"},"referencedDeclaration":1774,"src":"6927:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:12","nodeType":"VariableDeclaration","scope":2063,"src":"6947:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2050,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"6978:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2051,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6984:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2052,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"6987:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2053,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"6990:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2049,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1840,1920,2028],"referencedDeclaration":2028,"src":"6967:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1774_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:12"},{"expression":{"arguments":[{"id":2057,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"7014:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},{"id":2058,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"7021:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2056,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"7002:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1774_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2060,"nodeType":"ExpressionStatement","src":"7002:28:12"},{"expression":{"id":2061,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7047:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2041,"id":2062,"nodeType":"Return","src":"7040:16:12"}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"6676:122:12","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2064,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:12","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"hash","nameLocation":"6828:4:12","nodeType":"VariableDeclaration","scope":2064,"src":"6820:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"v","nameLocation":"6840:1:12","nodeType":"VariableDeclaration","scope":2064,"src":"6834:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2032,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"r","nameLocation":"6851:1:12","nodeType":"VariableDeclaration","scope":2064,"src":"6843:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"s","nameLocation":"6862:1:12","nodeType":"VariableDeclaration","scope":2064,"src":"6854:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:12"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2064,"src":"6888:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:12"},"scope":2114,"src":"6803:260:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"7268:460:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7282:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2074,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"7291:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1770,"src":"7291:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2079,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7378:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2080,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"7387:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"7387:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7483:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2088,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"7492:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"7492:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2099,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7617:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2100,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"7626:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1774_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1773,"src":"7626:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2108,"nodeType":"IfStatement","src":"7613:109:12","trueBody":{"id":2107,"nodeType":"Block","src":"7658:64:12","statements":[{"errorCall":{"arguments":[{"id":2104,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"7702:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2103,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"7679:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2106,"nodeType":"RevertStatement","src":"7672:39:12"}]}},"id":2109,"nodeType":"IfStatement","src":"7479:243:12","trueBody":{"id":2098,"nodeType":"Block","src":"7529:78:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2094,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"7586:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:12","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2091,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"7550:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"RevertStatement","src":"7543:53:12"}]}},"id":2110,"nodeType":"IfStatement","src":"7374:348:12","trueBody":{"id":2086,"nodeType":"Block","src":"7418:55:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2083,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"7439:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2085,"nodeType":"RevertStatement","src":"7432:30:12"}]}},"id":2111,"nodeType":"IfStatement","src":"7278:444:12","trueBody":{"id":2078,"nodeType":"Block","src":"7313:55:12","statements":[{"functionReturnParameters":2072,"id":2077,"nodeType":"Return","src":"7327:7:12"}]}}]},"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"7069:122:12","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:12","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"error","nameLocation":"7230:5:12","nodeType":"VariableDeclaration","scope":2113,"src":"7217:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"RecoverError","nameLocations":["7217:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"7217:12:12"},"referencedDeclaration":1774,"src":"7217:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1774","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:12","nodeType":"VariableDeclaration","scope":2113,"src":"7237:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:12"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"7268:0:12"},"scope":2114,"src":"7196:532:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2115,"src":"344:7386:12","usedErrors":[1777,1782,1787],"usedEvents":[]}],"src":"112:7619:12"},"id":12},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","exportedSymbols":{"EnumerableMap":[3229],"EnumerableSet":[3842]},"id":3230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2116,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"./EnumerableSet.sol","id":2118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3230,"sourceUnit":3843,"src":"231:50:13","symbolAliases":[{"foreign":{"id":2117,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"239:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableMap","contractDependencies":[],"contractKind":"library","documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"283:1367:13","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableMap.\n ===="},"fullyImplemented":true,"id":3229,"linearizedBaseContracts":[3229],"name":"EnumerableMap","nameLocation":"1659:13:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2123,"libraryName":{"id":2120,"name":"EnumerableSet","nameLocations":["1685:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"1685:13:13"},"nodeType":"UsingForDirective","src":"1679:49:13","typeName":{"id":2122,"nodeType":"UserDefinedTypeName","pathNode":{"id":2121,"name":"EnumerableSet.Bytes32Set","nameLocations":["1703:13:13","1717:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"1703:24:13"},"referencedDeclaration":3434,"src":"1703:24:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"2161:56:13","text":" @dev Query for a nonexistent map key."},"errorSelector":"02b56686","id":2128,"name":"EnumerableMapNonexistentKey","nameLocation":"2228:27:13","nodeType":"ErrorDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"key","nameLocation":"2264:3:13","nodeType":"VariableDeclaration","scope":2128,"src":"2256:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2255:13:13"},"src":"2222:47:13"},{"canonicalName":"EnumerableMap.Bytes32ToBytes32Map","id":2136,"members":[{"constant":false,"id":2131,"mutability":"mutable","name":"_keys","nameLocation":"2364:5:13","nodeType":"VariableDeclaration","scope":2136,"src":"2339:30:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2130,"nodeType":"UserDefinedTypeName","pathNode":{"id":2129,"name":"EnumerableSet.Bytes32Set","nameLocations":["2339:13:13","2353:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"2339:24:13"},"referencedDeclaration":3434,"src":"2339:24:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"_values","nameLocation":"2411:7:13","nodeType":"VariableDeclaration","scope":2136,"src":"2379:39:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"typeName":{"id":2134,"keyName":"key","keyNameLocation":"2395:3:13","keyType":{"id":2132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2379:31:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2402:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32ToBytes32Map","nameLocation":"2282:19:13","nodeType":"StructDefinition","scope":3229,"src":"2275:150:13","visibility":"public"},{"body":{"id":2163,"nodeType":"Block","src":"2750:76:13","statements":[{"expression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2149,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2760:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2764:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"2760:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2153,"indexExpression":{"id":2151,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"2772:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2760:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"2779:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2760:24:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2156,"nodeType":"ExpressionStatement","src":"2760:24:13"},{"expression":{"arguments":[{"id":2160,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"2815:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2157,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2801:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2805:5:13","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"2801:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2811:3:13","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3452,"src":"2801:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3434_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3434_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2801:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2148,"id":2162,"nodeType":"Return","src":"2794:25:13"}]},"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"2431:216:13","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"2661:3:13","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"map","nameLocation":"2693:3:13","nodeType":"VariableDeclaration","scope":2164,"src":"2665:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"Bytes32ToBytes32Map","nameLocations":["2665:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"2665:19:13"},"referencedDeclaration":2136,"src":"2665:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"key","nameLocation":"2706:3:13","nodeType":"VariableDeclaration","scope":2164,"src":"2698:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2698:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"value","nameLocation":"2719:5:13","nodeType":"VariableDeclaration","scope":2164,"src":"2711:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2711:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2664:61:13"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"2744:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2146,"name":"bool","nodeType":"ElementaryTypeName","src":"2744:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2743:6:13"},"scope":3229,"src":"2652:174:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"3080:78:13","statements":[{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3090:23:13","subExpression":{"baseExpression":{"expression":{"id":2175,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"3097:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3101:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"3097:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2178,"indexExpression":{"id":2177,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"3109:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3097:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2180,"nodeType":"ExpressionStatement","src":"3090:23:13"},{"expression":{"arguments":[{"id":2184,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"3147:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2181,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"3130:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3134:5:13","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"3130:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3140:6:13","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3470,"src":"3130:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3434_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3434_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3130:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2174,"id":2186,"nodeType":"Return","src":"3123:28:13"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"2832:157:13","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"3003:6:13","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"map","nameLocation":"3038:3:13","nodeType":"VariableDeclaration","scope":2188,"src":"3010:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Bytes32ToBytes32Map","nameLocations":["3010:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"3010:19:13"},"referencedDeclaration":2136,"src":"3010:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"key","nameLocation":"3051:3:13","nodeType":"VariableDeclaration","scope":2188,"src":"3043:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3043:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3009:46:13"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"3074:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2172,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3073:6:13"},"scope":3229,"src":"2994:164:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"3330:47:13","statements":[{"expression":{"arguments":[{"id":2202,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"3366:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2199,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"3347:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3351:5:13","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"3347:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3357:8:13","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"3347:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3434_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3434_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3347:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2198,"id":2204,"nodeType":"Return","src":"3340:30:13"}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"3164:68:13","text":" @dev Returns true if the key is in the map. O(1)."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"3246:8:13","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"map","nameLocation":"3283:3:13","nodeType":"VariableDeclaration","scope":2206,"src":"3255:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2191,"nodeType":"UserDefinedTypeName","pathNode":{"id":2190,"name":"Bytes32ToBytes32Map","nameLocations":["3255:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"3255:19:13"},"referencedDeclaration":2136,"src":"3255:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"key","nameLocation":"3296:3:13","nodeType":"VariableDeclaration","scope":2206,"src":"3288:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3288:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3254:46:13"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"3324:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2196,"name":"bool","nodeType":"ElementaryTypeName","src":"3324:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3323:6:13"},"scope":3229,"src":"3237:140:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2220,"nodeType":"Block","src":"3548:42:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2215,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"3565:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3569:5:13","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"3565:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:6:13","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3503,"src":"3565:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3434_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$3434_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2214,"id":2219,"nodeType":"Return","src":"3558:25:13"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"3383:79:13","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"3476:6:13","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"map","nameLocation":"3511:3:13","nodeType":"VariableDeclaration","scope":2221,"src":"3483:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2209,"nodeType":"UserDefinedTypeName","pathNode":{"id":2208,"name":"Bytes32ToBytes32Map","nameLocations":["3483:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"3483:19:13"},"referencedDeclaration":2136,"src":"3483:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"src":"3482:33:13"},"returnParameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2221,"src":"3539:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:13"},"scope":3229,"src":"3467:123:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2249,"nodeType":"Block","src":"4044:90:13","statements":[{"assignments":[2235],"declarations":[{"constant":false,"id":2235,"mutability":"mutable","name":"key","nameLocation":"4062:3:13","nodeType":"VariableDeclaration","scope":2249,"src":"4054:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4054:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2241,"initialValue":{"arguments":[{"id":2239,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4081:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2236,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4068:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4072:5:13","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"4068:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4078:2:13","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3521,"src":"4068:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3434_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$3434_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4054:33:13"},{"expression":{"components":[{"id":2242,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4105:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":2243,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4110:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4114:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"4110:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2246,"indexExpression":{"id":2245,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4122:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4110:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4104:23:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"functionReturnParameters":2233,"id":2248,"nodeType":"Return","src":"4097:30:13"}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"3596:342:13","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"3952:2:13","nodeType":"FunctionDefinition","parameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"map","nameLocation":"3983:3:13","nodeType":"VariableDeclaration","scope":2250,"src":"3955:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2224,"nodeType":"UserDefinedTypeName","pathNode":{"id":2223,"name":"Bytes32ToBytes32Map","nameLocations":["3955:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"3955:19:13"},"referencedDeclaration":2136,"src":"3955:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"index","nameLocation":"3996:5:13","nodeType":"VariableDeclaration","scope":2250,"src":"3988:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3988:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3954:48:13"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"4026:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4026:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"4035:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4035:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4025:18:13"},"scope":3229,"src":"3943:191:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2293,"nodeType":"Block","src":"4375:198:13","statements":[{"assignments":[2264],"declarations":[{"constant":false,"id":2264,"mutability":"mutable","name":"value","nameLocation":"4393:5:13","nodeType":"VariableDeclaration","scope":2293,"src":"4385:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4385:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2269,"initialValue":{"baseExpression":{"expression":{"id":2265,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4401:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4405:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"4401:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2268,"indexExpression":{"id":2267,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"4413:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4401:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4385:32:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"4431:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4448:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4440:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4440:7:13","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4440:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4431:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2291,"nodeType":"Block","src":"4522:45:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4544:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"4550:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4543:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":2262,"id":2290,"nodeType":"Return","src":"4536:20:13"}]},"id":2292,"nodeType":"IfStatement","src":"4427:140:13","trueBody":{"id":2286,"nodeType":"Block","src":"4452:64:13","statements":[{"expression":{"components":[{"arguments":[{"id":2277,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4483:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2278,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"4488:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2276,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2206,2419,2635,2881,3100],"referencedDeclaration":2206,"src":"4474:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4474:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4502:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4494:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4494:7:13","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4494:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4473:32:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":2262,"id":2285,"nodeType":"Return","src":"4466:39:13"}]}}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"4140:130:13","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2294,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"4284:6:13","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"map","nameLocation":"4319:3:13","nodeType":"VariableDeclaration","scope":2294,"src":"4291:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2253,"nodeType":"UserDefinedTypeName","pathNode":{"id":2252,"name":"Bytes32ToBytes32Map","nameLocations":["4291:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"4291:19:13"},"referencedDeclaration":2136,"src":"4291:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"key","nameLocation":"4332:3:13","nodeType":"VariableDeclaration","scope":2294,"src":"4324:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4324:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4290:46:13"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2294,"src":"4360:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2258,"name":"bool","nodeType":"ElementaryTypeName","src":"4360:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2294,"src":"4366:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4359:15:13"},"scope":3229,"src":"4275:298:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"4815:183:13","statements":[{"assignments":[2306],"declarations":[{"constant":false,"id":2306,"mutability":"mutable","name":"value","nameLocation":"4833:5:13","nodeType":"VariableDeclaration","scope":2329,"src":"4825:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4825:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2311,"initialValue":{"baseExpression":{"expression":{"id":2307,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"4841:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4845:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"4841:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2310,"indexExpression":{"id":2309,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4853:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4841:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4825:32:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4871:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4880:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4871:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4885:19:13","subExpression":{"arguments":[{"id":2316,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"4895:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2317,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4900:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2315,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2206,2419,2635,2881,3100],"referencedDeclaration":2206,"src":"4886:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4871:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2326,"nodeType":"IfStatement","src":"4867:103:13","trueBody":{"id":2325,"nodeType":"Block","src":"4906:64:13","statements":[{"errorCall":{"arguments":[{"id":2322,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4955:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2321,"name":"EnumerableMapNonexistentKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4927:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4927:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"RevertStatement","src":"4920:39:13"}]}},{"expression":{"id":2327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4986:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2304,"id":2328,"nodeType":"Return","src":"4979:12:13"}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"4579:140:13","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"4733:3:13","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"map","nameLocation":"4765:3:13","nodeType":"VariableDeclaration","scope":2330,"src":"4737:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2297,"nodeType":"UserDefinedTypeName","pathNode":{"id":2296,"name":"Bytes32ToBytes32Map","nameLocations":["4737:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"4737:19:13"},"referencedDeclaration":2136,"src":"4737:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"key","nameLocation":"4778:3:13","nodeType":"VariableDeclaration","scope":2330,"src":"4770:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4770:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4736:46:13"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2330,"src":"4806:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4806:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4805:9:13"},"scope":3229,"src":"4724:274:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"5636:42:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2340,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5653:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5657:5:13","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"5653:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5663:6:13","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"5653:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3434_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$3434_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2339,"id":2344,"nodeType":"Return","src":"5646:25:13"}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"5004:539:13","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"5557:4:13","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"map","nameLocation":"5590:3:13","nodeType":"VariableDeclaration","scope":2346,"src":"5562:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2333,"nodeType":"UserDefinedTypeName","pathNode":{"id":2332,"name":"Bytes32ToBytes32Map","nameLocations":["5562:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"5562:19:13"},"referencedDeclaration":2136,"src":"5562:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"src":"5561:33:13"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"5618:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2337,"nodeType":"ArrayTypeName","src":"5618:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5617:18:13"},"scope":3229,"src":"5548:130:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.UintToUintMap","id":2350,"members":[{"constant":false,"id":2349,"mutability":"mutable","name":"_inner","nameLocation":"5757:6:13","nodeType":"VariableDeclaration","scope":2350,"src":"5737:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2348,"nodeType":"UserDefinedTypeName","pathNode":{"id":2347,"name":"Bytes32ToBytes32Map","nameLocations":["5737:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"5737:19:13"},"referencedDeclaration":2136,"src":"5737:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToUintMap","nameLocation":"5713:13:13","nodeType":"StructDefinition","scope":3229,"src":"5706:64:13","visibility":"public"},{"body":{"id":2376,"nodeType":"Block","src":"6089:69:13","statements":[{"expression":{"arguments":[{"expression":{"id":2364,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"6110:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6114:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"6110:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2368,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"6130:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6122:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6122:7:13","typeDescriptions":{}}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6122:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"6144:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6136:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6136:7:13","typeDescriptions":{}}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6136:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2363,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2164,2377,2593,2827,3064],"referencedDeclaration":2164,"src":"6106:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2362,"id":2375,"nodeType":"Return","src":"6099:52:13"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"5776:216:13","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2377,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"6006:3:13","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"map","nameLocation":"6032:3:13","nodeType":"VariableDeclaration","scope":2377,"src":"6010:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2353,"nodeType":"UserDefinedTypeName","pathNode":{"id":2352,"name":"UintToUintMap","nameLocations":["6010:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"6010:13:13"},"referencedDeclaration":2350,"src":"6010:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"key","nameLocation":"6045:3:13","nodeType":"VariableDeclaration","scope":2377,"src":"6037:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6037:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"6058:5:13","nodeType":"VariableDeclaration","scope":2377,"src":"6050:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6009:55:13"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2377,"src":"6083:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2360,"name":"bool","nodeType":"ElementaryTypeName","src":"6083:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6082:6:13"},"scope":3229,"src":"5997:161:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"6397:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":2389,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"6421:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6425:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"6421:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2393,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"6441:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6433:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6433:7:13","typeDescriptions":{}}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2388,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2188,2398,2614,2854,3082],"referencedDeclaration":2188,"src":"6414:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6414:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2387,"id":2396,"nodeType":"Return","src":"6407:39:13"}]},"documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"6164:148:13","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6326:6:13","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"map","nameLocation":"6355:3:13","nodeType":"VariableDeclaration","scope":2398,"src":"6333:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2380,"nodeType":"UserDefinedTypeName","pathNode":{"id":2379,"name":"UintToUintMap","nameLocations":["6333:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"6333:13:13"},"referencedDeclaration":2350,"src":"6333:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"key","nameLocation":"6368:3:13","nodeType":"VariableDeclaration","scope":2398,"src":"6360:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6332:40:13"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"6391:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2385,"name":"bool","nodeType":"ElementaryTypeName","src":"6391:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6390:6:13"},"scope":3229,"src":"6317:136:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"6619:58:13","statements":[{"expression":{"arguments":[{"expression":{"id":2410,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"6645:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6649:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"6645:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2414,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"6665:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6657:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6657:7:13","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6657:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2409,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2206,2419,2635,2881,3100],"referencedDeclaration":2206,"src":"6636:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6636:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2408,"id":2417,"nodeType":"Return","src":"6629:41:13"}]},"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"6459:68:13","text":" @dev Returns true if the key is in the map. O(1)."},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6541:8:13","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"map","nameLocation":"6572:3:13","nodeType":"VariableDeclaration","scope":2419,"src":"6550:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2401,"nodeType":"UserDefinedTypeName","pathNode":{"id":2400,"name":"UintToUintMap","nameLocations":["6550:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"6550:13:13"},"referencedDeclaration":2350,"src":"6550:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"key","nameLocation":"6585:3:13","nodeType":"VariableDeclaration","scope":2419,"src":"6577:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6549:40:13"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"6613:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2406,"name":"bool","nodeType":"ElementaryTypeName","src":"6613:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6612:6:13"},"scope":3229,"src":"6532:145:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"6835:42:13","statements":[{"expression":{"arguments":[{"expression":{"id":2429,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"6859:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6863:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"6859:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2428,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2221,2434,2650,2896,3115],"referencedDeclaration":2221,"src":"6852:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6852:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2427,"id":2432,"nodeType":"Return","src":"6845:25:13"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"6683:72:13","text":" @dev Returns the number of elements in the map. O(1)."},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6769:6:13","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"map","nameLocation":"6798:3:13","nodeType":"VariableDeclaration","scope":2434,"src":"6776:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2422,"nodeType":"UserDefinedTypeName","pathNode":{"id":2421,"name":"UintToUintMap","nameLocations":["6776:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"6776:13:13"},"referencedDeclaration":2350,"src":"6776:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"}],"src":"6775:27:13"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"6826:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"6826:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6825:9:13"},"scope":3229,"src":"6760:117:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2467,"nodeType":"Block","src":"7309:116:13","statements":[{"assignments":[2448,2450],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"key","nameLocation":"7328:3:13","nodeType":"VariableDeclaration","scope":2467,"src":"7320:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7320:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"value","nameLocation":"7341:5:13","nodeType":"VariableDeclaration","scope":2467,"src":"7333:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7333:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2456,"initialValue":{"arguments":[{"expression":{"id":2452,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"7353:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7357:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"7353:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2454,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"7365:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2250,2468,2690,2936,3146],"referencedDeclaration":2250,"src":"7350:2:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7350:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7319:52:13"},{"expression":{"components":[{"arguments":[{"id":2459,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"7397:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:13","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7389:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"7411:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7403:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"7403:7:13","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7403:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7388:30:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2446,"id":2466,"nodeType":"Return","src":"7381:37:13"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"6883:326:13","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7223:2:13","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"map","nameLocation":"7248:3:13","nodeType":"VariableDeclaration","scope":2468,"src":"7226:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2437,"nodeType":"UserDefinedTypeName","pathNode":{"id":2436,"name":"UintToUintMap","nameLocations":["7226:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"7226:13:13"},"referencedDeclaration":2350,"src":"7226:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"index","nameLocation":"7261:5:13","nodeType":"VariableDeclaration","scope":2468,"src":"7253:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"7253:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7225:42:13"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"7291:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"7291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"7300:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"7300:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7290:18:13"},"scope":3229,"src":"7214:211:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"7660:123:13","statements":[{"assignments":[2482,2484],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"success","nameLocation":"7676:7:13","nodeType":"VariableDeclaration","scope":2501,"src":"7671:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2481,"name":"bool","nodeType":"ElementaryTypeName","src":"7671:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2484,"mutability":"mutable","name":"value","nameLocation":"7693:5:13","nodeType":"VariableDeclaration","scope":2501,"src":"7685:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7685:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2493,"initialValue":{"arguments":[{"expression":{"id":2486,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"7709:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7713:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"7709:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2490,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"7729:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7721:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7721:7:13","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7721:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2485,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2294,2502,2730,2976,3177],"referencedDeclaration":2294,"src":"7702:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7670:64:13"},{"expression":{"components":[{"id":2494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"7752:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"7769:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7761:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"7761:7:13","typeDescriptions":{}}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7761:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7751:25:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2480,"id":2500,"nodeType":"Return","src":"7744:32:13"}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"7431:130:13","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"7575:6:13","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"map","nameLocation":"7604:3:13","nodeType":"VariableDeclaration","scope":2502,"src":"7582:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2471,"nodeType":"UserDefinedTypeName","pathNode":{"id":2470,"name":"UintToUintMap","nameLocations":["7582:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"7582:13:13"},"referencedDeclaration":2350,"src":"7582:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"key","nameLocation":"7617:3:13","nodeType":"VariableDeclaration","scope":2502,"src":"7609:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"7609:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7581:40:13"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2502,"src":"7645:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2476,"name":"bool","nodeType":"ElementaryTypeName","src":"7645:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2502,"src":"7651:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"7651:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7644:15:13"},"scope":3229,"src":"7566:217:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2525,"nodeType":"Block","src":"8019:62:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2516,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"8048:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8052:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"8048:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2520,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"8068:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8060:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8060:7:13","typeDescriptions":{}}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8060:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2515,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2330,2526,2760,3006,3198],"referencedDeclaration":2330,"src":"8044:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8036:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:13","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2512,"id":2524,"nodeType":"Return","src":"8029:45:13"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"7789:140:13","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"7943:3:13","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"map","nameLocation":"7969:3:13","nodeType":"VariableDeclaration","scope":2526,"src":"7947:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2505,"nodeType":"UserDefinedTypeName","pathNode":{"id":2504,"name":"UintToUintMap","nameLocations":["7947:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"7947:13:13"},"referencedDeclaration":2350,"src":"7947:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"key","nameLocation":"7982:3:13","nodeType":"VariableDeclaration","scope":2526,"src":"7974:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7946:40:13"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"8010:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"8010:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8009:9:13"},"scope":3229,"src":"7934:147:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"8713:216:13","statements":[{"assignments":[2540],"declarations":[{"constant":false,"id":2540,"mutability":"mutable","name":"store","nameLocation":"8740:5:13","nodeType":"VariableDeclaration","scope":2555,"src":"8723:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8723:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2539,"nodeType":"ArrayTypeName","src":"8723:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2545,"initialValue":{"arguments":[{"expression":{"id":2542,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"8753:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8757:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"8753:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2541,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[2346,2556,2790,3036,3228],"referencedDeclaration":2346,"src":"8748:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8748:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8723:41:13"},{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"result","nameLocation":"8791:6:13","nodeType":"VariableDeclaration","scope":2555,"src":"8774:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ArrayTypeName","src":"8774:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2551,"nodeType":"VariableDeclarationStatement","src":"8774:23:13"},{"AST":{"nativeSrc":"8860:39:13","nodeType":"YulBlock","src":"8860:39:13","statements":[{"nativeSrc":"8874:15:13","nodeType":"YulAssignment","src":"8874:15:13","value":{"name":"store","nativeSrc":"8884:5:13","nodeType":"YulIdentifier","src":"8884:5:13"},"variableNames":[{"name":"result","nativeSrc":"8874:6:13","nodeType":"YulIdentifier","src":"8874:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2550,"isOffset":false,"isSlot":false,"src":"8874:6:13","valueSize":1},{"declaration":2540,"isOffset":false,"isSlot":false,"src":"8884:5:13","valueSize":1}],"id":2552,"nodeType":"InlineAssembly","src":"8851:48:13"},{"expression":{"id":2553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"8916:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2535,"id":2554,"nodeType":"Return","src":"8909:13:13"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"8087:539:13","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"8640:4:13","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"map","nameLocation":"8667:3:13","nodeType":"VariableDeclaration","scope":2556,"src":"8645:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2529,"nodeType":"UserDefinedTypeName","pathNode":{"id":2528,"name":"UintToUintMap","nameLocations":["8645:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"8645:13:13"},"referencedDeclaration":2350,"src":"8645:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2350_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"}],"src":"8644:27:13"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"8695:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"8695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ArrayTypeName","src":"8695:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8694:18:13"},"scope":3229,"src":"8631:298:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.UintToAddressMap","id":2560,"members":[{"constant":false,"id":2559,"mutability":"mutable","name":"_inner","nameLocation":"9014:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"8994:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2558,"nodeType":"UserDefinedTypeName","pathNode":{"id":2557,"name":"Bytes32ToBytes32Map","nameLocations":["8994:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"8994:19:13"},"referencedDeclaration":2136,"src":"8994:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToAddressMap","nameLocation":"8967:16:13","nodeType":"StructDefinition","scope":3229,"src":"8960:67:13","visibility":"public"},{"body":{"id":2592,"nodeType":"Block","src":"9349:87:13","statements":[{"expression":{"arguments":[{"expression":{"id":2574,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9370:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9374:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"9370:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2578,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"9390:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9382:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:13","typeDescriptions":{}}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9420:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9412:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2584,"name":"uint160","nodeType":"ElementaryTypeName","src":"9412:7:13","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9412:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"9404:7:13","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9404:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9396:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9396:7:13","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9396:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2573,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2164,2377,2593,2827,3064],"referencedDeclaration":2164,"src":"9366:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9366:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2572,"id":2591,"nodeType":"Return","src":"9359:70:13"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"9033:216:13","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"9263:3:13","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"map","nameLocation":"9292:3:13","nodeType":"VariableDeclaration","scope":2593,"src":"9267:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2563,"nodeType":"UserDefinedTypeName","pathNode":{"id":2562,"name":"UintToAddressMap","nameLocations":["9267:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"9267:16:13"},"referencedDeclaration":2560,"src":"9267:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"key","nameLocation":"9305:3:13","nodeType":"VariableDeclaration","scope":2593,"src":"9297:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9297:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"value","nameLocation":"9318:5:13","nodeType":"VariableDeclaration","scope":2593,"src":"9310:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"9310:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9266:58:13"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2593,"src":"9343:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2570,"name":"bool","nodeType":"ElementaryTypeName","src":"9343:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9342:6:13"},"scope":3229,"src":"9254:182:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"9678:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":2605,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"9702:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"9702:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2609,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"9722:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9714:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9714:7:13","typeDescriptions":{}}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9714:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2604,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2188,2398,2614,2854,3082],"referencedDeclaration":2188,"src":"9695:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2603,"id":2612,"nodeType":"Return","src":"9688:39:13"}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"9442:148:13","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9604:6:13","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"map","nameLocation":"9636:3:13","nodeType":"VariableDeclaration","scope":2614,"src":"9611:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2596,"nodeType":"UserDefinedTypeName","pathNode":{"id":2595,"name":"UintToAddressMap","nameLocations":["9611:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"9611:16:13"},"referencedDeclaration":2560,"src":"9611:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"key","nameLocation":"9649:3:13","nodeType":"VariableDeclaration","scope":2614,"src":"9641:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9641:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9610:43:13"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"9672:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2601,"name":"bool","nodeType":"ElementaryTypeName","src":"9672:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9671:6:13"},"scope":3229,"src":"9595:139:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"9903:58:13","statements":[{"expression":{"arguments":[{"expression":{"id":2626,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"9929:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9933:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"9929:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2630,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"9949:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9941:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9941:7:13","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9941:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2625,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2206,2419,2635,2881,3100],"referencedDeclaration":2206,"src":"9920:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9920:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2624,"id":2633,"nodeType":"Return","src":"9913:41:13"}]},"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"9740:68:13","text":" @dev Returns true if the key is in the map. O(1)."},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"9822:8:13","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"map","nameLocation":"9856:3:13","nodeType":"VariableDeclaration","scope":2635,"src":"9831:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2617,"nodeType":"UserDefinedTypeName","pathNode":{"id":2616,"name":"UintToAddressMap","nameLocations":["9831:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"9831:16:13"},"referencedDeclaration":2560,"src":"9831:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"key","nameLocation":"9869:3:13","nodeType":"VariableDeclaration","scope":2635,"src":"9861:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"9861:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9830:43:13"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2635,"src":"9897:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2622,"name":"bool","nodeType":"ElementaryTypeName","src":"9897:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9896:6:13"},"scope":3229,"src":"9813:148:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"10122:42:13","statements":[{"expression":{"arguments":[{"expression":{"id":2645,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"10146:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10150:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"10146:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2644,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2221,2434,2650,2896,3115],"referencedDeclaration":2221,"src":"10139:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10139:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2643,"id":2648,"nodeType":"Return","src":"10132:25:13"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"9967:72:13","text":" @dev Returns the number of elements in the map. O(1)."},"id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10053:6:13","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"map","nameLocation":"10085:3:13","nodeType":"VariableDeclaration","scope":2650,"src":"10060:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2638,"nodeType":"UserDefinedTypeName","pathNode":{"id":2637,"name":"UintToAddressMap","nameLocations":["10060:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"10060:16:13"},"referencedDeclaration":2560,"src":"10060:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"}],"src":"10059:30:13"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2650,"src":"10113:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10113:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10112:9:13"},"scope":3229,"src":"10044:120:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"10599:134:13","statements":[{"assignments":[2664,2666],"declarations":[{"constant":false,"id":2664,"mutability":"mutable","name":"key","nameLocation":"10618:3:13","nodeType":"VariableDeclaration","scope":2689,"src":"10610:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10610:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"value","nameLocation":"10631:5:13","nodeType":"VariableDeclaration","scope":2689,"src":"10623:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10623:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2672,"initialValue":{"arguments":[{"expression":{"id":2668,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"10643:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10647:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"10643:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2670,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"10655:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2250,2468,2690,2936,3146],"referencedDeclaration":2250,"src":"10640:2:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10640:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"10609:52:13"},{"expression":{"components":[{"arguments":[{"id":2675,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10687:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10679:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"10679:7:13","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10679:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"arguments":[{"id":2683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10717:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10709:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10709:7:13","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10709:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10701:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2679,"name":"uint160","nodeType":"ElementaryTypeName","src":"10701:7:13","typeDescriptions":{}}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10701:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10693:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"10693:7:13","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10693:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10678:48:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"functionReturnParameters":2662,"id":2688,"nodeType":"Return","src":"10671:55:13"}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"10170:326:13","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"10510:2:13","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"map","nameLocation":"10538:3:13","nodeType":"VariableDeclaration","scope":2690,"src":"10513:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2653,"nodeType":"UserDefinedTypeName","pathNode":{"id":2652,"name":"UintToAddressMap","nameLocations":["10513:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"10513:16:13"},"referencedDeclaration":2560,"src":"10513:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"index","nameLocation":"10551:5:13","nodeType":"VariableDeclaration","scope":2690,"src":"10543:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"10543:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10512:45:13"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"10581:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"10581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"10590:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"10590:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10580:18:13"},"scope":3229,"src":"10501:232:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"10971:141:13","statements":[{"assignments":[2704,2706],"declarations":[{"constant":false,"id":2704,"mutability":"mutable","name":"success","nameLocation":"10987:7:13","nodeType":"VariableDeclaration","scope":2729,"src":"10982:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2703,"name":"bool","nodeType":"ElementaryTypeName","src":"10982:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"value","nameLocation":"11004:5:13","nodeType":"VariableDeclaration","scope":2729,"src":"10996:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10996:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2715,"initialValue":{"arguments":[{"expression":{"id":2708,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"11020:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11024:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"11020:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2712,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"11040:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11032:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11032:7:13","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2707,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2294,2502,2730,2976,3177],"referencedDeclaration":2294,"src":"11013:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"10981:64:13"},{"expression":{"components":[{"id":2716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"11063:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"arguments":[{"id":2723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"11096:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11088:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"11088:7:13","typeDescriptions":{}}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11088:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11080:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2719,"name":"uint160","nodeType":"ElementaryTypeName","src":"11080:7:13","typeDescriptions":{}}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11080:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11072:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"11072:7:13","typeDescriptions":{}}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11072:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11062:43:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2702,"id":2728,"nodeType":"Return","src":"11055:50:13"}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"10739:130:13","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"10883:6:13","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"map","nameLocation":"10915:3:13","nodeType":"VariableDeclaration","scope":2730,"src":"10890:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2693,"nodeType":"UserDefinedTypeName","pathNode":{"id":2692,"name":"UintToAddressMap","nameLocations":["10890:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"10890:16:13"},"referencedDeclaration":2560,"src":"10890:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"key","nameLocation":"10928:3:13","nodeType":"VariableDeclaration","scope":2730,"src":"10920:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10889:43:13"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"10956:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2698,"name":"bool","nodeType":"ElementaryTypeName","src":"10956:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"10962:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"10962:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10955:15:13"},"scope":3229,"src":"10874:238:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2759,"nodeType":"Block","src":"11351:80:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2748,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"11396:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11400:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"11396:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2752,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11416:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11408:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11408:7:13","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11408:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2747,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2330,2526,2760,3006,3198],"referencedDeclaration":2330,"src":"11392:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11392:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11384:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"11384:7:13","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11384:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2743,"name":"uint160","nodeType":"ElementaryTypeName","src":"11376:7:13","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11376:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11368:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"11368:7:13","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11368:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2740,"id":2758,"nodeType":"Return","src":"11361:63:13"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"11118:140:13","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2760,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"11272:3:13","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"map","nameLocation":"11301:3:13","nodeType":"VariableDeclaration","scope":2760,"src":"11276:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2733,"nodeType":"UserDefinedTypeName","pathNode":{"id":2732,"name":"UintToAddressMap","nameLocations":["11276:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"11276:16:13"},"referencedDeclaration":2560,"src":"11276:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"key","nameLocation":"11314:3:13","nodeType":"VariableDeclaration","scope":2760,"src":"11306:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"11306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:13"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2760,"src":"11342:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"11342:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11341:9:13"},"scope":3229,"src":"11263:168:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2789,"nodeType":"Block","src":"12066:216:13","statements":[{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"store","nameLocation":"12093:5:13","nodeType":"VariableDeclaration","scope":2789,"src":"12076:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12076:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2773,"nodeType":"ArrayTypeName","src":"12076:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2779,"initialValue":{"arguments":[{"expression":{"id":2776,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"12106:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12110:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2559,"src":"12106:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2775,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[2346,2556,2790,3036,3228],"referencedDeclaration":2346,"src":"12101:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12076:41:13"},{"assignments":[2784],"declarations":[{"constant":false,"id":2784,"mutability":"mutable","name":"result","nameLocation":"12144:6:13","nodeType":"VariableDeclaration","scope":2789,"src":"12127:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12127:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ArrayTypeName","src":"12127:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2785,"nodeType":"VariableDeclarationStatement","src":"12127:23:13"},{"AST":{"nativeSrc":"12213:39:13","nodeType":"YulBlock","src":"12213:39:13","statements":[{"nativeSrc":"12227:15:13","nodeType":"YulAssignment","src":"12227:15:13","value":{"name":"store","nativeSrc":"12237:5:13","nodeType":"YulIdentifier","src":"12237:5:13"},"variableNames":[{"name":"result","nativeSrc":"12227:6:13","nodeType":"YulIdentifier","src":"12227:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2784,"isOffset":false,"isSlot":false,"src":"12227:6:13","valueSize":1},{"declaration":2774,"isOffset":false,"isSlot":false,"src":"12237:5:13","valueSize":1}],"id":2786,"nodeType":"InlineAssembly","src":"12204:48:13"},{"expression":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12269:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2769,"id":2788,"nodeType":"Return","src":"12262:13:13"}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"11437:539:13","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"11990:4:13","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"map","nameLocation":"12020:3:13","nodeType":"VariableDeclaration","scope":2790,"src":"11995:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2763,"nodeType":"UserDefinedTypeName","pathNode":{"id":2762,"name":"UintToAddressMap","nameLocations":["11995:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"11995:16:13"},"referencedDeclaration":2560,"src":"11995:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2560_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"}],"src":"11994:30:13"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2790,"src":"12048:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"12048:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ArrayTypeName","src":"12048:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12047:18:13"},"scope":3229,"src":"11981:301:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.AddressToUintMap","id":2794,"members":[{"constant":false,"id":2793,"mutability":"mutable","name":"_inner","nameLocation":"12367:6:13","nodeType":"VariableDeclaration","scope":2794,"src":"12347:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"Bytes32ToBytes32Map","nameLocations":["12347:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"12347:19:13"},"referencedDeclaration":2136,"src":"12347:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"AddressToUintMap","nameLocation":"12320:16:13","nodeType":"StructDefinition","scope":3229,"src":"12313:67:13","visibility":"public"},{"body":{"id":2826,"nodeType":"Block","src":"12702:87:13","statements":[{"expression":{"arguments":[{"expression":{"id":2808,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"12723:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12727:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"12723:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2816,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"12759:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12751:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2814,"name":"uint160","nodeType":"ElementaryTypeName","src":"12751:7:13","typeDescriptions":{}}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12751:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12743:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"12743:7:13","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12743:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12735:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12735:7:13","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12735:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"12775:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12767:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12767:7:13","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12767:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2807,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2164,2377,2593,2827,3064],"referencedDeclaration":2164,"src":"12719:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12719:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2806,"id":2825,"nodeType":"Return","src":"12712:70:13"}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"12386:216:13","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"12616:3:13","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"map","nameLocation":"12645:3:13","nodeType":"VariableDeclaration","scope":2827,"src":"12620:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"AddressToUintMap","nameLocations":["12620:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"12620:16:13"},"referencedDeclaration":2794,"src":"12620:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"key","nameLocation":"12658:3:13","nodeType":"VariableDeclaration","scope":2827,"src":"12650:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"12650:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"value","nameLocation":"12671:5:13","nodeType":"VariableDeclaration","scope":2827,"src":"12663:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12619:58:13"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"12696:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2804,"name":"bool","nodeType":"ElementaryTypeName","src":"12696:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12695:6:13"},"scope":3229,"src":"12607:182:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"13031:74:13","statements":[{"expression":{"arguments":[{"expression":{"id":2839,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"13055:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13059:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"13055:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2847,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"13091:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13083:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2845,"name":"uint160","nodeType":"ElementaryTypeName","src":"13083:7:13","typeDescriptions":{}}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13083:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13075:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"13075:7:13","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13075:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13067:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13067:7:13","typeDescriptions":{}}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13067:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2838,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2188,2398,2614,2854,3082],"referencedDeclaration":2188,"src":"13048:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13048:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2837,"id":2852,"nodeType":"Return","src":"13041:57:13"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"12795:148:13","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12957:6:13","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"map","nameLocation":"12989:3:13","nodeType":"VariableDeclaration","scope":2854,"src":"12964:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2830,"nodeType":"UserDefinedTypeName","pathNode":{"id":2829,"name":"AddressToUintMap","nameLocations":["12964:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"12964:16:13"},"referencedDeclaration":2794,"src":"12964:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"key","nameLocation":"13002:3:13","nodeType":"VariableDeclaration","scope":2854,"src":"12994:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"12994:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12963:43:13"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2854,"src":"13025:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2835,"name":"bool","nodeType":"ElementaryTypeName","src":"13025:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13024:6:13"},"scope":3229,"src":"12948:157:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2880,"nodeType":"Block","src":"13274:76:13","statements":[{"expression":{"arguments":[{"expression":{"id":2866,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"13300:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13304:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"13300:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2874,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"13336:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13328:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2872,"name":"uint160","nodeType":"ElementaryTypeName","src":"13328:7:13","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13328:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13320:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"13320:7:13","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13320:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13312:7:13","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13312:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2865,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2206,2419,2635,2881,3100],"referencedDeclaration":2206,"src":"13291:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13291:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2864,"id":2879,"nodeType":"Return","src":"13284:59:13"}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"13111:68:13","text":" @dev Returns true if the key is in the map. O(1)."},"id":2881,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"13193:8:13","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"map","nameLocation":"13227:3:13","nodeType":"VariableDeclaration","scope":2881,"src":"13202:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2857,"nodeType":"UserDefinedTypeName","pathNode":{"id":2856,"name":"AddressToUintMap","nameLocations":["13202:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"13202:16:13"},"referencedDeclaration":2794,"src":"13202:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"key","nameLocation":"13240:3:13","nodeType":"VariableDeclaration","scope":2881,"src":"13232:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"13232:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13201:43:13"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"13268:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2862,"name":"bool","nodeType":"ElementaryTypeName","src":"13268:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13267:6:13"},"scope":3229,"src":"13184:166:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2895,"nodeType":"Block","src":"13511:42:13","statements":[{"expression":{"arguments":[{"expression":{"id":2891,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"13535:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13539:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"13535:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2890,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2221,2434,2650,2896,3115],"referencedDeclaration":2221,"src":"13528:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13528:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2889,"id":2894,"nodeType":"Return","src":"13521:25:13"}]},"documentation":{"id":2882,"nodeType":"StructuredDocumentation","src":"13356:72:13","text":" @dev Returns the number of elements in the map. O(1)."},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"13442:6:13","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"map","nameLocation":"13474:3:13","nodeType":"VariableDeclaration","scope":2896,"src":"13449:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2884,"nodeType":"UserDefinedTypeName","pathNode":{"id":2883,"name":"AddressToUintMap","nameLocations":["13449:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"13449:16:13"},"referencedDeclaration":2794,"src":"13449:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"}],"src":"13448:30:13"},"returnParameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2896,"src":"13502:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"13502:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13501:9:13"},"scope":3229,"src":"13433:120:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2935,"nodeType":"Block","src":"13988:134:13","statements":[{"assignments":[2910,2912],"declarations":[{"constant":false,"id":2910,"mutability":"mutable","name":"key","nameLocation":"14007:3:13","nodeType":"VariableDeclaration","scope":2935,"src":"13999:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13999:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"value","nameLocation":"14020:5:13","nodeType":"VariableDeclaration","scope":2935,"src":"14012:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14012:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2918,"initialValue":{"arguments":[{"expression":{"id":2914,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14032:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14036:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"14032:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2916,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"14044:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2913,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2250,2468,2690,2936,3146],"referencedDeclaration":2250,"src":"14029:2:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14029:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"13998:52:13"},{"expression":{"components":[{"arguments":[{"arguments":[{"arguments":[{"id":2925,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"14092:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14084:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"14084:7:13","typeDescriptions":{}}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14084:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14076:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2921,"name":"uint160","nodeType":"ElementaryTypeName","src":"14076:7:13","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14076:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14068:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"14068:7:13","typeDescriptions":{}}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14068:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"14108:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14100:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"14100:7:13","typeDescriptions":{}}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14067:48:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":2908,"id":2934,"nodeType":"Return","src":"14060:55:13"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"13559:326:13","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2936,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13899:2:13","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"map","nameLocation":"13927:3:13","nodeType":"VariableDeclaration","scope":2936,"src":"13902:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2899,"nodeType":"UserDefinedTypeName","pathNode":{"id":2898,"name":"AddressToUintMap","nameLocations":["13902:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"13902:16:13"},"referencedDeclaration":2794,"src":"13902:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"index","nameLocation":"13940:5:13","nodeType":"VariableDeclaration","scope":2936,"src":"13932:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13901:45:13"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2936,"src":"13970:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"13970:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2936,"src":"13979:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"13979:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13969:18:13"},"scope":3229,"src":"13890:232:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2975,"nodeType":"Block","src":"14360:141:13","statements":[{"assignments":[2950,2952],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"success","nameLocation":"14376:7:13","nodeType":"VariableDeclaration","scope":2975,"src":"14371:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2949,"name":"bool","nodeType":"ElementaryTypeName","src":"14371:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"value","nameLocation":"14393:5:13","nodeType":"VariableDeclaration","scope":2975,"src":"14385:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14385:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2967,"initialValue":{"arguments":[{"expression":{"id":2954,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"14409:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14413:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"14409:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2962,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"14445:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14437:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2960,"name":"uint160","nodeType":"ElementaryTypeName","src":"14437:7:13","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14437:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14429:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"14429:7:13","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14429:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14421:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14421:7:13","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2953,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2294,2502,2730,2976,3177],"referencedDeclaration":2294,"src":"14402:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14402:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"14370:82:13"},{"expression":{"components":[{"id":2968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"14470:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"14487:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"14479:7:13","typeDescriptions":{}}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14469:25:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2948,"id":2974,"nodeType":"Return","src":"14462:32:13"}]},"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"14128:130:13","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"14272:6:13","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"map","nameLocation":"14304:3:13","nodeType":"VariableDeclaration","scope":2976,"src":"14279:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2939,"nodeType":"UserDefinedTypeName","pathNode":{"id":2938,"name":"AddressToUintMap","nameLocations":["14279:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"14279:16:13"},"referencedDeclaration":2794,"src":"14279:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"key","nameLocation":"14317:3:13","nodeType":"VariableDeclaration","scope":2976,"src":"14309:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"14309:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14278:43:13"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"14345:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2944,"name":"bool","nodeType":"ElementaryTypeName","src":"14345:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"14351:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"14351:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14344:15:13"},"scope":3229,"src":"14263:238:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"14740:80:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2990,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"14769:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14773:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"14769:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2998,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"14805:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14797:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2996,"name":"uint160","nodeType":"ElementaryTypeName","src":"14797:7:13","typeDescriptions":{}}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14797:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14789:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"14789:7:13","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14789:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14781:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14781:7:13","typeDescriptions":{}}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14781:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2989,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2330,2526,2760,3006,3198],"referencedDeclaration":2330,"src":"14765:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14765:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14757:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"14757:7:13","typeDescriptions":{}}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14757:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2986,"id":3004,"nodeType":"Return","src":"14750:63:13"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"14507:140:13","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"14661:3:13","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"map","nameLocation":"14690:3:13","nodeType":"VariableDeclaration","scope":3006,"src":"14665:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2979,"nodeType":"UserDefinedTypeName","pathNode":{"id":2978,"name":"AddressToUintMap","nameLocations":["14665:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"14665:16:13"},"referencedDeclaration":2794,"src":"14665:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"key","nameLocation":"14703:3:13","nodeType":"VariableDeclaration","scope":3006,"src":"14695:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"14695:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14664:43:13"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"14731:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"14731:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14730:9:13"},"scope":3229,"src":"14652:168:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"15455:216:13","statements":[{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"store","nameLocation":"15482:5:13","nodeType":"VariableDeclaration","scope":3035,"src":"15465:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15465:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3019,"nodeType":"ArrayTypeName","src":"15465:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[{"expression":{"id":3022,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"15495:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15499:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"15495:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3021,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[2346,2556,2790,3036,3228],"referencedDeclaration":2346,"src":"15490:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15490:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15465:41:13"},{"assignments":[3030],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"result","nameLocation":"15533:6:13","nodeType":"VariableDeclaration","scope":3035,"src":"15516:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3029,"nodeType":"ArrayTypeName","src":"15516:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3031,"nodeType":"VariableDeclarationStatement","src":"15516:23:13"},{"AST":{"nativeSrc":"15602:39:13","nodeType":"YulBlock","src":"15602:39:13","statements":[{"nativeSrc":"15616:15:13","nodeType":"YulAssignment","src":"15616:15:13","value":{"name":"store","nativeSrc":"15626:5:13","nodeType":"YulIdentifier","src":"15626:5:13"},"variableNames":[{"name":"result","nativeSrc":"15616:6:13","nodeType":"YulIdentifier","src":"15616:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3030,"isOffset":false,"isSlot":false,"src":"15616:6:13","valueSize":1},{"declaration":3020,"isOffset":false,"isSlot":false,"src":"15626:5:13","valueSize":1}],"id":3032,"nodeType":"InlineAssembly","src":"15593:48:13"},{"expression":{"id":3033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"15658:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3015,"id":3034,"nodeType":"Return","src":"15651:13:13"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"14826:539:13","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"15379:4:13","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"map","nameLocation":"15409:3:13","nodeType":"VariableDeclaration","scope":3036,"src":"15384:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3009,"nodeType":"UserDefinedTypeName","pathNode":{"id":3008,"name":"AddressToUintMap","nameLocations":["15384:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"15384:16:13"},"referencedDeclaration":2794,"src":"15384:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2794_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"}],"src":"15383:30:13"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"15437:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3012,"name":"address","nodeType":"ElementaryTypeName","src":"15437:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3013,"nodeType":"ArrayTypeName","src":"15437:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15436:18:13"},"scope":3229,"src":"15370:301:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.Bytes32ToUintMap","id":3040,"members":[{"constant":false,"id":3039,"mutability":"mutable","name":"_inner","nameLocation":"15756:6:13","nodeType":"VariableDeclaration","scope":3040,"src":"15736:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":3038,"nodeType":"UserDefinedTypeName","pathNode":{"id":3037,"name":"Bytes32ToBytes32Map","nameLocations":["15736:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"15736:19:13"},"referencedDeclaration":2136,"src":"15736:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"Bytes32ToUintMap","nameLocation":"15709:16:13","nodeType":"StructDefinition","scope":3229,"src":"15702:67:13","visibility":"public"},{"body":{"id":3063,"nodeType":"Block","src":"16091:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":3054,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"16112:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16116:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"16112:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3056,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"16124:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"16137:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16129:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16129:7:13","typeDescriptions":{}}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16129:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3053,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2164,2377,2593,2827,3064],"referencedDeclaration":2164,"src":"16108:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16108:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3052,"id":3062,"nodeType":"Return","src":"16101:43:13"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"15775:216:13","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"16005:3:13","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"map","nameLocation":"16034:3:13","nodeType":"VariableDeclaration","scope":3064,"src":"16009:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3043,"nodeType":"UserDefinedTypeName","pathNode":{"id":3042,"name":"Bytes32ToUintMap","nameLocations":["16009:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"16009:16:13"},"referencedDeclaration":3040,"src":"16009:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"key","nameLocation":"16047:3:13","nodeType":"VariableDeclaration","scope":3064,"src":"16039:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16039:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"value","nameLocation":"16060:5:13","nodeType":"VariableDeclaration","scope":3064,"src":"16052:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"16052:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16008:58:13"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3064,"src":"16085:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3050,"name":"bool","nodeType":"ElementaryTypeName","src":"16085:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16084:6:13"},"scope":3229,"src":"15996:155:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"16393:47:13","statements":[{"expression":{"arguments":[{"expression":{"id":3076,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"16417:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16421:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"16417:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3078,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"16429:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3075,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2188,2398,2614,2854,3082],"referencedDeclaration":2188,"src":"16410:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16410:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3074,"id":3080,"nodeType":"Return","src":"16403:30:13"}]},"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"16157:148:13","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"16319:6:13","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"map","nameLocation":"16351:3:13","nodeType":"VariableDeclaration","scope":3082,"src":"16326:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3067,"nodeType":"UserDefinedTypeName","pathNode":{"id":3066,"name":"Bytes32ToUintMap","nameLocations":["16326:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"16326:16:13"},"referencedDeclaration":3040,"src":"16326:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"key","nameLocation":"16364:3:13","nodeType":"VariableDeclaration","scope":3082,"src":"16356:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16356:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16325:43:13"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3082,"src":"16387:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"16387:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16386:6:13"},"scope":3229,"src":"16310:130:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"16609:49:13","statements":[{"expression":{"arguments":[{"expression":{"id":3094,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"16635:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16639:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"16635:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3096,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"16647:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3093,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2206,2419,2635,2881,3100],"referencedDeclaration":2206,"src":"16626:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16626:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3092,"id":3098,"nodeType":"Return","src":"16619:32:13"}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"16446:68:13","text":" @dev Returns true if the key is in the map. O(1)."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"16528:8:13","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"map","nameLocation":"16562:3:13","nodeType":"VariableDeclaration","scope":3100,"src":"16537:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3085,"nodeType":"UserDefinedTypeName","pathNode":{"id":3084,"name":"Bytes32ToUintMap","nameLocations":["16537:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"16537:16:13"},"referencedDeclaration":3040,"src":"16537:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"key","nameLocation":"16575:3:13","nodeType":"VariableDeclaration","scope":3100,"src":"16567:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16567:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16536:43:13"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3100,"src":"16603:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"16603:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16602:6:13"},"scope":3229,"src":"16519:139:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"16819:42:13","statements":[{"expression":{"arguments":[{"expression":{"id":3110,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"16843:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16847:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"16843:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3109,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2221,2434,2650,2896,3115],"referencedDeclaration":2221,"src":"16836:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16836:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3108,"id":3113,"nodeType":"Return","src":"16829:25:13"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"16664:72:13","text":" @dev Returns the number of elements in the map. O(1)."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"16750:6:13","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"map","nameLocation":"16782:3:13","nodeType":"VariableDeclaration","scope":3115,"src":"16757:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"Bytes32ToUintMap","nameLocations":["16757:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"16757:16:13"},"referencedDeclaration":3040,"src":"16757:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"}],"src":"16756:30:13"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"16810:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"16810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16809:9:13"},"scope":3229,"src":"16741:120:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"17296:107:13","statements":[{"assignments":[3129,3131],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"key","nameLocation":"17315:3:13","nodeType":"VariableDeclaration","scope":3145,"src":"17307:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17307:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"value","nameLocation":"17328:5:13","nodeType":"VariableDeclaration","scope":3145,"src":"17320:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17320:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3137,"initialValue":{"arguments":[{"expression":{"id":3133,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"17340:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17344:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"17340:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3135,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"17352:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3132,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2250,2468,2690,2936,3146],"referencedDeclaration":2250,"src":"17337:2:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17337:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"17306:52:13"},{"expression":{"components":[{"id":3138,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"17376:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"17389:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17381:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"17381:7:13","typeDescriptions":{}}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17381:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17375:21:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"functionReturnParameters":3127,"id":3144,"nodeType":"Return","src":"17368:28:13"}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"16867:326:13","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"17207:2:13","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"map","nameLocation":"17235:3:13","nodeType":"VariableDeclaration","scope":3146,"src":"17210:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3118,"nodeType":"UserDefinedTypeName","pathNode":{"id":3117,"name":"Bytes32ToUintMap","nameLocations":["17210:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"17210:16:13"},"referencedDeclaration":3040,"src":"17210:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"index","nameLocation":"17248:5:13","nodeType":"VariableDeclaration","scope":3146,"src":"17240:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"17240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17209:45:13"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"17278:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17278:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"17287:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"17287:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17277:18:13"},"scope":3229,"src":"17198:205:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3176,"nodeType":"Block","src":"17641:114:13","statements":[{"assignments":[3160,3162],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"success","nameLocation":"17657:7:13","nodeType":"VariableDeclaration","scope":3176,"src":"17652:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3159,"name":"bool","nodeType":"ElementaryTypeName","src":"17652:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"value","nameLocation":"17674:5:13","nodeType":"VariableDeclaration","scope":3176,"src":"17666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17666:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3168,"initialValue":{"arguments":[{"expression":{"id":3164,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"17690:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17694:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"17690:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3166,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"17702:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3163,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2294,2502,2730,2976,3177],"referencedDeclaration":2294,"src":"17683:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17683:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"17651:55:13"},{"expression":{"components":[{"id":3169,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"17724:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":3172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"17741:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17733:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"17733:7:13","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17733:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17723:25:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3158,"id":3175,"nodeType":"Return","src":"17716:32:13"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"17409:130:13","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"17553:6:13","nodeType":"FunctionDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"map","nameLocation":"17585:3:13","nodeType":"VariableDeclaration","scope":3177,"src":"17560:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3149,"nodeType":"UserDefinedTypeName","pathNode":{"id":3148,"name":"Bytes32ToUintMap","nameLocations":["17560:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"17560:16:13"},"referencedDeclaration":3040,"src":"17560:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"key","nameLocation":"17598:3:13","nodeType":"VariableDeclaration","scope":3177,"src":"17590:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17590:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17559:43:13"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"17626:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3154,"name":"bool","nodeType":"ElementaryTypeName","src":"17626:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"17632:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"17632:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17625:15:13"},"scope":3229,"src":"17544:211:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"17994:53:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3191,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"18023:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18027:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"18023:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3193,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"18035:3:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3190,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2330,2526,2760,3006,3198],"referencedDeclaration":2330,"src":"18019:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18019:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18011:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"18011:7:13","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18011:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3187,"id":3196,"nodeType":"Return","src":"18004:36:13"}]},"documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"17761:140:13","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"17915:3:13","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"map","nameLocation":"17944:3:13","nodeType":"VariableDeclaration","scope":3198,"src":"17919:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"Bytes32ToUintMap","nameLocations":["17919:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"17919:16:13"},"referencedDeclaration":3040,"src":"17919:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"key","nameLocation":"17957:3:13","nodeType":"VariableDeclaration","scope":3198,"src":"17949:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17949:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17918:43:13"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3198,"src":"17985:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"17985:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17984:9:13"},"scope":3229,"src":"17906:141:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"18682:216:13","statements":[{"assignments":[3212],"declarations":[{"constant":false,"id":3212,"mutability":"mutable","name":"store","nameLocation":"18709:5:13","nodeType":"VariableDeclaration","scope":3227,"src":"18692:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18692:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3211,"nodeType":"ArrayTypeName","src":"18692:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3217,"initialValue":{"arguments":[{"expression":{"id":3214,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"18722:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18726:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3039,"src":"18722:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2136_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3213,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[2346,2556,2790,3036,3228],"referencedDeclaration":2346,"src":"18717:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2136_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18717:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18692:41:13"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"result","nameLocation":"18760:6:13","nodeType":"VariableDeclaration","scope":3227,"src":"18743:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18743:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3221,"nodeType":"ArrayTypeName","src":"18743:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3223,"nodeType":"VariableDeclarationStatement","src":"18743:23:13"},{"AST":{"nativeSrc":"18829:39:13","nodeType":"YulBlock","src":"18829:39:13","statements":[{"nativeSrc":"18843:15:13","nodeType":"YulAssignment","src":"18843:15:13","value":{"name":"store","nativeSrc":"18853:5:13","nodeType":"YulIdentifier","src":"18853:5:13"},"variableNames":[{"name":"result","nativeSrc":"18843:6:13","nodeType":"YulIdentifier","src":"18843:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3222,"isOffset":false,"isSlot":false,"src":"18843:6:13","valueSize":1},{"declaration":3212,"isOffset":false,"isSlot":false,"src":"18853:5:13","valueSize":1}],"id":3224,"nodeType":"InlineAssembly","src":"18820:48:13"},{"expression":{"id":3225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"18885:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3207,"id":3226,"nodeType":"Return","src":"18878:13:13"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"18053:539:13","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"18606:4:13","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"map","nameLocation":"18636:3:13","nodeType":"VariableDeclaration","scope":3228,"src":"18611:28:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"Bytes32ToUintMap","nameLocations":["18611:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"18611:16:13"},"referencedDeclaration":3040,"src":"18611:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3040_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"}],"src":"18610:30:13"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"18664:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18664:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3205,"nodeType":"ArrayTypeName","src":"18664:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18663:18:13"},"scope":3229,"src":"18597:301:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3230,"src":"1651:17249:13","usedErrors":[2128],"usedEvents":[]}],"src":"205:18696:13"},"id":13},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[3842]},"id":3843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"231:1098:14","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3842,"linearizedBaseContracts":[3842],"name":"EnumerableSet","nameLocation":"1338:13:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3240,"members":[{"constant":false,"id":3235,"mutability":"mutable","name":"_values","nameLocation":"1862:7:14","nodeType":"VariableDeclaration","scope":3240,"src":"1852:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3234,"nodeType":"ArrayTypeName","src":"1852:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:14","nodeType":"VariableDeclaration","scope":3240,"src":"2020:44:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3238,"keyName":"value","keyNameLocation":"2036:5:14","keyType":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:14","nodeType":"StructDefinition","scope":3842,"src":"1798:273:14","visibility":"public"},{"body":{"id":3281,"nodeType":"Block","src":"2310:337:14","statements":[{"condition":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:14","subExpression":{"arguments":[{"id":3252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2335:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"2340:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3251,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"2325:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3279,"nodeType":"Block","src":"2604:37:14","statements":[{"expression":{"hexValue":"66616c7365","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3250,"id":3278,"nodeType":"Return","src":"2618:12:14"}]},"id":3280,"nodeType":"IfStatement","src":"2320:321:14","trueBody":{"id":3276,"nodeType":"Block","src":"2348:250:14","statements":[{"expression":{"arguments":[{"id":3261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"2379:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3256,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2362:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"2362:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:14","memberName":"push","nodeType":"MemberAccess","src":"2362:16:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3263,"nodeType":"ExpressionStatement","src":"2362:23:14"},{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3264,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2520:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"2520:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3268,"indexExpression":{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"2535:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3269,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2544:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"2544:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:14","memberName":"length","nodeType":"MemberAccess","src":"2544:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3273,"nodeType":"ExpressionStatement","src":"2520:42:14"},{"expression":{"hexValue":"74727565","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3250,"id":3275,"nodeType":"Return","src":"2576:11:14"}]}}]},"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"2077:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:14","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"set","nameLocation":"2267:3:14","nodeType":"VariableDeclaration","scope":3282,"src":"2255:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"Set","nameLocations":["2255:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"2255:3:14"},"referencedDeclaration":3240,"src":"2255:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"value","nameLocation":"2280:5:14","nodeType":"VariableDeclaration","scope":3282,"src":"2272:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:14"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"2304:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3248,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:14"},"scope":3842,"src":"2241:406:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3365,"nodeType":"Block","src":"2887:1296:14","statements":[{"assignments":[3294],"declarations":[{"constant":false,"id":3294,"mutability":"mutable","name":"position","nameLocation":"2999:8:14","nodeType":"VariableDeclaration","scope":3365,"src":"2991:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3299,"initialValue":{"baseExpression":{"expression":{"id":3295,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3010:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"3010:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3298,"indexExpression":{"id":3297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"3025:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"3046:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3363,"nodeType":"Block","src":"4140:37:14","statements":[{"expression":{"hexValue":"66616c7365","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3292,"id":3362,"nodeType":"Return","src":"4154:12:14"}]},"id":3364,"nodeType":"IfStatement","src":"3042:1135:14","trueBody":{"id":3360,"nodeType":"Block","src":"3061:1073:14","statements":[{"assignments":[3304],"declarations":[{"constant":false,"id":3304,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:14","nodeType":"VariableDeclaration","scope":3360,"src":"3413:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3308,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"3434:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:14"},{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:14","nodeType":"VariableDeclaration","scope":3360,"src":"3460:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3316,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3311,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3480:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"3480:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:14","memberName":"length","nodeType":"MemberAccess","src":"3480:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"3521:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3318,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3535:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3344,"nodeType":"IfStatement","src":"3517:378:14","trueBody":{"id":3343,"nodeType":"Block","src":"3546:349:14","statements":[{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:14","nodeType":"VariableDeclaration","scope":3343,"src":"3564:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3326,"initialValue":{"baseExpression":{"expression":{"id":3322,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3584:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"3584:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3325,"indexExpression":{"id":3324,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3596:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:14"},{"expression":{"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3327,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3705:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"3705:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3331,"indexExpression":{"id":3329,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"3717:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3332,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3731:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3334,"nodeType":"ExpressionStatement","src":"3705:35:14"},{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3335,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3844:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"3844:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3339,"indexExpression":{"id":3337,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"3859:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3340,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"3872:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3342,"nodeType":"ExpressionStatement","src":"3844:36:14"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3345,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"3973:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"3973:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:14","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:14","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"ExpressionStatement","src":"3973:17:14"},{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:14","subExpression":{"baseExpression":{"expression":{"id":3352,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4076:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"4076:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3355,"indexExpression":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"4091:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3357,"nodeType":"ExpressionStatement","src":"4069:28:14"},{"expression":{"hexValue":"74727565","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3292,"id":3359,"nodeType":"Return","src":"4112:11:14"}]}}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"2653:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3366,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:14","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"set","nameLocation":"2844:3:14","nodeType":"VariableDeclaration","scope":3366,"src":"2832:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3285,"nodeType":"UserDefinedTypeName","pathNode":{"id":3284,"name":"Set","nameLocations":["2832:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"2832:3:14"},"referencedDeclaration":3240,"src":"2832:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"value","nameLocation":"2857:5:14","nodeType":"VariableDeclaration","scope":3366,"src":"2849:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:14"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3366,"src":"2881:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3290,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:14"},"scope":3842,"src":"2815:1368:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3384,"nodeType":"Block","src":"4343:50:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3377,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"4360:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"4360:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3380,"indexExpression":{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"4375:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3376,"id":3383,"nodeType":"Return","src":"4353:33:14"}]},"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"4189:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3385,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:14","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"set","nameLocation":"4295:3:14","nodeType":"VariableDeclaration","scope":3385,"src":"4283:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3369,"nodeType":"UserDefinedTypeName","pathNode":{"id":3368,"name":"Set","nameLocations":["4283:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"4283:3:14"},"referencedDeclaration":3240,"src":"4283:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"value","nameLocation":"4308:5:14","nodeType":"VariableDeclaration","scope":3385,"src":"4300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:14"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3385,"src":"4337:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3374,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:14"},"scope":3842,"src":"4264:129:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3398,"nodeType":"Block","src":"4539:42:14","statements":[{"expression":{"expression":{"expression":{"id":3394,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"4556:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"4556:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:14","memberName":"length","nodeType":"MemberAccess","src":"4556:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3393,"id":3397,"nodeType":"Return","src":"4549:25:14"}]},"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"4399:70:14","text":" @dev Returns the number of values on the set. O(1)."},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:14","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"set","nameLocation":"4503:3:14","nodeType":"VariableDeclaration","scope":3399,"src":"4491:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3388,"nodeType":"UserDefinedTypeName","pathNode":{"id":3387,"name":"Set","nameLocations":["4491:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"4491:3:14"},"referencedDeclaration":3240,"src":"4491:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:14"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3399,"src":"4530:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:14"},"scope":3842,"src":"4474:107:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3415,"nodeType":"Block","src":"4999:42:14","statements":[{"expression":{"baseExpression":{"expression":{"id":3410,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"5016:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"5016:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3413,"indexExpression":{"id":3412,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"5028:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3409,"id":3414,"nodeType":"Return","src":"5009:25:14"}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"4587:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3416,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:14","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"set","nameLocation":"4948:3:14","nodeType":"VariableDeclaration","scope":3416,"src":"4936:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3402,"nodeType":"UserDefinedTypeName","pathNode":{"id":3401,"name":"Set","nameLocations":["4936:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"4936:3:14"},"referencedDeclaration":3240,"src":"4936:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"index","nameLocation":"4961:5:14","nodeType":"VariableDeclaration","scope":3416,"src":"4953:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:14"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3416,"src":"4990:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:14"},"scope":3842,"src":"4923:118:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3429,"nodeType":"Block","src":"5655:35:14","statements":[{"expression":{"expression":{"id":3426,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"5672:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"5672:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3425,"id":3428,"nodeType":"Return","src":"5665:18:14"}]},"documentation":{"id":3417,"nodeType":"StructuredDocumentation","src":"5047:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:14","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"set","nameLocation":"5610:3:14","nodeType":"VariableDeclaration","scope":3430,"src":"5598:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3419,"nodeType":"UserDefinedTypeName","pathNode":{"id":3418,"name":"Set","nameLocations":["5598:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"5598:3:14"},"referencedDeclaration":3240,"src":"5598:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:14"},"returnParameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"5637:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3423,"nodeType":"ArrayTypeName","src":"5637:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:14"},"scope":3842,"src":"5581:109:14","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3434,"members":[{"constant":false,"id":3433,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:14","nodeType":"VariableDeclaration","scope":3434,"src":"5743:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3432,"nodeType":"UserDefinedTypeName","pathNode":{"id":3431,"name":"Set","nameLocations":["5743:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"5743:3:14"},"referencedDeclaration":3240,"src":"5743:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:14","nodeType":"StructDefinition","scope":3842,"src":"5715:45:14","visibility":"public"},{"body":{"id":3451,"nodeType":"Block","src":"6006:47:14","statements":[{"expression":{"arguments":[{"expression":{"id":3446,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6028:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"6028:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"6040:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3445,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"6023:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3444,"id":3450,"nodeType":"Return","src":"6016:30:14"}]},"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"5766:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3452,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:14","nodeType":"FunctionDefinition","parameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"set","nameLocation":"5962:3:14","nodeType":"VariableDeclaration","scope":3452,"src":"5943:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3437,"nodeType":"UserDefinedTypeName","pathNode":{"id":3436,"name":"Bytes32Set","nameLocations":["5943:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"5943:10:14"},"referencedDeclaration":3434,"src":"5943:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"value","nameLocation":"5975:5:14","nodeType":"VariableDeclaration","scope":3452,"src":"5967:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:14"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3452,"src":"6000:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3442,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:14"},"scope":3842,"src":"5930:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3469,"nodeType":"Block","src":"6300:50:14","statements":[{"expression":{"arguments":[{"expression":{"id":3464,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"6325:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"6325:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"6337:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3463,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"6317:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3462,"id":3468,"nodeType":"Return","src":"6310:33:14"}]},"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"6059:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3470,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:14","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"set","nameLocation":"6256:3:14","nodeType":"VariableDeclaration","scope":3470,"src":"6237:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3455,"nodeType":"UserDefinedTypeName","pathNode":{"id":3454,"name":"Bytes32Set","nameLocations":["6237:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"6237:10:14"},"referencedDeclaration":3434,"src":"6237:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"value","nameLocation":"6269:5:14","nodeType":"VariableDeclaration","scope":3470,"src":"6261:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:14"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"6294:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3460,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:14"},"scope":3842,"src":"6221:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"6517:52:14","statements":[{"expression":{"arguments":[{"expression":{"id":3482,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"6544:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"6544:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"6556:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3481,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"6534:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3480,"id":3486,"nodeType":"Return","src":"6527:35:14"}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"6356:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:14","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"set","nameLocation":"6468:3:14","nodeType":"VariableDeclaration","scope":3488,"src":"6449:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3473,"nodeType":"UserDefinedTypeName","pathNode":{"id":3472,"name":"Bytes32Set","nameLocations":["6449:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"6449:10:14"},"referencedDeclaration":3434,"src":"6449:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"value","nameLocation":"6481:5:14","nodeType":"VariableDeclaration","scope":3488,"src":"6473:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:14"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"6511:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3478,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:14"},"scope":3842,"src":"6431:138:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3502,"nodeType":"Block","src":"6722:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3498,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6747:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"6747:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3497,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"6739:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3496,"id":3501,"nodeType":"Return","src":"6732:26:14"}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"6575:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3503,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:14","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"set","nameLocation":"6685:3:14","nodeType":"VariableDeclaration","scope":3503,"src":"6666:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3491,"nodeType":"UserDefinedTypeName","pathNode":{"id":3490,"name":"Bytes32Set","nameLocations":["6666:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"6666:10:14"},"referencedDeclaration":3434,"src":"6666:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:14"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3503,"src":"6713:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:14"},"scope":3842,"src":"6650:115:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3520,"nodeType":"Block","src":"7190:46:14","statements":[{"expression":{"arguments":[{"expression":{"id":3515,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7211:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"7211:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3517,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"7223:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3514,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"7207:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3513,"id":3519,"nodeType":"Return","src":"7200:29:14"}]},"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"6771:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:14","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"set","nameLocation":"7138:3:14","nodeType":"VariableDeclaration","scope":3521,"src":"7119:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3506,"nodeType":"UserDefinedTypeName","pathNode":{"id":3505,"name":"Bytes32Set","nameLocations":["7119:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"7119:10:14"},"referencedDeclaration":3434,"src":"7119:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"index","nameLocation":"7151:5:14","nodeType":"VariableDeclaration","scope":3521,"src":"7143:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:14"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3521,"src":"7181:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:14"},"scope":3842,"src":"7107:129:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3550,"nodeType":"Block","src":"7857:219:14","statements":[{"assignments":[3535],"declarations":[{"constant":false,"id":3535,"mutability":"mutable","name":"store","nameLocation":"7884:5:14","nodeType":"VariableDeclaration","scope":3550,"src":"7867:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3534,"nodeType":"ArrayTypeName","src":"7867:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3540,"initialValue":{"arguments":[{"expression":{"id":3537,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"7900:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3433,"src":"7900:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3536,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"7892:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:14"},{"assignments":[3545],"declarations":[{"constant":false,"id":3545,"mutability":"mutable","name":"result","nameLocation":"7938:6:14","nodeType":"VariableDeclaration","scope":3550,"src":"7921:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3544,"nodeType":"ArrayTypeName","src":"7921:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3546,"nodeType":"VariableDeclarationStatement","src":"7921:23:14"},{"AST":{"nativeSrc":"8007:39:14","nodeType":"YulBlock","src":"8007:39:14","statements":[{"nativeSrc":"8021:15:14","nodeType":"YulAssignment","src":"8021:15:14","value":{"name":"store","nativeSrc":"8031:5:14","nodeType":"YulIdentifier","src":"8031:5:14"},"variableNames":[{"name":"result","nativeSrc":"8021:6:14","nodeType":"YulIdentifier","src":"8021:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3545,"isOffset":false,"isSlot":false,"src":"8021:6:14","valueSize":1},{"declaration":3535,"isOffset":false,"isSlot":false,"src":"8031:5:14","valueSize":1}],"id":3547,"nodeType":"InlineAssembly","src":"7998:48:14"},{"expression":{"id":3548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"8063:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3530,"id":3549,"nodeType":"Return","src":"8056:13:14"}]},"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"7242:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3551,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:14","nodeType":"FunctionDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"set","nameLocation":"7811:3:14","nodeType":"VariableDeclaration","scope":3551,"src":"7792:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3524,"nodeType":"UserDefinedTypeName","pathNode":{"id":3523,"name":"Bytes32Set","nameLocations":["7792:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3434,"src":"7792:10:14"},"referencedDeclaration":3434,"src":"7792:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3434_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:14"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3551,"src":"7839:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3528,"nodeType":"ArrayTypeName","src":"7839:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:14"},"scope":3842,"src":"7776:300:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3555,"members":[{"constant":false,"id":3554,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:14","nodeType":"VariableDeclaration","scope":3555,"src":"8129:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3553,"nodeType":"UserDefinedTypeName","pathNode":{"id":3552,"name":"Set","nameLocations":["8129:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"8129:3:14"},"referencedDeclaration":3240,"src":"8129:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:14","nodeType":"StructDefinition","scope":3842,"src":"8101:45:14","visibility":"public"},{"body":{"id":3581,"nodeType":"Block","src":"8392:74:14","statements":[{"expression":{"arguments":[{"expression":{"id":3567,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"8414:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"8414:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"8450:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3573,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:14","typeDescriptions":{}}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:14","typeDescriptions":{}}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:14","typeDescriptions":{}}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3566,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"8409:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3565,"id":3580,"nodeType":"Return","src":"8402:57:14"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"8152:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:14","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"set","nameLocation":"8348:3:14","nodeType":"VariableDeclaration","scope":3582,"src":"8329:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3558,"nodeType":"UserDefinedTypeName","pathNode":{"id":3557,"name":"AddressSet","nameLocations":["8329:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"8329:10:14"},"referencedDeclaration":3555,"src":"8329:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"value","nameLocation":"8361:5:14","nodeType":"VariableDeclaration","scope":3582,"src":"8353:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:14"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3582,"src":"8386:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3563,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:14"},"scope":3842,"src":"8316:150:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3608,"nodeType":"Block","src":"8713:77:14","statements":[{"expression":{"arguments":[{"expression":{"id":3594,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8738:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"8738:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"8774:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3600,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:14","typeDescriptions":{}}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:14","typeDescriptions":{}}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:14","typeDescriptions":{}}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3593,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"8730:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3592,"id":3607,"nodeType":"Return","src":"8723:60:14"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"8472:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3609,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:14","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"set","nameLocation":"8669:3:14","nodeType":"VariableDeclaration","scope":3609,"src":"8650:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3585,"nodeType":"UserDefinedTypeName","pathNode":{"id":3584,"name":"AddressSet","nameLocations":["8650:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"8650:10:14"},"referencedDeclaration":3555,"src":"8650:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"value","nameLocation":"8682:5:14","nodeType":"VariableDeclaration","scope":3609,"src":"8674:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:14"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3609,"src":"8707:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3590,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:14"},"scope":3842,"src":"8634:156:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3635,"nodeType":"Block","src":"8957:79:14","statements":[{"expression":{"arguments":[{"expression":{"id":3621,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"8984:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"8984:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"9020:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3627,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:14","typeDescriptions":{}}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:14","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:14","typeDescriptions":{}}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3620,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8974:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3619,"id":3634,"nodeType":"Return","src":"8967:62:14"}]},"documentation":{"id":3610,"nodeType":"StructuredDocumentation","src":"8796:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:14","nodeType":"FunctionDefinition","parameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"set","nameLocation":"8908:3:14","nodeType":"VariableDeclaration","scope":3636,"src":"8889:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3612,"nodeType":"UserDefinedTypeName","pathNode":{"id":3611,"name":"AddressSet","nameLocations":["8889:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"8889:10:14"},"referencedDeclaration":3555,"src":"8889:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3615,"mutability":"mutable","name":"value","nameLocation":"8921:5:14","nodeType":"VariableDeclaration","scope":3636,"src":"8913:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3614,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:14"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3636,"src":"8951:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3617,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:14"},"scope":3842,"src":"8871:165:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3650,"nodeType":"Block","src":"9189:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3646,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"9214:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"9214:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3645,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"9206:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3644,"id":3649,"nodeType":"Return","src":"9199:26:14"}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"9042:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3651,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:14","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"set","nameLocation":"9152:3:14","nodeType":"VariableDeclaration","scope":3651,"src":"9133:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3639,"nodeType":"UserDefinedTypeName","pathNode":{"id":3638,"name":"AddressSet","nameLocations":["9133:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"9133:10:14"},"referencedDeclaration":3555,"src":"9133:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:14"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3651,"src":"9180:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:14"},"scope":3842,"src":"9117:115:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3677,"nodeType":"Block","src":"9657:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3669,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"9702:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"9702:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3671,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"9714:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3668,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"9698:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:14","typeDescriptions":{}}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3664,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:14","typeDescriptions":{}}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3662,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:14","typeDescriptions":{}}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3661,"id":3676,"nodeType":"Return","src":"9667:56:14"}]},"documentation":{"id":3652,"nodeType":"StructuredDocumentation","src":"9238:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3678,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:14","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"set","nameLocation":"9605:3:14","nodeType":"VariableDeclaration","scope":3678,"src":"9586:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3654,"nodeType":"UserDefinedTypeName","pathNode":{"id":3653,"name":"AddressSet","nameLocations":["9586:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"9586:10:14"},"referencedDeclaration":3555,"src":"9586:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"index","nameLocation":"9618:5:14","nodeType":"VariableDeclaration","scope":3678,"src":"9610:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:14"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3678,"src":"9648:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:14"},"scope":3842,"src":"9574:156:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3707,"nodeType":"Block","src":"10351:219:14","statements":[{"assignments":[3692],"declarations":[{"constant":false,"id":3692,"mutability":"mutable","name":"store","nameLocation":"10378:5:14","nodeType":"VariableDeclaration","scope":3707,"src":"10361:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3691,"nodeType":"ArrayTypeName","src":"10361:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3697,"initialValue":{"arguments":[{"expression":{"id":3694,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"10394:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"10394:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3693,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10386:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:14"},{"assignments":[3702],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"result","nameLocation":"10432:6:14","nodeType":"VariableDeclaration","scope":3707,"src":"10415:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3701,"nodeType":"ArrayTypeName","src":"10415:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3703,"nodeType":"VariableDeclarationStatement","src":"10415:23:14"},{"AST":{"nativeSrc":"10501:39:14","nodeType":"YulBlock","src":"10501:39:14","statements":[{"nativeSrc":"10515:15:14","nodeType":"YulAssignment","src":"10515:15:14","value":{"name":"store","nativeSrc":"10525:5:14","nodeType":"YulIdentifier","src":"10525:5:14"},"variableNames":[{"name":"result","nativeSrc":"10515:6:14","nodeType":"YulIdentifier","src":"10515:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3702,"isOffset":false,"isSlot":false,"src":"10515:6:14","valueSize":1},{"declaration":3692,"isOffset":false,"isSlot":false,"src":"10525:5:14","valueSize":1}],"id":3704,"nodeType":"InlineAssembly","src":"10492:48:14"},{"expression":{"id":3705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"10557:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3687,"id":3706,"nodeType":"Return","src":"10550:13:14"}]},"documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"9736:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3708,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:14","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"set","nameLocation":"10305:3:14","nodeType":"VariableDeclaration","scope":3708,"src":"10286:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3681,"nodeType":"UserDefinedTypeName","pathNode":{"id":3680,"name":"AddressSet","nameLocations":["10286:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"10286:10:14"},"referencedDeclaration":3555,"src":"10286:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:14"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3708,"src":"10333:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3684,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3685,"nodeType":"ArrayTypeName","src":"10333:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:14"},"scope":3842,"src":"10270:300:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3712,"members":[{"constant":false,"id":3711,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:14","nodeType":"VariableDeclaration","scope":3712,"src":"10617:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3710,"nodeType":"UserDefinedTypeName","pathNode":{"id":3709,"name":"Set","nameLocations":["10617:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"10617:3:14"},"referencedDeclaration":3240,"src":"10617:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:14","nodeType":"StructDefinition","scope":3842,"src":"10592:42:14","visibility":"public"},{"body":{"id":3732,"nodeType":"Block","src":"10877:56:14","statements":[{"expression":{"arguments":[{"expression":{"id":3724,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"10899:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"10899:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"10919:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:14","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3723,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"10894:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3722,"id":3731,"nodeType":"Return","src":"10887:39:14"}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"10640:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:14","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"set","nameLocation":"10833:3:14","nodeType":"VariableDeclaration","scope":3733,"src":"10817:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3715,"nodeType":"UserDefinedTypeName","pathNode":{"id":3714,"name":"UintSet","nameLocations":["10817:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"10817:7:14"},"referencedDeclaration":3712,"src":"10817:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3718,"mutability":"mutable","name":"value","nameLocation":"10846:5:14","nodeType":"VariableDeclaration","scope":3733,"src":"10838:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:14"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"10871:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3720,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:14"},"scope":3842,"src":"10804:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3753,"nodeType":"Block","src":"11177:59:14","statements":[{"expression":{"arguments":[{"expression":{"id":3745,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"11202:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"11202:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"11222:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:14","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3744,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"11194:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3743,"id":3752,"nodeType":"Return","src":"11187:42:14"}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"10939:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3754,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:14","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"set","nameLocation":"11133:3:14","nodeType":"VariableDeclaration","scope":3754,"src":"11117:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3736,"nodeType":"UserDefinedTypeName","pathNode":{"id":3735,"name":"UintSet","nameLocations":["11117:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"11117:7:14"},"referencedDeclaration":3712,"src":"11117:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"value","nameLocation":"11146:5:14","nodeType":"VariableDeclaration","scope":3754,"src":"11138:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:14"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3754,"src":"11171:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3741,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:14"},"scope":3842,"src":"11101:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3774,"nodeType":"Block","src":"11400:61:14","statements":[{"expression":{"arguments":[{"expression":{"id":3766,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"11427:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"11427:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"11447:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:14","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3765,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"11417:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3764,"id":3773,"nodeType":"Return","src":"11410:44:14"}]},"documentation":{"id":3755,"nodeType":"StructuredDocumentation","src":"11242:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:14","nodeType":"FunctionDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"set","nameLocation":"11351:3:14","nodeType":"VariableDeclaration","scope":3775,"src":"11335:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3757,"nodeType":"UserDefinedTypeName","pathNode":{"id":3756,"name":"UintSet","nameLocations":["11335:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"11335:7:14"},"referencedDeclaration":3712,"src":"11335:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"value","nameLocation":"11364:5:14","nodeType":"VariableDeclaration","scope":3775,"src":"11356:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:14"},"returnParameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3775,"src":"11394:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3762,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:14"},"scope":3842,"src":"11317:144:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3789,"nodeType":"Block","src":"11611:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3785,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"11636:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"11636:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3784,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"11628:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3783,"id":3788,"nodeType":"Return","src":"11621:26:14"}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"11467:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3790,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:14","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"set","nameLocation":"11574:3:14","nodeType":"VariableDeclaration","scope":3790,"src":"11558:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3778,"nodeType":"UserDefinedTypeName","pathNode":{"id":3777,"name":"UintSet","nameLocations":["11558:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"11558:7:14"},"referencedDeclaration":3712,"src":"11558:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:14"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3790,"src":"11602:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:14"},"scope":3842,"src":"11542:112:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"12076:55:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3804,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"12105:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"12105:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3806,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"12117:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3803,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"12101:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:14","typeDescriptions":{}}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3800,"id":3809,"nodeType":"Return","src":"12086:38:14"}]},"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"11660:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:14","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"set","nameLocation":"12024:3:14","nodeType":"VariableDeclaration","scope":3811,"src":"12008:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3793,"nodeType":"UserDefinedTypeName","pathNode":{"id":3792,"name":"UintSet","nameLocations":["12008:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"12008:7:14"},"referencedDeclaration":3712,"src":"12008:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3796,"mutability":"mutable","name":"index","nameLocation":"12037:5:14","nodeType":"VariableDeclaration","scope":3811,"src":"12029:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:14"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"12067:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:14"},"scope":3842,"src":"11996:135:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3840,"nodeType":"Block","src":"12749:219:14","statements":[{"assignments":[3825],"declarations":[{"constant":false,"id":3825,"mutability":"mutable","name":"store","nameLocation":"12776:5:14","nodeType":"VariableDeclaration","scope":3840,"src":"12759:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3824,"nodeType":"ArrayTypeName","src":"12759:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3830,"initialValue":{"arguments":[{"expression":{"id":3827,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"12792:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"12792:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3240_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3826,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"12784:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3240_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:14"},{"assignments":[3835],"declarations":[{"constant":false,"id":3835,"mutability":"mutable","name":"result","nameLocation":"12830:6:14","nodeType":"VariableDeclaration","scope":3840,"src":"12813:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ArrayTypeName","src":"12813:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3836,"nodeType":"VariableDeclarationStatement","src":"12813:23:14"},{"AST":{"nativeSrc":"12899:39:14","nodeType":"YulBlock","src":"12899:39:14","statements":[{"nativeSrc":"12913:15:14","nodeType":"YulAssignment","src":"12913:15:14","value":{"name":"store","nativeSrc":"12923:5:14","nodeType":"YulIdentifier","src":"12923:5:14"},"variableNames":[{"name":"result","nativeSrc":"12913:6:14","nodeType":"YulIdentifier","src":"12913:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3835,"isOffset":false,"isSlot":false,"src":"12913:6:14","valueSize":1},{"declaration":3825,"isOffset":false,"isSlot":false,"src":"12923:5:14","valueSize":1}],"id":3837,"nodeType":"InlineAssembly","src":"12890:48:14"},{"expression":{"id":3838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"12955:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3820,"id":3839,"nodeType":"Return","src":"12948:13:14"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"12137:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:14","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"set","nameLocation":"12703:3:14","nodeType":"VariableDeclaration","scope":3841,"src":"12687:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3814,"nodeType":"UserDefinedTypeName","pathNode":{"id":3813,"name":"UintSet","nameLocations":["12687:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"12687:7:14"},"referencedDeclaration":3712,"src":"12687:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:14"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"12731:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3818,"nodeType":"ArrayTypeName","src":"12731:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:14"},"scope":3842,"src":"12671:297:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3843,"src":"1330:11640:14","usedErrors":[],"usedEvents":[]}],"src":"205:12766:14"},"id":14},"contracts/VerisenseAVSManager.sol":{"ast":{"absolutePath":"contracts/VerisenseAVSManager.sol","exportedSymbols":{"ECDSA":[2114],"EnumerableMap":[3229],"EnumerableSet":[3842],"IAVSDirectory":[5572],"IDelegationManager":[6097],"IERC20":[1077],"IEigenPod":[6430],"IEigenPodManager":[6613],"IRewardsCoordinator":[7242],"ISignatureUtils":[7258],"IStrategy":[7612],"IVerisenseAVSManager":[5482],"OwnableUpgradeable":[194],"SafeERC20":[1403],"UUPSUpgradeable":[630],"VerisenseAVSManager":[5135],"VerisenseAVSManagerStorage":[5174]},"id":5136,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3844,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"36:31:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":3846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":631,"src":"69:102:15","symbolAliases":[{"foreign":{"id":3845,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"78:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":3848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":3843,"src":"173:88:15","symbolAliases":[{"foreign":{"id":3847,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"182:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","id":3850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":3230,"src":"262:88:15","symbolAliases":[{"foreign":{"id":3849,"name":"EnumerableMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"271:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","file":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","id":3852,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":7259,"src":"351:100:15","symbolAliases":[{"foreign":{"id":3851,"name":"ISignatureUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"360:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","id":3854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":7613,"src":"452:88:15","symbolAliases":[{"foreign":{"id":3853,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"461:9:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol","id":3856,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":5573,"src":"541:96:15","symbolAliases":[{"foreign":{"id":3855,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"550:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","id":3858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":6098,"src":"638:106:15","symbolAliases":[{"foreign":{"id":3857,"name":"IDelegationManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"647:18:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","id":3860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":6614,"src":"745:102:15","symbolAliases":[{"foreign":{"id":3859,"name":"IEigenPodManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"754:16:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol","id":3862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":6431,"src":"848:88:15","symbolAliases":[{"foreign":{"id":3861,"name":"IEigenPod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"857:9:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IVerisenseAVSManager.sol","file":"./interfaces/IVerisenseAVSManager.sol","id":3864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":5483,"src":"937:75:15","symbolAliases":[{"foreign":{"id":3863,"name":"IVerisenseAVSManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"945:20:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VerisenseAVSManagerStorage.sol","file":"./VerisenseAVSManagerStorage.sol","id":3866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":5175,"src":"1013:76:15","symbolAliases":[{"foreign":{"id":3865,"name":"VerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"1021:26:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol","id":3868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":7243,"src":"1090:108:15","symbolAliases":[{"foreign":{"id":3867,"name":"IRewardsCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"1099:19:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":1078,"src":"1199:72:15","symbolAliases":[{"foreign":{"id":3869,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"1208:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":1404,"src":"1272:84:15","symbolAliases":[{"foreign":{"id":3871,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"1281:9:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3874,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":195,"src":"1357:101:15","symbolAliases":[{"foreign":{"id":3873,"name":"OwnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1365:18:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":2115,"src":"1459:62:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3876,"name":"VerisenseAVSManagerStorage","nameLocations":["1555:26:15"],"nodeType":"IdentifierPath","referencedDeclaration":5174,"src":"1555:26:15"},"id":3877,"nodeType":"InheritanceSpecifier","src":"1555:26:15"},{"baseName":{"id":3878,"name":"UUPSUpgradeable","nameLocations":["1583:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1583:15:15"},"id":3879,"nodeType":"InheritanceSpecifier","src":"1583:15:15"},{"baseName":{"id":3880,"name":"OwnableUpgradeable","nameLocations":["1600:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1600:18:15"},"id":3881,"nodeType":"InheritanceSpecifier","src":"1600:18:15"}],"canonicalName":"VerisenseAVSManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5135,"linearizedBaseContracts":[5135,194,676,630,686,448,5174,5482],"name":"VerisenseAVSManager","nameLocation":"1532:19:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3885,"libraryName":{"id":3882,"name":"EnumerableSet","nameLocations":["1631:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"1631:13:15"},"nodeType":"UsingForDirective","src":"1625:49:15","typeName":{"id":3884,"nodeType":"UserDefinedTypeName","pathNode":{"id":3883,"name":"EnumerableSet.AddressSet","nameLocations":["1649:13:15","1663:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"1649:24:15"},"referencedDeclaration":3555,"src":"1649:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"global":false,"id":3889,"libraryName":{"id":3886,"name":"EnumerableSet","nameLocations":["1685:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"1685:13:15"},"nodeType":"UsingForDirective","src":"1679:46:15","typeName":{"id":3888,"nodeType":"UserDefinedTypeName","pathNode":{"id":3887,"name":"EnumerableSet.UintSet","nameLocations":["1703:13:15","1717:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"1703:21:15"},"referencedDeclaration":3712,"src":"1703:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3712_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"global":false,"id":3893,"libraryName":{"id":3890,"name":"SafeERC20","nameLocations":["1736:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1403,"src":"1736:9:15"},"nodeType":"UsingForDirective","src":"1730:27:15","typeName":{"id":3892,"nodeType":"UserDefinedTypeName","pathNode":{"id":3891,"name":"IERC20","nameLocations":["1750:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"1750:6:15"},"referencedDeclaration":1077,"src":"1750:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}}},{"baseFunctions":[5378],"constant":false,"functionSelector":"0a732358","id":3896,"mutability":"mutable","name":"EIGEN_POD_MANAGER","nameLocation":"1786:17:15","nodeType":"VariableDeclaration","scope":5135,"src":"1762:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"},"typeName":{"id":3895,"nodeType":"UserDefinedTypeName","pathNode":{"id":3894,"name":"IEigenPodManager","nameLocations":["1762:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":6613,"src":"1762:16:15"},"referencedDeclaration":6613,"src":"1762:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"visibility":"public"},{"baseFunctions":[5385],"constant":false,"functionSelector":"f2251b0f","id":3899,"mutability":"mutable","name":"EIGEN_DELEGATION_MANAGER","nameLocation":"1836:24:15","nodeType":"VariableDeclaration","scope":5135,"src":"1810:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"},"typeName":{"id":3898,"nodeType":"UserDefinedTypeName","pathNode":{"id":3897,"name":"IDelegationManager","nameLocations":["1810:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":6097,"src":"1810:18:15"},"referencedDeclaration":6097,"src":"1810:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"visibility":"public"},{"constant":false,"functionSelector":"141fbdf2","id":3902,"mutability":"mutable","name":"EIGEN_REWARDS_COORDINATOR","nameLocation":"1894:25:15","nodeType":"VariableDeclaration","scope":5135,"src":"1867:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"IRewardsCoordinator","nameLocations":["1867:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":7242,"src":"1867:19:15"},"referencedDeclaration":7242,"src":"1867:19:15","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}},"visibility":"public"},{"baseFunctions":[5392],"constant":false,"functionSelector":"ad656c56","id":3905,"mutability":"mutable","name":"AVS_DIRECTORY","nameLocation":"1947:13:15","nodeType":"VariableDeclaration","scope":5135,"src":"1926:34:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"},"typeName":{"id":3904,"nodeType":"UserDefinedTypeName","pathNode":{"id":3903,"name":"IAVSDirectory","nameLocations":["1926:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"1926:13:15"},"referencedDeclaration":5572,"src":"1926:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"visibility":"public"},{"body":{"id":3953,"nodeType":"Block","src":"2112:378:15","statements":[{"assignments":[3914,3916],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"success","nameLocation":"2128:7:15","nodeType":"VariableDeclaration","scope":3953,"src":"2123:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3913,"name":"bool","nodeType":"ElementaryTypeName","src":"2123:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"data","nameLocation":"2150:4:15","nodeType":"VariableDeclaration","scope":3953,"src":"2137:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2137:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3937,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"6176734f70657261746f7253746174757328616464726573732c6164647265737329","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2245:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_49075da311109afd777a6be33907d4f69f307d807d8e1d18fee1d76a65f9acc8","typeString":"literal_string \"avsOperatorStatus(address,address)\""},"value":"avsOperatorStatus(address,address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_49075da311109afd777a6be33907d4f69f307d807d8e1d18fee1d76a65f9acc8","typeString":"literal_string \"avsOperatorStatus(address,address)\""}],"id":3926,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2235:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2235:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2228:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3924,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2228:6:15","typeDescriptions":{}}},"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"id":3932,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2293:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_VerisenseAVSManager_$5135","typeString":"contract VerisenseAVSManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VerisenseAVSManager_$5135","typeString":"contract VerisenseAVSManager"}],"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3930,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:15","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3934,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"2300:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3922,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2205:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2209:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2205:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:104:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3919,"name":"AVS_DIRECTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"2166:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}],"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2158:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3917,"name":"address","nodeType":"ElementaryTypeName","src":"2158:7:15","typeDescriptions":{}}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2158:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2181:10:15","memberName":"staticcall","nodeType":"MemberAccess","src":"2158:33:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2158:161:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2122:197:15"},{"condition":{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2333:8:15","subExpression":{"id":3938,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"2334:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"2329:75:15","trueBody":{"id":3943,"nodeType":"Block","src":"2343:61:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3940,"name":"AVSOperatorStatusCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"2364:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2364:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3942,"nodeType":"RevertStatement","src":"2357:36:15"}]}},{"expression":{"arguments":[{"id":3947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"2431:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"expression":{"id":3948,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"2438:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAVSDirectory_$5572_$","typeString":"type(contract IAVSDirectory)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:29:15","memberName":"OperatorAVSRegistrationStatus","nodeType":"MemberAccess","referencedDeclaration":5491,"src":"2438:43:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"type(enum IAVSDirectory.OperatorAVSRegistrationStatus)"}}],"id":3950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2437:45:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"type(enum IAVSDirectory.OperatorAVSRegistrationStatus)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"type(enum IAVSDirectory.OperatorAVSRegistrationStatus)"}],"expression":{"id":3945,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2420:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2424:6:15","memberName":"decode","nodeType":"MemberAccess","src":"2420:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"functionReturnParameters":3912,"id":3952,"nodeType":"Return","src":"2413:70:15"}]},"id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"_getAvsOperatorStatus","nameLocation":"1976:21:15","nodeType":"FunctionDefinition","parameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"operator","nameLocation":"2006:8:15","nodeType":"VariableDeclaration","scope":3954,"src":"1998:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3906,"name":"address","nodeType":"ElementaryTypeName","src":"1998:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:18:15"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3954,"src":"2063:43:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"},"typeName":{"id":3910,"nodeType":"UserDefinedTypeName","pathNode":{"id":3909,"name":"IAVSDirectory.OperatorAVSRegistrationStatus","nameLocations":["2063:13:15","2077:29:15"],"nodeType":"IdentifierPath","referencedDeclaration":5491,"src":"2063:43:15"},"referencedDeclaration":5491,"src":"2063:43:15","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"visibility":"internal"}],"src":"2062:45:15"},"scope":5135,"src":"1967:523:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3971,"nodeType":"Block","src":"2542:179:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3959,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"2578:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3958,"name":"_getAvsOperatorStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2556:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"function (address) view returns (enum IAVSDirectory.OperatorAVSRegistrationStatus)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3961,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"2591:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAVSDirectory_$5572_$","typeString":"type(contract IAVSDirectory)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2605:29:15","memberName":"OperatorAVSRegistrationStatus","nodeType":"MemberAccess","referencedDeclaration":5491,"src":"2591:43:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"type(enum IAVSDirectory.OperatorAVSRegistrationStatus)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2635:12:15","memberName":"UNREGISTERED","nodeType":"MemberAccess","referencedDeclaration":5489,"src":"2591:56:15","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"src":"2556:91:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"nodeType":"IfStatement","src":"2552:152:15","trueBody":{"id":3968,"nodeType":"Block","src":"2649:55:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3965,"name":"OperatorNotRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"2670:21:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2670:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3967,"nodeType":"RevertStatement","src":"2663:30:15"}]}},{"id":3970,"nodeType":"PlaceholderStatement","src":"2713:1:15"}]},"id":3972,"name":"registeredOperator","nameLocation":"2505:18:15","nodeType":"ModifierDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"operator","nameLocation":"2532:8:15","nodeType":"VariableDeclaration","scope":3972,"src":"2524:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3955,"name":"address","nodeType":"ElementaryTypeName","src":"2524:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2523:18:15"},"src":"2496:225:15","virtual":false,"visibility":"internal"},{"body":{"id":4067,"nodeType":"Block","src":"2977:908:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"eigenPodManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"2991:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3025:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3017:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"3017:7:15","typeDescriptions":{}}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2991:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3997,"nodeType":"IfStatement","src":"2987:105:15","trueBody":{"id":3996,"nodeType":"Block","src":"3029:63:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3993,"name":"InvalidEigenPodManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"3050:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3995,"nodeType":"RevertStatement","src":"3043:38:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"eigenDelegationManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"3105:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3146:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3138:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3999,"name":"address","nodeType":"ElementaryTypeName","src":"3138:7:15","typeDescriptions":{}}},"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3105:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"IfStatement","src":"3101:119:15","trueBody":{"id":4007,"nodeType":"Block","src":"3150:70:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4004,"name":"InvalidEigenDelegationManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"3171:36:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3171:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4006,"nodeType":"RevertStatement","src":"3164:45:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"avsDirectoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3233:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3264:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3256:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4010,"name":"address","nodeType":"ElementaryTypeName","src":"3256:7:15","typeDescriptions":{}}},"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3233:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4019,"nodeType":"IfStatement","src":"3229:99:15","trueBody":{"id":4018,"nodeType":"Block","src":"3268:60:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4015,"name":"InvalidAVSDirectoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"3289:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3289:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"RevertStatement","src":"3282:35:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4020,"name":"rewardsCoordinatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"3341:25:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3370:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"3370:7:15","typeDescriptions":{}}},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3370:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3341:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"3337:111:15","trueBody":{"id":4029,"nodeType":"Block","src":"3382:66:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4026,"name":"InvalidRewardsCoordinatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"3403:32:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3403:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4028,"nodeType":"RevertStatement","src":"3396:41:15"}]}},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"EIGEN_POD_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"3457:17:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4033,"name":"eigenPodManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"3494:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4032,"name":"IEigenPodManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"3477:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEigenPodManager_$6613_$","typeString":"type(contract IEigenPodManager)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3477:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"src":"3457:60:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"id":4036,"nodeType":"ExpressionStatement","src":"3457:60:15"},{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4037,"name":"EIGEN_DELEGATION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3527:24:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4039,"name":"eigenDelegationManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"3573:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4038,"name":"IDelegationManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"3554:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDelegationManager_$6097_$","typeString":"type(contract IDelegationManager)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"src":"3527:76:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"id":4042,"nodeType":"ExpressionStatement","src":"3527:76:15"},{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"AVS_DIRECTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3613:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4045,"name":"avsDirectoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3643:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4044,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"3629:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAVSDirectory_$5572_$","typeString":"type(contract IAVSDirectory)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3629:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"src":"3613:50:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"id":4048,"nodeType":"ExpressionStatement","src":"3613:50:15"},{"expression":{"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"EIGEN_REWARDS_COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"3673:25:15","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4051,"name":"rewardsCoordinatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"3721:25:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4050,"name":"IRewardsCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"3701:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardsCoordinator_$7242_$","typeString":"type(contract IRewardsCoordinator)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}},"src":"3673:74:15","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}},"id":4054,"nodeType":"ExpressionStatement","src":"3673:74:15"},{"expression":{"arguments":[{"id":4056,"name":"initialDeregistrationDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"3781:26:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4055,"name":"_setDeregistrationDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"3757:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4058,"nodeType":"ExpressionStatement","src":"3757:51:15"},{"expression":{"arguments":[{"expression":{"id":4060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3833:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3837:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3833:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4059,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3818:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4063,"nodeType":"ExpressionStatement","src":"3818:26:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4064,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3854:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4066,"nodeType":"ExpressionStatement","src":"3854:24:15"}]},"functionSelector":"00feb1d8","id":4068,"implemented":true,"kind":"function","modifiers":[{"id":3985,"kind":"modifierInvocation","modifierName":{"id":3984,"name":"initializer","nameLocations":["2965:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2965:11:15"},"nodeType":"ModifierInvocation","src":"2965:11:15"}],"name":"initialize","nameLocation":"2736:10:15","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"eigenPodManagerAddress","nameLocation":"2764:22:15","nodeType":"VariableDeclaration","scope":4068,"src":"2756:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3973,"name":"address","nodeType":"ElementaryTypeName","src":"2756:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3976,"mutability":"mutable","name":"eigenDelegationManagerAddress","nameLocation":"2804:29:15","nodeType":"VariableDeclaration","scope":4068,"src":"2796:37:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3975,"name":"address","nodeType":"ElementaryTypeName","src":"2796:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"avsDirectoryAddress","nameLocation":"2851:19:15","nodeType":"VariableDeclaration","scope":4068,"src":"2843:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"2843:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"rewardsCoordinatorAddress","nameLocation":"2888:25:15","nodeType":"VariableDeclaration","scope":4068,"src":"2880:33:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3979,"name":"address","nodeType":"ElementaryTypeName","src":"2880:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"initialDeregistrationDelay","nameLocation":"2930:26:15","nodeType":"VariableDeclaration","scope":4068,"src":"2923:33:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3981,"name":"uint64","nodeType":"ElementaryTypeName","src":"2923:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2746:211:15"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[],"src":"2977:0:15"},"scope":5135,"src":"2727:1158:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5401],"body":{"id":4107,"nodeType":"Block","src":"4035:304:15","statements":[{"expression":{"arguments":[{"expression":{"id":4079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4081:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4085:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4081:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4081,"name":"operatorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"4093:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_calldata_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_calldata_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry calldata"}],"expression":{"id":4076,"name":"AVS_DIRECTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"4045:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:21:15","memberName":"registerOperatorToAVS","nodeType":"MemberAccess","referencedDeclaration":5517,"src":"4045:35:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_struct$_SignatureWithSaltAndExpiry_$7257_memory_ptr_$returns$__$","typeString":"function (address,struct ISignatureUtils.SignatureWithSaltAndExpiry memory) external"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4045:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4083,"nodeType":"ExpressionStatement","src":"4045:66:15"},{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4084,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4121:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4154:9:15","memberName":"operators","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"4121:42:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData storage ref)"}},"id":4089,"indexExpression":{"expression":{"id":4087,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4164:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4168:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4164:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4121:54:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage","typeString":"struct IVerisenseAVSManager.OperatorData storage ref"}},"id":4090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4176:16:15","memberName":"substrate_pubkey","nodeType":"MemberAccess","referencedDeclaration":5220,"src":"4121:71:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4091,"name":"substrate_pubkey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"4195:16:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4121:90:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4093,"nodeType":"ExpressionStatement","src":"4121:90:15"},{"expression":{"arguments":[{"expression":{"id":4098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4276:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4280:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4276:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4094,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4221:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4254:17:15","memberName":"operatorAddresses","nodeType":"MemberAccess","referencedDeclaration":5152,"src":"4221:50:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4272:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3582,"src":"4221:54:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3555_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4101,"nodeType":"ExpressionStatement","src":"4221:66:15"},{"eventCall":{"arguments":[{"expression":{"id":4103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4321:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4325:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4321:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4102,"name":"OperatorRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"4302:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4106,"nodeType":"EmitStatement","src":"4297:35:15"}]},"functionSelector":"ca1e1d67","id":4108,"implemented":true,"kind":"function","modifiers":[],"name":"registerOperator","nameLocation":"3900:16:15","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"operatorSignature","nameLocation":"3969:17:15","nodeType":"VariableDeclaration","scope":4108,"src":"3917:69:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_calldata_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry"},"typeName":{"id":4070,"nodeType":"UserDefinedTypeName","pathNode":{"id":4069,"name":"ISignatureUtils.SignatureWithSaltAndExpiry","nameLocations":["3917:15:15","3933:26:15"],"nodeType":"IdentifierPath","referencedDeclaration":7257,"src":"3917:42:15"},"referencedDeclaration":7257,"src":"3917:42:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_storage_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry"}},"visibility":"internal"},{"constant":false,"id":4073,"mutability":"mutable","name":"substrate_pubkey","nameLocation":"3996:16:15","nodeType":"VariableDeclaration","scope":4108,"src":"3988:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3988:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3916:97:15"},"returnParameters":{"id":4075,"nodeType":"ParameterList","parameters":[],"src":"4035:0:15"},"scope":5135,"src":"3891:448:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5405],"body":{"id":4154,"nodeType":"Block","src":"4420:391:15","statements":[{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"$","nameLocation":"4458:1:15","nodeType":"VariableDeclaration","scope":4154,"src":"4430:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4116,"nodeType":"UserDefinedTypeName","pathNode":{"id":4115,"name":"VerisenseAVSStorage","nameLocations":["4430:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"4430:19:15"},"referencedDeclaration":5162,"src":"4430:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4120,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4118,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4462:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4462:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4430:64:15"},{"assignments":[4123],"declarations":[{"constant":false,"id":4123,"mutability":"mutable","name":"operator","nameLocation":"4526:8:15","nodeType":"VariableDeclaration","scope":4154,"src":"4505:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"},"typeName":{"id":4122,"nodeType":"UserDefinedTypeName","pathNode":{"id":4121,"name":"OperatorData","nameLocations":["4505:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":5223,"src":"4505:12:15"},"referencedDeclaration":5223,"src":"4505:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"}},"visibility":"internal"}],"id":4129,"initialValue":{"baseExpression":{"expression":{"id":4124,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"4537:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4539:9:15","memberName":"operators","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"4537:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData storage ref)"}},"id":4128,"indexExpression":{"expression":{"id":4126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4549:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4553:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4549:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4537:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage","typeString":"struct IVerisenseAVSManager.OperatorData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4505:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4130,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"4575:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData storage pointer"}},"id":4131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4584:28:15","memberName":"startDeregisterOperatorBlock","nodeType":"MemberAccess","referencedDeclaration":5217,"src":"4575:37:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4616:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4575:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4138,"nodeType":"IfStatement","src":"4571:110:15","trueBody":{"id":4137,"nodeType":"Block","src":"4619:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4134,"name":"DeregistrationAlreadyStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"4640:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"RevertStatement","src":"4633:37:15"}]}},{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4139,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"4691:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData storage pointer"}},"id":4141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4700:28:15","memberName":"startDeregisterOperatorBlock","nodeType":"MemberAccess","referencedDeclaration":5217,"src":"4691:37:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4144,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4738:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4744:6:15","memberName":"number","nodeType":"MemberAccess","src":"4738:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4731:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4142,"name":"uint64","nodeType":"ElementaryTypeName","src":"4731:6:15","typeDescriptions":{}}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4691:60:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4148,"nodeType":"ExpressionStatement","src":"4691:60:15"},{"eventCall":{"arguments":[{"expression":{"id":4150,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4793:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4797:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4793:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4149,"name":"OperatorDeregisterStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"4767:25:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4767:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4153,"nodeType":"EmitStatement","src":"4762:42:15"}]},"functionSelector":"389517e4","id":4155,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":4111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4408:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4412:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4408:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4113,"kind":"modifierInvocation","modifierName":{"id":4110,"name":"registeredOperator","nameLocations":["4389:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"4389:18:15"},"nodeType":"ModifierInvocation","src":"4389:30:15"}],"name":"startDeregisterOperator","nameLocation":"4354:23:15","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[],"src":"4377:2:15"},"returnParameters":{"id":4114,"nodeType":"ParameterList","parameters":[],"src":"4420:0:15"},"scope":5135,"src":"4345:466:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5409],"body":{"id":4227,"nodeType":"Block","src":"4893:617:15","statements":[{"assignments":[4164],"declarations":[{"constant":false,"id":4164,"mutability":"mutable","name":"$","nameLocation":"4931:1:15","nodeType":"VariableDeclaration","scope":4227,"src":"4903:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4163,"nodeType":"UserDefinedTypeName","pathNode":{"id":4162,"name":"VerisenseAVSStorage","nameLocations":["4903:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"4903:19:15"},"referencedDeclaration":5162,"src":"4903:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4167,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4165,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"4935:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4903:64:15"},{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"operator","nameLocation":"4999:8:15","nodeType":"VariableDeclaration","scope":4227,"src":"4978:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"},"typeName":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"OperatorData","nameLocations":["4978:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":5223,"src":"4978:12:15"},"referencedDeclaration":5223,"src":"4978:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"}},"visibility":"internal"}],"id":4176,"initialValue":{"baseExpression":{"expression":{"id":4171,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5010:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5012:9:15","memberName":"operators","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"5010:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData storage ref)"}},"id":4175,"indexExpression":{"expression":{"id":4173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5022:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5022:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5010:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage","typeString":"struct IVerisenseAVSManager.OperatorData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4978:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4177,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5048:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData storage pointer"}},"id":4178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5057:28:15","memberName":"startDeregisterOperatorBlock","nodeType":"MemberAccess","referencedDeclaration":5217,"src":"5048:37:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5048:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4185,"nodeType":"IfStatement","src":"5044:106:15","trueBody":{"id":4184,"nodeType":"Block","src":"5092:58:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4181,"name":"DeregistrationNotStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"5113:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5113:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4183,"nodeType":"RevertStatement","src":"5106:33:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4186,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5164:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5170:6:15","memberName":"number","nodeType":"MemberAccess","src":"5164:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4188,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5179:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData storage pointer"}},"id":4189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5188:28:15","memberName":"startDeregisterOperatorBlock","nodeType":"MemberAccess","referencedDeclaration":5217,"src":"5179:37:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4190,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5219:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5221:19:15","memberName":"deregistrationDelay","nodeType":"MemberAccess","referencedDeclaration":5154,"src":"5219:21:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5179:61:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5164:76:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4198,"nodeType":"IfStatement","src":"5160:145:15","trueBody":{"id":4197,"nodeType":"Block","src":"5242:63:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4194,"name":"DeregistrationDelayNotElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"5263:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5263:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4196,"nodeType":"RevertStatement","src":"5256:38:15"}]}},{"expression":{"arguments":[{"expression":{"id":4202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5355:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5359:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5355:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4199,"name":"AVS_DIRECTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"5315:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5329:25:15","memberName":"deregisterOperatorFromAVS","nodeType":"MemberAccess","referencedDeclaration":5523,"src":"5315:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4205,"nodeType":"ExpressionStatement","src":"5315:51:15"},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5377:30:15","subExpression":{"baseExpression":{"expression":{"id":4206,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5384:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5386:9:15","memberName":"operators","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"5384:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData storage ref)"}},"id":4210,"indexExpression":{"expression":{"id":4208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5396:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5400:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5396:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5384:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage","typeString":"struct IVerisenseAVSManager.OperatorData storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"5377:30:15"},{"expression":{"arguments":[{"expression":{"id":4218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5444:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5448:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5444:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4213,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5417:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5419:17:15","memberName":"operatorAddresses","nodeType":"MemberAccess","referencedDeclaration":5152,"src":"5417:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:15","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"5417:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3555_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5417:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4221,"nodeType":"ExpressionStatement","src":"5417:38:15"},{"eventCall":{"arguments":[{"expression":{"id":4223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5492:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5496:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5492:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4222,"name":"OperatorDeregistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"5471:20:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5471:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4226,"nodeType":"EmitStatement","src":"5466:37:15"}]},"functionSelector":"e3672163","id":4228,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":4158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4881:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4885:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4881:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4160,"kind":"modifierInvocation","modifierName":{"id":4157,"name":"registeredOperator","nameLocations":["4862:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"4862:18:15"},"nodeType":"ModifierInvocation","src":"4862:30:15"}],"name":"finishDeregisterOperator","nameLocation":"4826:24:15","nodeType":"FunctionDefinition","parameters":{"id":4156,"nodeType":"ParameterList","parameters":[],"src":"4850:2:15"},"returnParameters":{"id":4161,"nodeType":"ParameterList","parameters":[],"src":"4893:0:15"},"scope":5135,"src":"4817:693:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5421],"body":{"id":4239,"nodeType":"Block","src":"5584:50:15","statements":[{"expression":{"arguments":[{"id":4236,"name":"newDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"5618:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4235,"name":"_setDeregistrationDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"5594:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5594:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4238,"nodeType":"ExpressionStatement","src":"5594:33:15"}]},"functionSelector":"84a3f19b","id":4240,"implemented":true,"kind":"function","modifiers":[{"id":4233,"kind":"modifierInvocation","modifierName":{"id":4232,"name":"onlyOwner","nameLocations":["5574:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5574:9:15"},"nodeType":"ModifierInvocation","src":"5574:9:15"}],"name":"setDeregistrationDelay","nameLocation":"5525:22:15","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"newDelay","nameLocation":"5555:8:15","nodeType":"VariableDeclaration","scope":4240,"src":"5548:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4229,"name":"uint64","nodeType":"ElementaryTypeName","src":"5548:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5547:17:15"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[],"src":"5584:0:15"},"scope":5135,"src":"5516:118:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5415],"body":{"id":4253,"nodeType":"Block","src":"5717:65:15","statements":[{"expression":{"arguments":[{"id":4250,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"5762:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4247,"name":"AVS_DIRECTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"5727:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5741:20:15","memberName":"updateAVSMetadataURI","nodeType":"MemberAccess","referencedDeclaration":5529,"src":"5727:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) external"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5727:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4252,"nodeType":"ExpressionStatement","src":"5727:48:15"}]},"functionSelector":"a98fb355","id":4254,"implemented":true,"kind":"function","modifiers":[{"id":4245,"kind":"modifierInvocation","modifierName":{"id":4244,"name":"onlyOwner","nameLocations":["5707:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5707:9:15"},"nodeType":"ModifierInvocation","src":"5707:9:15"}],"name":"updateAVSMetadataURI","nameLocation":"5649:20:15","nodeType":"FunctionDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"_metadataURI","nameLocation":"5684:12:15","nodeType":"VariableDeclaration","scope":4254,"src":"5670:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4241,"name":"string","nodeType":"ElementaryTypeName","src":"5670:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5669:28:15"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[],"src":"5717:0:15"},"scope":5135,"src":"5640:142:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5429],"body":{"id":4304,"nodeType":"Block","src":"5878:478:15","statements":[{"assignments":[4265],"declarations":[{"constant":false,"id":4265,"mutability":"mutable","name":"$","nameLocation":"5916:1:15","nodeType":"VariableDeclaration","scope":4304,"src":"5888:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"VerisenseAVSStorage","nameLocations":["5888:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"5888:19:15"},"referencedDeclaration":5162,"src":"5888:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4268,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4266,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"5920:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5920:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5888:64:15"},{"assignments":[4270],"declarations":[{"constant":false,"id":4270,"mutability":"mutable","name":"success","nameLocation":"5967:7:15","nodeType":"VariableDeclaration","scope":4304,"src":"5962:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4269,"name":"bool","nodeType":"ElementaryTypeName","src":"5962:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4271,"nodeType":"VariableDeclarationStatement","src":"5962:12:15"},{"condition":{"id":4272,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"5988:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4290,"nodeType":"Block","src":"6084:84:15","statements":[{"expression":{"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"6098:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4286,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"6148:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4283,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"6108:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6110:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"6108:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6141:6:15","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"6108:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3555_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6108:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6098:59:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4289,"nodeType":"ExpressionStatement","src":"6098:59:15"}]},"id":4291,"nodeType":"IfStatement","src":"5984:184:15","trueBody":{"id":4281,"nodeType":"Block","src":"5997:81:15","statements":[{"expression":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"6011:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4277,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"6058:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":4274,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"6021:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6023:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"6021:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6054:3:15","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3582,"src":"6021:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3555_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4280,"nodeType":"ExpressionStatement","src":"6011:56:15"}]}},{"condition":{"id":4292,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"6181:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4302,"nodeType":"Block","src":"6278:72:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4299,"name":"RestakingStrategyAllowlistUpdateFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"6299:38:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6299:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4301,"nodeType":"RevertStatement","src":"6292:47:15"}]},"id":4303,"nodeType":"IfStatement","src":"6177:173:15","trueBody":{"id":4298,"nodeType":"Block","src":"6190:82:15","statements":[{"eventCall":{"arguments":[{"id":4294,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"6243:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4295,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"6253:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4293,"name":"RestakingStrategyAllowlistUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"6209:33:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6209:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4297,"nodeType":"EmitStatement","src":"6204:57:15"}]}}]},"functionSelector":"43adc491","id":4305,"implemented":true,"kind":"function","modifiers":[{"id":4261,"kind":"modifierInvocation","modifierName":{"id":4260,"name":"onlyOwner","nameLocations":["5868:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5868:9:15"},"nodeType":"ModifierInvocation","src":"5868:9:15"}],"name":"setAllowlistRestakingStrategy","nameLocation":"5797:29:15","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"strategy","nameLocation":"5835:8:15","nodeType":"VariableDeclaration","scope":4305,"src":"5827:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4255,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"allowed","nameLocation":"5850:7:15","nodeType":"VariableDeclaration","scope":4305,"src":"5845:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4257,"name":"bool","nodeType":"ElementaryTypeName","src":"5845:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5826:32:15"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[],"src":"5878:0:15"},"scope":5135,"src":"5788:568:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4352,"nodeType":"Block","src":"6423:396:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"eraIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"6441:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6452:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6441:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72657761726420657261206d757374206d6f7265207468616e2030","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6455:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_52a52dcebf3346bb5acda945be66f6b2369b948b8572b0e3c72d7923821c6422","typeString":"literal_string \"reward era must more than 0\""},"value":"reward era must more than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52a52dcebf3346bb5acda945be66f6b2369b948b8572b0e3c72d7923821c6422","typeString":"literal_string \"reward era must more than 0\""}],"id":4310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6433:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4316,"nodeType":"ExpressionStatement","src":"6433:52:15"},{"assignments":[4319],"declarations":[{"constant":false,"id":4319,"mutability":"mutable","name":"$","nameLocation":"6523:1:15","nodeType":"VariableDeclaration","scope":4352,"src":"6495:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4318,"nodeType":"UserDefinedTypeName","pathNode":{"id":4317,"name":"VerisenseAVSStorage","nameLocations":["6495:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"6495:19:15"},"referencedDeclaration":5162,"src":"6495:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4322,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4320,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"6527:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6527:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6495:64:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4323,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"6573:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6575:17:15","memberName":"latestRewardedEra","nodeType":"MemberAccess","referencedDeclaration":5158,"src":"6573:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6596:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4350,"nodeType":"Block","src":"6660:153:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"eraIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"6682:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4336,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"6694:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6696:17:15","memberName":"latestRewardedEra","nodeType":"MemberAccess","referencedDeclaration":5158,"src":"6694:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6716:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6694:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6682:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6c617465737420726577617264656420657261206d75737420626520696e206120726f77","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:38:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a9863761e2caa5d7b97ec76dc85cecce3430bb6bc2e9ac2e93be3f94382972e","typeString":"literal_string \"latest rewarded era must be in a row\""},"value":"latest rewarded era must be in a row"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a9863761e2caa5d7b97ec76dc85cecce3430bb6bc2e9ac2e93be3f94382972e","typeString":"literal_string \"latest rewarded era must be in a row\""}],"id":4334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6674:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6674:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4343,"nodeType":"ExpressionStatement","src":"6674:84:15"},{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4344,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"6772:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6774:17:15","memberName":"latestRewardedEra","nodeType":"MemberAccess","referencedDeclaration":5158,"src":"6772:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4347,"name":"eraIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"6794:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6772:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"nodeType":"ExpressionStatement","src":"6772:30:15"}]},"id":4351,"nodeType":"IfStatement","src":"6569:244:15","trueBody":{"id":4333,"nodeType":"Block","src":"6599:55:15","statements":[{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4327,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"6613:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6615:17:15","memberName":"latestRewardedEra","nodeType":"MemberAccess","referencedDeclaration":5158,"src":"6613:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4330,"name":"eraIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"6635:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6613:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"6613:30:15"}]}}]},"id":4353,"implemented":true,"kind":"function","modifiers":[],"name":"_updateLatestRewardedEra","nameLocation":"6371:24:15","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"eraIndex","nameLocation":"6404:8:15","nodeType":"VariableDeclaration","scope":4353,"src":"6396:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6395:18:15"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[],"src":"6423:0:15"},"scope":5135,"src":"6362:457:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5475],"body":{"id":4367,"nodeType":"Block","src":"6886:117:15","statements":[{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"$","nameLocation":"6924:1:15","nodeType":"VariableDeclaration","scope":4367,"src":"6896:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4359,"nodeType":"UserDefinedTypeName","pathNode":{"id":4358,"name":"VerisenseAVSStorage","nameLocations":["6896:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"6896:19:15"},"referencedDeclaration":5162,"src":"6896:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4363,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4361,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"6928:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6928:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6896:64:15"},{"expression":{"expression":{"id":4364,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"6977:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6979:17:15","memberName":"latestRewardedEra","nodeType":"MemberAccess","referencedDeclaration":5158,"src":"6977:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4357,"id":4366,"nodeType":"Return","src":"6970:26:15"}]},"functionSelector":"1ed6e115","id":4368,"implemented":true,"kind":"function","modifiers":[],"name":"latestRewardedEra","nameLocation":"6834:17:15","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[],"src":"6851:2:15"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4368,"src":"6877:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6877:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6876:9:15"},"scope":5135,"src":"6825:178:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5470],"body":{"id":4467,"nodeType":"Block","src":"7175:796:15","statements":[{"expression":{"arguments":[{"id":4380,"name":"eraIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"7210:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4379,"name":"_updateLatestRewardedEra","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"7185:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7185:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4382,"nodeType":"ExpressionStatement","src":"7185:34:15"},{"assignments":[4384],"declarations":[{"constant":false,"id":4384,"mutability":"mutable","name":"submissionsLength","nameLocation":"7237:17:15","nodeType":"VariableDeclaration","scope":4467,"src":"7229:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"7229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4387,"initialValue":{"expression":{"id":4385,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"7257:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata[] calldata"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7269:6:15","memberName":"length","nodeType":"MemberAccess","src":"7257:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7229:46:15"},{"body":{"id":4452,"nodeType":"Block","src":"7333:485:15","statements":[{"assignments":[4402],"declarations":[{"constant":false,"id":4402,"mutability":"mutable","name":"submission","nameLocation":"7410:10:15","nodeType":"VariableDeclaration","scope":4452,"src":"7347:73:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"},"typeName":{"id":4401,"nodeType":"UserDefinedTypeName","pathNode":{"id":4400,"name":"IRewardsCoordinator.OperatorDirectedRewardsSubmission","nameLocations":["7347:19:15","7367:33:15"],"nodeType":"IdentifierPath","referencedDeclaration":6775,"src":"7347:53:15"},"referencedDeclaration":6775,"src":"7347:53:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"}},"visibility":"internal"}],"id":4406,"initialValue":{"baseExpression":{"id":4403,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"7423:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata[] calldata"}},"id":4405,"indexExpression":{"id":4404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7435:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7423:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata"}},"nodeType":"VariableDeclarationStatement","src":"7347:90:15"},{"assignments":[4408],"declarations":[{"constant":false,"id":4408,"mutability":"mutable","name":"totalRewards","nameLocation":"7459:12:15","nodeType":"VariableDeclaration","scope":4452,"src":"7451:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"7451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4410,"initialValue":{"hexValue":"30","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7474:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7451:24:15"},{"assignments":[4412],"declarations":[{"constant":false,"id":4412,"mutability":"mutable","name":"rewardsLength","nameLocation":"7497:13:15","nodeType":"VariableDeclaration","scope":4452,"src":"7489:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4416,"initialValue":{"expression":{"expression":{"id":4413,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7513:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7524:15:15","memberName":"operatorRewards","nodeType":"MemberAccess","referencedDeclaration":6768,"src":"7513:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorReward_$6733_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorReward calldata[] calldata"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7540:6:15","memberName":"length","nodeType":"MemberAccess","src":"7513:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7489:57:15"},{"body":{"id":4435,"nodeType":"Block","src":"7604:85:15","statements":[{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"7622:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":4428,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7638:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7649:15:15","memberName":"operatorRewards","nodeType":"MemberAccess","referencedDeclaration":6768,"src":"7638:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorReward_$6733_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorReward calldata[] calldata"}},"id":4431,"indexExpression":{"id":4430,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"7665:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7638:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorReward_$6733_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorReward calldata"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7668:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6732,"src":"7638:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7622:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"7622:52:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"7580:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4422,"name":"rewardsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"7584:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7580:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4436,"initializationExpression":{"assignments":[4418],"declarations":[{"constant":false,"id":4418,"mutability":"mutable","name":"j","nameLocation":"7573:1:15","nodeType":"VariableDeclaration","scope":4436,"src":"7565:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"7565:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4420,"initialValue":{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7577:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7565:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7599:3:15","subExpression":{"id":4424,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"7599:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"7599:3:15"},"nodeType":"ForStatement","src":"7560:129:15"},{"expression":{"arguments":[{"arguments":[{"id":4447,"name":"EIGEN_REWARDS_COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"7766:25:15","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4445,"name":"address","nodeType":"ElementaryTypeName","src":"7758:7:15","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7758:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4449,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"7794:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"expression":{"id":4440,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7717:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7728:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":6764,"src":"7717:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7709:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"7709:7:15","typeDescriptions":{}}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7709:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4437,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"7702:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1077_$","typeString":"type(contract IERC20)"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7736:21:15","memberName":"safeIncreaseAllowance","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"7702:55:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1077_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1077_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:105:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4451,"nodeType":"ExpressionStatement","src":"7702:105:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7305:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4393,"name":"submissionsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"7309:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7305:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4453,"initializationExpression":{"assignments":[4389],"declarations":[{"constant":false,"id":4389,"mutability":"mutable","name":"i","nameLocation":"7298:1:15","nodeType":"VariableDeclaration","scope":4453,"src":"7290:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7290:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4391,"initialValue":{"hexValue":"30","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7302:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7290:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7328:3:15","subExpression":{"id":4395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7328:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4397,"nodeType":"ExpressionStatement","src":"7328:3:15"},"nodeType":"ForStatement","src":"7285:533:15"},{"expression":{"arguments":[{"arguments":[{"id":4459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7904:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_VerisenseAVSManager_$5135","typeString":"contract VerisenseAVSManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VerisenseAVSManager_$5135","typeString":"contract VerisenseAVSManager"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7896:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"7896:7:15","typeDescriptions":{}}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7896:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4461,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"7911:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission calldata[] calldata"}],"expression":{"id":4454,"name":"EIGEN_REWARDS_COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"7827:25:15","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7853:42:15","memberName":"createOperatorDirectedAVSRewardsSubmission","nodeType":"MemberAccess","referencedDeclaration":7152,"src":"7827:68:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (address,struct IRewardsCoordinator.OperatorDirectedRewardsSubmission memory[] memory) external"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7827:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4463,"nodeType":"ExpressionStatement","src":"7827:96:15"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4464,"name":"OperatorRewardsSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"7938:24:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4466,"nodeType":"EmitStatement","src":"7933:31:15"}]},"functionSelector":"9375e713","id":4468,"implemented":true,"kind":"function","modifiers":[{"id":4377,"kind":"modifierInvocation","modifierName":{"id":4376,"name":"onlyOwner","nameLocations":["7161:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7161:9:15"},"nodeType":"ModifierInvocation","src":"7161:9:15"}],"name":"submitOperatorRewards","nameLocation":"7018:21:15","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"eraIndex","nameLocation":"7048:8:15","nodeType":"VariableDeclaration","scope":4468,"src":"7040:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"7040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"submissions","nameLocation":"7123:11:15","nodeType":"VariableDeclaration","scope":4468,"src":"7058:76:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]"},"typeName":{"baseType":{"id":4372,"nodeType":"UserDefinedTypeName","pathNode":{"id":4371,"name":"IRewardsCoordinator.OperatorDirectedRewardsSubmission","nameLocations":["7058:19:15","7078:33:15"],"nodeType":"IdentifierPath","referencedDeclaration":6775,"src":"7058:53:15"},"referencedDeclaration":6775,"src":"7058:53:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"}},"id":4373,"nodeType":"ArrayTypeName","src":"7058:55:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]"}},"visibility":"internal"}],"src":"7039:96:15"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[],"src":"7175:0:15"},"scope":5135,"src":"7009:962:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5481],"body":{"id":4481,"nodeType":"Block","src":"8036:65:15","statements":[{"expression":{"arguments":[{"id":4478,"name":"claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"8086:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4475,"name":"EIGEN_REWARDS_COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"8046:25:15","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardsCoordinator_$7242","typeString":"contract IRewardsCoordinator"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8072:13:15","memberName":"setClaimerFor","nodeType":"MemberAccess","referencedDeclaration":7191,"src":"8046:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4480,"nodeType":"ExpressionStatement","src":"8046:48:15"}]},"functionSelector":"a0169ddd","id":4482,"implemented":true,"kind":"function","modifiers":[{"id":4473,"kind":"modifierInvocation","modifierName":{"id":4472,"name":"onlyOwner","nameLocations":["8026:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"8026:9:15"},"nodeType":"ModifierInvocation","src":"8026:9:15"}],"name":"setClaimerFor","nameLocation":"7986:13:15","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"claimer","nameLocation":"8008:7:15","nodeType":"VariableDeclaration","scope":4482,"src":"8000:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4469,"name":"address","nodeType":"ElementaryTypeName","src":"8000:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7999:17:15"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[],"src":"8036:0:15"},"scope":5135,"src":"7977:124:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5444],"body":{"id":4496,"nodeType":"Block","src":"8172:119:15","statements":[{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"$","nameLocation":"8210:1:15","nodeType":"VariableDeclaration","scope":4496,"src":"8182:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4488,"nodeType":"UserDefinedTypeName","pathNode":{"id":4487,"name":"VerisenseAVSStorage","nameLocations":["8182:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"8182:19:15"},"referencedDeclaration":5162,"src":"8182:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4492,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4490,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"8214:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8182:64:15"},{"expression":{"expression":{"id":4493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"8263:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8265:19:15","memberName":"deregistrationDelay","nodeType":"MemberAccess","referencedDeclaration":5154,"src":"8263:21:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4486,"id":4495,"nodeType":"Return","src":"8256:28:15"}]},"functionSelector":"8495feab","id":4497,"implemented":true,"kind":"function","modifiers":[],"name":"getDeregistrationDelay","nameLocation":"8116:22:15","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[],"src":"8138:2:15"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4497,"src":"8164:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4484,"name":"uint64","nodeType":"ElementaryTypeName","src":"8164:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8163:8:15"},"scope":5135,"src":"8107:184:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5438],"body":{"id":4509,"nodeType":"Block","src":"8388:46:15","statements":[{"expression":{"arguments":[{"id":4506,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"8418:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4505,"name":"_getOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"8405:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_OperatorDataExtended_$5259_memory_ptr_$","typeString":"function (address) view returns (struct IVerisenseAVSManager.OperatorDataExtended memory)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8405:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended memory"}},"functionReturnParameters":4504,"id":4508,"nodeType":"Return","src":"8398:29:15"}]},"functionSelector":"5865c60c","id":4510,"implemented":true,"kind":"function","modifiers":[],"name":"getOperator","nameLocation":"8306:11:15","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"operator","nameLocation":"8326:8:15","nodeType":"VariableDeclaration","scope":4510,"src":"8318:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4498,"name":"address","nodeType":"ElementaryTypeName","src":"8318:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:18:15"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4510,"src":"8359:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"},"typeName":{"id":4502,"nodeType":"UserDefinedTypeName","pathNode":{"id":4501,"name":"OperatorDataExtended","nameLocations":["8359:20:15"],"nodeType":"IdentifierPath","referencedDeclaration":5259,"src":"8359:20:15"},"referencedDeclaration":5259,"src":"8359:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"}},"visibility":"internal"}],"src":"8358:29:15"},"scope":5135,"src":"8297:137:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4633,"nodeType":"Block","src":"8578:1166:15","statements":[{"assignments":[4520],"declarations":[{"constant":false,"id":4520,"mutability":"mutable","name":"operatorData","nameLocation":"8616:12:15","nodeType":"VariableDeclaration","scope":4633,"src":"8588:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"},"typeName":{"id":4519,"nodeType":"UserDefinedTypeName","pathNode":{"id":4518,"name":"OperatorDataExtended","nameLocations":["8588:20:15"],"nodeType":"IdentifierPath","referencedDeclaration":5259,"src":"8588:20:15"},"referencedDeclaration":5259,"src":"8588:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"}},"visibility":"internal"}],"id":4524,"initialValue":{"arguments":[{"id":4522,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"8644:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4521,"name":"_getOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"8631:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_OperatorDataExtended_$5259_memory_ptr_$","typeString":"function (address) view returns (struct IVerisenseAVSManager.OperatorDataExtended memory)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8631:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended memory"}},"nodeType":"VariableDeclarationStatement","src":"8588:65:15"},{"assignments":[4527],"declarations":[{"constant":false,"id":4527,"mutability":"mutable","name":"$","nameLocation":"8691:1:15","nodeType":"VariableDeclaration","scope":4633,"src":"8663:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4526,"nodeType":"UserDefinedTypeName","pathNode":{"id":4525,"name":"VerisenseAVSStorage","nameLocations":["8663:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"8663:19:15"},"referencedDeclaration":5162,"src":"8663:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4528,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"8695:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8695:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8663:64:15"},{"condition":{"expression":{"id":4531,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"8742:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended memory"}},"id":4532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8755:12:15","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":5258,"src":"8742:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4632,"nodeType":"IfStatement","src":"8738:1000:15","trueBody":{"id":4631,"nodeType":"Block","src":"8769:969:15","statements":[{"assignments":[4534],"declarations":[{"constant":false,"id":4534,"mutability":"mutable","name":"allowlistedCount","nameLocation":"8791:16:15","nodeType":"VariableDeclaration","scope":4631,"src":"8783:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"8783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4539,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4535,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"8810:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8812:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"8810:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8843:6:15","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3651,"src":"8810:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8783:68:15"},{"assignments":[4544],"declarations":[{"constant":false,"id":4544,"mutability":"mutable","name":"strategies","nameLocation":"8884:10:15","nodeType":"VariableDeclaration","scope":4631,"src":"8865:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":4542,"nodeType":"UserDefinedTypeName","pathNode":{"id":4541,"name":"IStrategy","nameLocations":["8865:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"8865:9:15"},"referencedDeclaration":7612,"src":"8865:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4543,"nodeType":"ArrayTypeName","src":"8865:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"id":4551,"initialValue":{"arguments":[{"id":4549,"name":"allowlistedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"8913:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8897:15:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IStrategy[] memory)"},"typeName":{"baseType":{"id":4546,"nodeType":"UserDefinedTypeName","pathNode":{"id":4545,"name":"IStrategy","nameLocations":["8901:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"8901:9:15"},"referencedDeclaration":7612,"src":"8901:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4547,"nodeType":"ArrayTypeName","src":"8901:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8897:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8865:65:15"},{"body":{"id":4574,"nodeType":"Block","src":"8991:98:15","statements":[{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4562,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"9009:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"id":4564,"indexExpression":{"id":4563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"9020:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9009:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"9071:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4566,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"9035:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9037:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"9035:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9068:2:15","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3678,"src":"9035:35:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9035:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4565,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"9025:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$7612_$","typeString":"type(contract IStrategy)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9025:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"src":"9009:65:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4573,"nodeType":"ExpressionStatement","src":"9009:65:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8964:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4557,"name":"allowlistedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"8968:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8964:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4575,"initializationExpression":{"assignments":[4553],"declarations":[{"constant":false,"id":4553,"mutability":"mutable","name":"i","nameLocation":"8957:1:15","nodeType":"VariableDeclaration","scope":4575,"src":"8949:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"8949:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4555,"initialValue":{"hexValue":"30","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8949:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8986:3:15","subExpression":{"id":4559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"8986:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4561,"nodeType":"ExpressionStatement","src":"8986:3:15"},"nodeType":"ForStatement","src":"8944:145:15"},{"assignments":[4580],"declarations":[{"constant":false,"id":4580,"mutability":"mutable","name":"shares","nameLocation":"9120:6:15","nodeType":"VariableDeclaration","scope":4631,"src":"9103:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"9103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ArrayTypeName","src":"9103:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4586,"initialValue":{"arguments":[{"id":4583,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"9172:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4584,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"9182:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}],"expression":{"id":4581,"name":"EIGEN_DELEGATION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"9129:24:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9154:17:15","memberName":"getOperatorShares","nodeType":"MemberAccess","referencedDeclaration":5923,"src":"9129:42:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,contract IStrategy[] memory) view external returns (uint256[] memory)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9103:90:15"},{"assignments":[4588],"declarations":[{"constant":false,"id":4588,"mutability":"mutable","name":"restakedCount","nameLocation":"9216:13:15","nodeType":"VariableDeclaration","scope":4631,"src":"9208:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4590,"initialValue":{"hexValue":"30","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9232:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9208:25:15"},{"expression":{"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"restakedStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"9247:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4595,"name":"allowlistedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"9282:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9268:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4592,"name":"address","nodeType":"ElementaryTypeName","src":"9272:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4593,"nodeType":"ArrayTypeName","src":"9272:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9268:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"9247:52:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4598,"nodeType":"ExpressionStatement","src":"9247:52:15"},{"body":{"id":4628,"nodeType":"Block","src":"9361:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4609,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"9383:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4611,"indexExpression":{"id":4610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"9390:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9383:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"9379:120:15","trueBody":{"id":4626,"nodeType":"Block","src":"9398:101:15","statements":[{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4614,"name":"restakedStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"9420:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4617,"indexExpression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9439:15:15","subExpression":{"id":4615,"name":"restakedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"9439:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9420:35:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4620,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"9466:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"id":4622,"indexExpression":{"id":4621,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"9477:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9466:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}],"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9458:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4618,"name":"address","nodeType":"ElementaryTypeName","src":"9458:7:15","typeDescriptions":{}}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9420:60:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4625,"nodeType":"ExpressionStatement","src":"9420:60:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"9334:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4604,"name":"allowlistedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"9338:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9334:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4629,"initializationExpression":{"assignments":[4600],"declarations":[{"constant":false,"id":4600,"mutability":"mutable","name":"i","nameLocation":"9327:1:15","nodeType":"VariableDeclaration","scope":4629,"src":"9319:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"9319:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4602,"initialValue":{"hexValue":"30","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9319:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9356:3:15","subExpression":{"id":4606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"9356:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"9356:3:15"},"nodeType":"ForStatement","src":"9314:199:15"},{"AST":{"nativeSrc":"9612:116:15","nodeType":"YulBlock","src":"9612:116:15","statements":[{"body":{"nativeSrc":"9669:45:15","nodeType":"YulBlock","src":"9669:45:15","statements":[{"expression":{"arguments":[{"name":"restakedStrategies","nativeSrc":"9678:18:15","nodeType":"YulIdentifier","src":"9678:18:15"},{"name":"restakedCount","nativeSrc":"9698:13:15","nodeType":"YulIdentifier","src":"9698:13:15"}],"functionName":{"name":"mstore","nativeSrc":"9671:6:15","nodeType":"YulIdentifier","src":"9671:6:15"},"nativeSrc":"9671:41:15","nodeType":"YulFunctionCall","src":"9671:41:15"},"nativeSrc":"9671:41:15","nodeType":"YulExpressionStatement","src":"9671:41:15"}]},"condition":{"arguments":[{"name":"restakedCount","nativeSrc":"9636:13:15","nodeType":"YulIdentifier","src":"9636:13:15"},{"name":"allowlistedCount","nativeSrc":"9651:16:15","nodeType":"YulIdentifier","src":"9651:16:15"}],"functionName":{"name":"lt","nativeSrc":"9633:2:15","nodeType":"YulIdentifier","src":"9633:2:15"},"nativeSrc":"9633:35:15","nodeType":"YulFunctionCall","src":"9633:35:15"},"nativeSrc":"9630:84:15","nodeType":"YulIf","src":"9630:84:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4534,"isOffset":false,"isSlot":false,"src":"9651:16:15","valueSize":1},{"declaration":4588,"isOffset":false,"isSlot":false,"src":"9636:13:15","valueSize":1},{"declaration":4588,"isOffset":false,"isSlot":false,"src":"9698:13:15","valueSize":1},{"declaration":4516,"isOffset":false,"isSlot":false,"src":"9678:18:15","valueSize":1}],"id":4630,"nodeType":"InlineAssembly","src":"9603:125:15"}]}}]},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"_getOperatorRestakedStrategies","nameLocation":"8449:30:15","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"operator","nameLocation":"8488:8:15","nodeType":"VariableDeclaration","scope":4634,"src":"8480:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4511,"name":"address","nodeType":"ElementaryTypeName","src":"8480:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8479:18:15"},"returnParameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"restakedStrategies","nameLocation":"8558:18:15","nodeType":"VariableDeclaration","scope":4634,"src":"8541:35:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"8541:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4515,"nodeType":"ArrayTypeName","src":"8541:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8540:37:15"},"scope":5135,"src":"8440:1304:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4733,"nodeType":"Block","src":"9838:1122:15","statements":[{"assignments":[4642],"declarations":[{"constant":false,"id":4642,"mutability":"mutable","name":"operators_size","nameLocation":"9856:14:15","nodeType":"VariableDeclaration","scope":4733,"src":"9848:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"9848:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4648,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4643,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"9873:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9906:17:15","memberName":"operatorAddresses","nodeType":"MemberAccess","referencedDeclaration":5152,"src":"9873:50:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9924:6:15","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3651,"src":"9873:57:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9848:84:15"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4649,"name":"operatorList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"9942:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_memory_ptr_$dyn_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4654,"name":"operators_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"9981:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9957:23:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_OperatorValidData_$5213_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IVerisenseAVSManager.OperatorValidData memory[] memory)"},"typeName":{"baseType":{"id":4651,"nodeType":"UserDefinedTypeName","pathNode":{"id":4650,"name":"OperatorValidData","nameLocations":["9961:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":5213,"src":"9961:17:15"},"referencedDeclaration":5213,"src":"9961:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData"}},"id":4652,"nodeType":"ArrayTypeName","src":"9961:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_storage_$dyn_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData[]"}}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9957:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_memory_ptr_$dyn_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory[] memory"}},"src":"9942:54:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_memory_ptr_$dyn_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory[] memory"}},"id":4657,"nodeType":"ExpressionStatement","src":"9942:54:15"},{"assignments":[4662],"declarations":[{"constant":false,"id":4662,"mutability":"mutable","name":"strategies","nameLocation":"10025:10:15","nodeType":"VariableDeclaration","scope":4733,"src":"10006:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":4660,"nodeType":"UserDefinedTypeName","pathNode":{"id":4659,"name":"IStrategy","nameLocations":["10006:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"10006:9:15"},"referencedDeclaration":7612,"src":"10006:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4661,"nodeType":"ArrayTypeName","src":"10006:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"id":4665,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4663,"name":"_getStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"10038:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr_$","typeString":"function () view returns (contract IStrategy[] memory)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10038:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10006:48:15"},{"assignments":[4667],"declarations":[{"constant":false,"id":4667,"mutability":"mutable","name":"registeredCount","nameLocation":"10072:15:15","nodeType":"VariableDeclaration","scope":4733,"src":"10064:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"10064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4669,"initialValue":{"hexValue":"30","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10090:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10064:27:15"},{"body":{"id":4730,"nodeType":"Block","src":"10142:690:15","statements":[{"assignments":[4680],"declarations":[{"constant":false,"id":4680,"mutability":"mutable","name":"key","nameLocation":"10164:3:15","nodeType":"VariableDeclaration","scope":4730,"src":"10156:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4679,"name":"address","nodeType":"ElementaryTypeName","src":"10156:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4687,"initialValue":{"arguments":[{"id":4685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"10224:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4681,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"10170:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10203:17:15","memberName":"operatorAddresses","nodeType":"MemberAccess","referencedDeclaration":5152,"src":"10170:50:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10221:2:15","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3678,"src":"10170:53:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10156:70:15"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4689,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"10266:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4688,"name":"_getAvsOperatorStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"10244:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"function (address) view returns (enum IAVSDirectory.OperatorAVSRegistrationStatus)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10244:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4691,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"10274:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAVSDirectory_$5572_$","typeString":"type(contract IAVSDirectory)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10288:29:15","memberName":"OperatorAVSRegistrationStatus","nodeType":"MemberAccess","referencedDeclaration":5491,"src":"10274:43:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"type(enum IAVSDirectory.OperatorAVSRegistrationStatus)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10318:10:15","memberName":"REGISTERED","nodeType":"MemberAccess","referencedDeclaration":5490,"src":"10274:54:15","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"src":"10244:84:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4729,"nodeType":"IfStatement","src":"10240:582:15","trueBody":{"id":4728,"nodeType":"Block","src":"10330:492:15","statements":[{"assignments":[4697],"declarations":[{"constant":false,"id":4697,"mutability":"mutable","name":"d","nameLocation":"10368:1:15","nodeType":"VariableDeclaration","scope":4728,"src":"10348:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"},"typeName":{"id":4696,"nodeType":"UserDefinedTypeName","pathNode":{"id":4695,"name":"OperatorData","nameLocations":["10348:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":5223,"src":"10348:12:15"},"referencedDeclaration":5223,"src":"10348:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"}},"visibility":"internal"}],"id":4703,"initialValue":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4698,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"10372:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10372:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10405:9:15","memberName":"operators","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"10372:42:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData storage ref)"}},"id":4702,"indexExpression":{"id":4701,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"10415:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10372:47:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage","typeString":"struct IVerisenseAVSManager.OperatorData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10348:71:15"},{"assignments":[4706],"declarations":[{"constant":false,"id":4706,"mutability":"mutable","name":"dv","nameLocation":"10462:2:15","nodeType":"VariableDeclaration","scope":4728,"src":"10437:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData"},"typeName":{"id":4705,"nodeType":"UserDefinedTypeName","pathNode":{"id":4704,"name":"OperatorValidData","nameLocations":["10437:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":5213,"src":"10437:17:15"},"referencedDeclaration":5213,"src":"10437:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData"}},"visibility":"internal"}],"id":4721,"initialValue":{"arguments":[{"expression":{"id":4708,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10525:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorData memory"}},"id":4709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10527:16:15","memberName":"substrate_pubkey","nodeType":"MemberAccess","referencedDeclaration":5220,"src":"10525:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4710,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"10576:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4712,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"10627:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4713,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"10632:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}],"id":4711,"name":"_getOperatorStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"10609:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,contract IStrategy[] memory) view returns (uint256)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10609:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":4717,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"10731:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4716,"name":"_getOperatorRestakedStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"10700:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view returns (address[] memory)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4715,"name":"sortAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"10686:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (address[] memory)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10686:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4707,"name":"OperatorValidData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"10467:17:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_OperatorValidData_$5213_storage_ptr_$","typeString":"type(struct IVerisenseAVSManager.OperatorValidData storage pointer)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10507:15:15","10565:8:15","10601:5:15","10665:18:15"],"names":["substratePubkey","operator","stake","restakedStrategies"],"nodeType":"FunctionCall","src":"10467:288:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory"}},"nodeType":"VariableDeclarationStatement","src":"10437:318:15"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4722,"name":"operatorList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"10773:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_memory_ptr_$dyn_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory[] memory"}},"id":4724,"indexExpression":{"id":4723,"name":"registeredCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"10786:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10773:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4725,"name":"dv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"10805:2:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory"}},"src":"10773:34:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData memory"}},"id":4727,"nodeType":"ExpressionStatement","src":"10773:34:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"10117:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4674,"name":"operators_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"10121:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10117:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"initializationExpression":{"assignments":[4671],"declarations":[{"constant":false,"id":4671,"mutability":"mutable","name":"i","nameLocation":"10114:1:15","nodeType":"VariableDeclaration","scope":4731,"src":"10106:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10106:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4672,"nodeType":"VariableDeclarationStatement","src":"10106:9:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10137:3:15","subExpression":{"id":4676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"10137:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4678,"nodeType":"ExpressionStatement","src":"10137:3:15"},"nodeType":"ForStatement","src":"10101:731:15"},{"AST":{"nativeSrc":"10850:104:15","nodeType":"YulBlock","src":"10850:104:15","statements":[{"body":{"nativeSrc":"10903:41:15","nodeType":"YulBlock","src":"10903:41:15","statements":[{"expression":{"arguments":[{"name":"operatorList","nativeSrc":"10912:12:15","nodeType":"YulIdentifier","src":"10912:12:15"},{"name":"registeredCount","nativeSrc":"10926:15:15","nodeType":"YulIdentifier","src":"10926:15:15"}],"functionName":{"name":"mstore","nativeSrc":"10905:6:15","nodeType":"YulIdentifier","src":"10905:6:15"},"nativeSrc":"10905:37:15","nodeType":"YulFunctionCall","src":"10905:37:15"},"nativeSrc":"10905:37:15","nodeType":"YulExpressionStatement","src":"10905:37:15"}]},"condition":{"arguments":[{"name":"registeredCount","nativeSrc":"10870:15:15","nodeType":"YulIdentifier","src":"10870:15:15"},{"name":"operators_size","nativeSrc":"10887:14:15","nodeType":"YulIdentifier","src":"10887:14:15"}],"functionName":{"name":"lt","nativeSrc":"10867:2:15","nodeType":"YulIdentifier","src":"10867:2:15"},"nativeSrc":"10867:35:15","nodeType":"YulFunctionCall","src":"10867:35:15"},"nativeSrc":"10864:80:15","nodeType":"YulIf","src":"10864:80:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4639,"isOffset":false,"isSlot":false,"src":"10912:12:15","valueSize":1},{"declaration":4642,"isOffset":false,"isSlot":false,"src":"10887:14:15","valueSize":1},{"declaration":4667,"isOffset":false,"isSlot":false,"src":"10870:15:15","valueSize":1},{"declaration":4667,"isOffset":false,"isSlot":false,"src":"10926:15:15","valueSize":1}],"id":4732,"nodeType":"InlineAssembly","src":"10841:113:15"}]},"functionSelector":"27a099d8","id":4734,"implemented":true,"kind":"function","modifiers":[],"name":"getOperators","nameLocation":"9759:12:15","nodeType":"FunctionDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[],"src":"9771:2:15"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"operatorList","nameLocation":"9824:12:15","nodeType":"VariableDeclaration","scope":4734,"src":"9797:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_memory_ptr_$dyn_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData[]"},"typeName":{"baseType":{"id":4637,"nodeType":"UserDefinedTypeName","pathNode":{"id":4636,"name":"OperatorValidData","nameLocations":["9797:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":5213,"src":"9797:17:15"},"referencedDeclaration":5213,"src":"9797:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorValidData_$5213_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData"}},"id":4638,"nodeType":"ArrayTypeName","src":"9797:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorValidData_$5213_storage_$dyn_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorValidData[]"}},"visibility":"internal"}],"src":"9796:41:15"},"scope":5135,"src":"9750:1210:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5453],"body":{"id":4746,"nodeType":"Block","src":"11111:63:15","statements":[{"expression":{"arguments":[{"id":4743,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"11158:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4742,"name":"_getOperatorRestakedStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"11127:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view returns (address[] memory)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11127:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4741,"id":4745,"nodeType":"Return","src":"11120:47:15"}]},"functionSelector":"33cfb7b7","id":4747,"implemented":true,"kind":"function","modifiers":[],"name":"getOperatorRestakedStrategies","nameLocation":"10975:29:15","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"operator","nameLocation":"11013:8:15","nodeType":"VariableDeclaration","scope":4747,"src":"11005:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4735,"name":"address","nodeType":"ElementaryTypeName","src":"11005:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11004:18:15"},"returnParameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"restakedStrategies","nameLocation":"11087:18:15","nodeType":"VariableDeclaration","scope":4747,"src":"11070:35:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4738,"name":"address","nodeType":"ElementaryTypeName","src":"11070:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4739,"nodeType":"ArrayTypeName","src":"11070:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11069:37:15"},"scope":5135,"src":"10966:208:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4794,"nodeType":"Block","src":"11288:273:15","statements":[{"assignments":[4762],"declarations":[{"constant":false,"id":4762,"mutability":"mutable","name":"shares","nameLocation":"11315:6:15","nodeType":"VariableDeclaration","scope":4794,"src":"11298:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"11298:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ArrayTypeName","src":"11298:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4768,"initialValue":{"arguments":[{"id":4765,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"11367:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4766,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"11377:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}],"expression":{"id":4763,"name":"EIGEN_DELEGATION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"11324:24:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11349:17:15","memberName":"getOperatorShares","nodeType":"MemberAccess","referencedDeclaration":5923,"src":"11324:42:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,contract IStrategy[] memory) view external returns (uint256[] memory)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11324:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11298:90:15"},{"assignments":[4770],"declarations":[{"constant":false,"id":4770,"mutability":"mutable","name":"total_shares","nameLocation":"11406:12:15","nodeType":"VariableDeclaration","scope":4794,"src":"11398:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"11398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4772,"initialValue":{"hexValue":"30","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11421:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11398:24:15"},{"body":{"id":4790,"nodeType":"Block","src":"11476:50:15","statements":[{"expression":{"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"total_shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"11490:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4785,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"11506:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4787,"indexExpression":{"id":4786,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"11513:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11506:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11490:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4789,"nodeType":"ExpressionStatement","src":"11490:25:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"11452:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4778,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"11456:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11463:6:15","memberName":"length","nodeType":"MemberAccess","src":"11456:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11452:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4791,"initializationExpression":{"assignments":[4774],"declarations":[{"constant":false,"id":4774,"mutability":"mutable","name":"i","nameLocation":"11445:1:15","nodeType":"VariableDeclaration","scope":4791,"src":"11437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"11437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4776,"initialValue":{"hexValue":"30","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11437:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11471:3:15","subExpression":{"id":4781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"11471:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"11471:3:15"},"nodeType":"ForStatement","src":"11432:94:15"},{"expression":{"id":4792,"name":"total_shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"11542:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4757,"id":4793,"nodeType":"Return","src":"11535:19:15"}]},"id":4795,"implemented":true,"kind":"function","modifiers":[],"name":"_getOperatorStake","nameLocation":"11189:17:15","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"operator","nameLocation":"11215:8:15","nodeType":"VariableDeclaration","scope":4795,"src":"11207:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4748,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"strategies","nameLocation":"11244:10:15","nodeType":"VariableDeclaration","scope":4795,"src":"11225:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":4751,"nodeType":"UserDefinedTypeName","pathNode":{"id":4750,"name":"IStrategy","nameLocations":["11225:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"11225:9:15"},"referencedDeclaration":7612,"src":"11225:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4752,"nodeType":"ArrayTypeName","src":"11225:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"src":"11206:49:15"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4795,"src":"11279:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"11279:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11278:9:15"},"scope":5135,"src":"11180:381:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"11636:407:15","statements":[{"assignments":[4804],"declarations":[{"constant":false,"id":4804,"mutability":"mutable","name":"$","nameLocation":"11674:1:15","nodeType":"VariableDeclaration","scope":4853,"src":"11646:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4803,"nodeType":"UserDefinedTypeName","pathNode":{"id":4802,"name":"VerisenseAVSStorage","nameLocations":["11646:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"11646:19:15"},"referencedDeclaration":5162,"src":"11646:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4807,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4805,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"11678:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11678:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11646:64:15"},{"assignments":[4809],"declarations":[{"constant":false,"id":4809,"mutability":"mutable","name":"allowlistedCount","nameLocation":"11728:16:15","nodeType":"VariableDeclaration","scope":4853,"src":"11720:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"11720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4814,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4810,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"11747:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11749:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"11747:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11780:6:15","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3651,"src":"11747:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11747:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11720:68:15"},{"assignments":[4819],"declarations":[{"constant":false,"id":4819,"mutability":"mutable","name":"strategies","nameLocation":"11817:10:15","nodeType":"VariableDeclaration","scope":4853,"src":"11798:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":4817,"nodeType":"UserDefinedTypeName","pathNode":{"id":4816,"name":"IStrategy","nameLocations":["11798:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"11798:9:15"},"referencedDeclaration":7612,"src":"11798:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4818,"nodeType":"ArrayTypeName","src":"11798:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"id":4826,"initialValue":{"arguments":[{"id":4824,"name":"allowlistedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"11846:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11830:15:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IStrategy[] memory)"},"typeName":{"baseType":{"id":4821,"nodeType":"UserDefinedTypeName","pathNode":{"id":4820,"name":"IStrategy","nameLocations":["11834:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"11834:9:15"},"referencedDeclaration":7612,"src":"11834:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4822,"nodeType":"ArrayTypeName","src":"11834:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11830:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11798:65:15"},{"body":{"id":4849,"nodeType":"Block","src":"11920:90:15","statements":[{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4837,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"11934:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"id":4839,"indexExpression":{"id":4838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"11945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11934:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4844,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"11996:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4841,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"11960:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11962:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"11960:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11993:2:15","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3678,"src":"11960:35:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11960:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4840,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"11950:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$7612_$","typeString":"type(contract IStrategy)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11950:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"src":"11934:65:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4848,"nodeType":"ExpressionStatement","src":"11934:65:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"11893:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4832,"name":"allowlistedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"11897:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11893:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"initializationExpression":{"assignments":[4828],"declarations":[{"constant":false,"id":4828,"mutability":"mutable","name":"i","nameLocation":"11886:1:15","nodeType":"VariableDeclaration","scope":4850,"src":"11878:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"11878:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4830,"initialValue":{"hexValue":"30","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11890:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11878:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11915:3:15","subExpression":{"id":4834,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"11915:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4836,"nodeType":"ExpressionStatement","src":"11915:3:15"},"nodeType":"ForStatement","src":"11873:137:15"},{"expression":{"id":4851,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"12026:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[] memory"}},"functionReturnParameters":4801,"id":4852,"nodeType":"Return","src":"12019:17:15"}]},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"_getStrategies","nameLocation":"11576:14:15","nodeType":"FunctionDefinition","parameters":{"id":4796,"nodeType":"ParameterList","parameters":[],"src":"11590:2:15"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"11616:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":4798,"nodeType":"UserDefinedTypeName","pathNode":{"id":4797,"name":"IStrategy","nameLocations":["11616:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"11616:9:15"},"referencedDeclaration":7612,"src":"11616:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":4799,"nodeType":"ArrayTypeName","src":"11616:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"src":"11615:20:15"},"scope":5135,"src":"11567:476:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[5460],"body":{"id":4871,"nodeType":"Block","src":"12126:139:15","statements":[{"assignments":[4862],"declarations":[{"constant":false,"id":4862,"mutability":"mutable","name":"$","nameLocation":"12164:1:15","nodeType":"VariableDeclaration","scope":4871,"src":"12136:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4861,"nodeType":"UserDefinedTypeName","pathNode":{"id":4860,"name":"VerisenseAVSStorage","nameLocations":["12136:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"12136:19:15"},"referencedDeclaration":5162,"src":"12136:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4863,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"12168:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12168:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"12136:64:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4866,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"12217:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12219:30:15","memberName":"allowlistedRestakingStrategies","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"12217:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12250:6:15","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"12217:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3555_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$3555_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12217:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4859,"id":4870,"nodeType":"Return","src":"12210:48:15"}]},"functionSelector":"e481af9d","id":4872,"implemented":true,"kind":"function","modifiers":[],"name":"getRestakeableStrategies","nameLocation":"12058:24:15","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[],"src":"12082:2:15"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4872,"src":"12108:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4856,"name":"address","nodeType":"ElementaryTypeName","src":"12108:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4857,"nodeType":"ArrayTypeName","src":"12108:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12107:18:15"},"scope":5135,"src":"12049:216:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4906,"nodeType":"Block","src":"12363:399:15","statements":[{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"$","nameLocation":"12401:1:15","nodeType":"VariableDeclaration","scope":4906,"src":"12373:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4881,"nodeType":"UserDefinedTypeName","pathNode":{"id":4880,"name":"VerisenseAVSStorage","nameLocations":["12373:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"12373:19:15"},"referencedDeclaration":5162,"src":"12373:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4885,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4883,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"12405:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12405:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"12373:64:15"},{"assignments":[4888],"declarations":[{"constant":false,"id":4888,"mutability":"mutable","name":"operatorData","nameLocation":"12468:12:15","nodeType":"VariableDeclaration","scope":4906,"src":"12447:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"},"typeName":{"id":4887,"nodeType":"UserDefinedTypeName","pathNode":{"id":4886,"name":"OperatorData","nameLocations":["12447:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":5223,"src":"12447:12:15"},"referencedDeclaration":5223,"src":"12447:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"}},"visibility":"internal"}],"id":4893,"initialValue":{"baseExpression":{"expression":{"id":4889,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"12483:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12485:9:15","memberName":"operators","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"12483:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData storage ref)"}},"id":4892,"indexExpression":{"id":4891,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"12495:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12483:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage","typeString":"struct IVerisenseAVSManager.OperatorData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12447:57:15"},{"expression":{"arguments":[{"expression":{"id":4895,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"12586:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData storage pointer"}},"id":4896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12599:28:15","memberName":"startDeregisterOperatorBlock","nodeType":"MemberAccess","referencedDeclaration":5217,"src":"12586:41:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"commonType":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4898,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"12677:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4897,"name":"_getAvsOperatorStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"12655:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"function (address) view returns (enum IAVSDirectory.OperatorAVSRegistrationStatus)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12655:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4900,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"12690:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAVSDirectory_$5572_$","typeString":"type(contract IAVSDirectory)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12704:29:15","memberName":"OperatorAVSRegistrationStatus","nodeType":"MemberAccess","referencedDeclaration":5491,"src":"12690:43:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperatorAVSRegistrationStatus_$5491_$","typeString":"type(enum IAVSDirectory.OperatorAVSRegistrationStatus)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12734:10:15","memberName":"REGISTERED","nodeType":"MemberAccess","referencedDeclaration":5490,"src":"12690:54:15","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"src":"12655:89:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4894,"name":"OperatorDataExtended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"12521:20:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_OperatorDataExtended_$5259_storage_ptr_$","typeString":"type(struct IVerisenseAVSManager.OperatorDataExtended storage pointer)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12556:28:15","12641:12:15"],"names":["startDeregisterOperatorBlock","isRegistered"],"nodeType":"FunctionCall","src":"12521:234:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended memory"}},"functionReturnParameters":4879,"id":4905,"nodeType":"Return","src":"12514:241:15"}]},"id":4907,"implemented":true,"kind":"function","modifiers":[],"name":"_getOperator","nameLocation":"12280:12:15","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"operator","nameLocation":"12301:8:15","nodeType":"VariableDeclaration","scope":4907,"src":"12293:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"12293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12292:18:15"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4907,"src":"12334:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"},"typeName":{"id":4877,"nodeType":"UserDefinedTypeName","pathNode":{"id":4876,"name":"OperatorDataExtended","nameLocations":["12334:20:15"],"nodeType":"IdentifierPath","referencedDeclaration":5259,"src":"12334:20:15"},"referencedDeclaration":5259,"src":"12334:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"}},"visibility":"internal"}],"src":"12333:29:15"},"scope":5135,"src":"12271:491:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4934,"nodeType":"Block","src":"12827:229:15","statements":[{"assignments":[4914],"declarations":[{"constant":false,"id":4914,"mutability":"mutable","name":"$","nameLocation":"12865:1:15","nodeType":"VariableDeclaration","scope":4934,"src":"12837:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":4913,"nodeType":"UserDefinedTypeName","pathNode":{"id":4912,"name":"VerisenseAVSStorage","nameLocations":["12837:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"12837:19:15"},"referencedDeclaration":5162,"src":"12837:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"id":4917,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4915,"name":"_getVerisenseAVSManagerStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"12869:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_VerisenseAVSStorage_$5162_storage_ptr_$","typeString":"function () pure returns (struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12869:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"12837:64:15"},{"assignments":[4919],"declarations":[{"constant":false,"id":4919,"mutability":"mutable","name":"oldDelay","nameLocation":"12918:8:15","nodeType":"VariableDeclaration","scope":4934,"src":"12911:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4918,"name":"uint64","nodeType":"ElementaryTypeName","src":"12911:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4922,"initialValue":{"expression":{"id":4920,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"12929:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12931:19:15","memberName":"deregistrationDelay","nodeType":"MemberAccess","referencedDeclaration":5154,"src":"12929:21:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"12911:39:15"},{"expression":{"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4923,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"12960:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage storage pointer"}},"id":4925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12962:19:15","memberName":"deregistrationDelay","nodeType":"MemberAccess","referencedDeclaration":5154,"src":"12960:21:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4926,"name":"newDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"12984:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"12960:32:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4928,"nodeType":"ExpressionStatement","src":"12960:32:15"},{"eventCall":{"arguments":[{"id":4930,"name":"oldDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"13030:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4931,"name":"newDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"13040:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4929,"name":"DeregistrationDelaySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"13007:22:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (uint64,uint64)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13007:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4933,"nodeType":"EmitStatement","src":"13002:47:15"}]},"id":4935,"implemented":true,"kind":"function","modifiers":[],"name":"_setDeregistrationDelay","nameLocation":"12777:23:15","nodeType":"FunctionDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"newDelay","nameLocation":"12808:8:15","nodeType":"VariableDeclaration","scope":4935,"src":"12801:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4908,"name":"uint64","nodeType":"ElementaryTypeName","src":"12801:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12800:17:15"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[],"src":"12827:0:15"},"scope":5135,"src":"12768:288:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5056,"nodeType":"Block","src":"13148:583:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4944,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13162:3:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13166:6:15","memberName":"length","nodeType":"MemberAccess","src":"13162:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13176:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13162:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"nodeType":"IfStatement","src":"13158:56:15","trueBody":{"id":4950,"nodeType":"Block","src":"13179:35:15","statements":[{"expression":{"id":4948,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13200:3:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4943,"id":4949,"nodeType":"Return","src":"13193:10:15"}]}},{"assignments":[4956],"declarations":[{"constant":false,"id":4956,"mutability":"mutable","name":"sortedArr","nameLocation":"13240:9:15","nodeType":"VariableDeclaration","scope":5056,"src":"13223:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4954,"name":"address","nodeType":"ElementaryTypeName","src":"13223:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4955,"nodeType":"ArrayTypeName","src":"13223:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4963,"initialValue":{"arguments":[{"expression":{"id":4960,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13266:3:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13270:6:15","memberName":"length","nodeType":"MemberAccess","src":"13266:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13252:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4957,"name":"address","nodeType":"ElementaryTypeName","src":"13256:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4958,"nodeType":"ArrayTypeName","src":"13256:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13252:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13223:54:15"},{"body":{"id":4983,"nodeType":"Block","src":"13325:46:15","statements":[{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4975,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13339:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4977,"indexExpression":{"id":4976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"13349:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13339:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4978,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13354:3:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4980,"indexExpression":{"id":4979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"13358:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13354:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13339:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4982,"nodeType":"ExpressionStatement","src":"13339:21:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"13304:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4969,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"13308:3:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13312:6:15","memberName":"length","nodeType":"MemberAccess","src":"13308:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13304:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4984,"initializationExpression":{"assignments":[4965],"declarations":[{"constant":false,"id":4965,"mutability":"mutable","name":"i","nameLocation":"13297:1:15","nodeType":"VariableDeclaration","scope":4984,"src":"13292:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4964,"name":"uint","nodeType":"ElementaryTypeName","src":"13292:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4967,"initialValue":{"hexValue":"30","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13301:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13292:10:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13320:3:15","subExpression":{"id":4972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"13320:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4974,"nodeType":"ExpressionStatement","src":"13320:3:15"},"nodeType":"ForStatement","src":"13287:84:15"},{"body":{"id":5052,"nodeType":"Block","src":"13428:271:15","statements":[{"body":{"id":5050,"nodeType":"Block","src":"13494:195:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5015,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13524:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5017,"indexExpression":{"id":5016,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13534:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13524:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13516:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5013,"name":"uint160","nodeType":"ElementaryTypeName","src":"13516:7:15","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13516:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"baseExpression":{"id":5021,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13548:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5025,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13558:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13562:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13558:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13548:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13540:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5019,"name":"uint160","nodeType":"ElementaryTypeName","src":"13540:7:15","typeDescriptions":{}}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"13516:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5049,"nodeType":"IfStatement","src":"13512:163:15","trueBody":{"id":5048,"nodeType":"Block","src":"13567:108:15","statements":[{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"baseExpression":{"id":5028,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13590:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5030,"indexExpression":{"id":5029,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13600:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13590:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5031,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13604:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5035,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5032,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13614:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13618:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13614:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13604:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5036,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13589:32:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"baseExpression":{"id":5037,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13625:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5041,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13635:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13639:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13635:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13625:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5042,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13643:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5044,"indexExpression":{"id":5043,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13653:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13643:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13624:32:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"13589:67:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5047,"nodeType":"ExpressionStatement","src":"13589:67:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13459:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5003,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13463:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13473:6:15","memberName":"length","nodeType":"MemberAccess","src":"13463:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13482:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13463:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13463:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13459:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"initializationExpression":{"assignments":[4999],"declarations":[{"constant":false,"id":4999,"mutability":"mutable","name":"j","nameLocation":"13452:1:15","nodeType":"VariableDeclaration","scope":5051,"src":"13447:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4998,"name":"uint","nodeType":"ElementaryTypeName","src":"13447:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5001,"initialValue":{"hexValue":"30","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13456:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13447:10:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13489:3:15","subExpression":{"id":5010,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"13489:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5012,"nodeType":"ExpressionStatement","src":"13489:3:15"},"nodeType":"ForStatement","src":"13442:247:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13397:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4990,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13401:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13411:6:15","memberName":"length","nodeType":"MemberAccess","src":"13401:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13401:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13397:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5053,"initializationExpression":{"assignments":[4986],"declarations":[{"constant":false,"id":4986,"mutability":"mutable","name":"i","nameLocation":"13390:1:15","nodeType":"VariableDeclaration","scope":5053,"src":"13385:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint","nodeType":"ElementaryTypeName","src":"13385:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4988,"initialValue":{"hexValue":"30","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13394:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13385:10:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13423:3:15","subExpression":{"id":4995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"13423:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4997,"nodeType":"ExpressionStatement","src":"13423:3:15"},"nodeType":"ForStatement","src":"13380:319:15"},{"expression":{"id":5054,"name":"sortedArr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"13715:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4943,"id":5055,"nodeType":"Return","src":"13708:16:15"}]},"id":5057,"implemented":true,"kind":"function","modifiers":[],"name":"sortAddresses","nameLocation":"13071:13:15","nodeType":"FunctionDefinition","parameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"arr","nameLocation":"13102:3:15","nodeType":"VariableDeclaration","scope":5057,"src":"13085:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4936,"name":"address","nodeType":"ElementaryTypeName","src":"13085:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4937,"nodeType":"ArrayTypeName","src":"13085:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13084:22:15"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5057,"src":"13130:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4940,"name":"address","nodeType":"ElementaryTypeName","src":"13130:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4941,"nodeType":"ArrayTypeName","src":"13130:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13129:18:15"},"scope":5135,"src":"13062:669:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5108,"nodeType":"Block","src":"13918:524:15","statements":[{"assignments":[5071],"declarations":[{"constant":false,"id":5071,"mutability":"mutable","name":"OPERATOR_AVS_REGISTRATION_TYPEHASH","nameLocation":"13936:34:15","nodeType":"VariableDeclaration","scope":5108,"src":"13928:42:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13928:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5075,"initialValue":{"arguments":[{"hexValue":"4f70657261746f72415653526567697374726174696f6e2861646472657373206f70657261746f722c61646472657373206176732c627974657333322073616c742c75696e743235362065787069727929","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13991:83:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_da2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd","typeString":"literal_string \"OperatorAVSRegistration(address operator,address avs,bytes32 salt,uint256 expiry)\""},"value":"OperatorAVSRegistration(address operator,address avs,bytes32 salt,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd","typeString":"literal_string \"OperatorAVSRegistration(address operator,address avs,bytes32 salt,uint256 expiry)\""}],"id":5072,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13981:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13981:94:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13928:147:15"},{"assignments":[5077],"declarations":[{"constant":false,"id":5077,"mutability":"mutable","name":"sep","nameLocation":"14130:3:15","nodeType":"VariableDeclaration","scope":5108,"src":"14122:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14122:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5081,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5078,"name":"AVS_DIRECTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"14136:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14150:15:15","memberName":"domainSeparator","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"14136:29:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14136:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14122:45:15"},{"assignments":[5083],"declarations":[{"constant":false,"id":5083,"mutability":"mutable","name":"structHash","nameLocation":"14185:10:15","nodeType":"VariableDeclaration","scope":5108,"src":"14177:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14177:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5094,"initialValue":{"arguments":[{"arguments":[{"id":5087,"name":"OPERATOR_AVS_REGISTRATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"14219:34:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5088,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"14255:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5089,"name":"avs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"14265:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5090,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"14270:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5091,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"14276:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5085,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14208:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14212:6:15","memberName":"encode","nodeType":"MemberAccess","src":"14208:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14208:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5084,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14198:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14198:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14177:107:15"},{"assignments":[5096],"declarations":[{"constant":false,"id":5096,"mutability":"mutable","name":"digestHash","nameLocation":"14339:10:15","nodeType":"VariableDeclaration","scope":5108,"src":"14331:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14331:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5105,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14379:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":5101,"name":"sep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"14391:3:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5102,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"14396:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5098,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14362:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14366:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"14362:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14362:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5097,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14352:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14352:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14331:77:15"},{"expression":{"id":5106,"name":"digestHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"14425:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5069,"id":5107,"nodeType":"Return","src":"14418:17:15"}]},"functionSelector":"a1060c88","id":5109,"implemented":true,"kind":"function","modifiers":[],"name":"calculateOperatorAVSRegistrationDigestHash","nameLocation":"13746:42:15","nodeType":"FunctionDefinition","parameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"operator","nameLocation":"13806:8:15","nodeType":"VariableDeclaration","scope":5109,"src":"13798:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5058,"name":"address","nodeType":"ElementaryTypeName","src":"13798:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"avs","nameLocation":"13832:3:15","nodeType":"VariableDeclaration","scope":5109,"src":"13824:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5060,"name":"address","nodeType":"ElementaryTypeName","src":"13824:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"salt","nameLocation":"13853:4:15","nodeType":"VariableDeclaration","scope":5109,"src":"13845:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"expiry","nameLocation":"13875:6:15","nodeType":"VariableDeclaration","scope":5109,"src":"13867:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"13867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13788:99:15"},"returnParameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5109,"src":"13909:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13909:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13908:9:15"},"scope":5135,"src":"13737:705:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5124,"nodeType":"Block","src":"14546:62:15","statements":[{"expression":{"arguments":[{"id":5120,"name":"message_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"14577:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5121,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"14591:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5118,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"14563:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2114_$","typeString":"type(library ECDSA)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14569:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"14563:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14563:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5117,"id":5123,"nodeType":"Return","src":"14556:45:15"}]},"functionSelector":"6d50275d","id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"ecdsa_check","nameLocation":"14457:11:15","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"message_hash","nameLocation":"14477:12:15","nodeType":"VariableDeclaration","scope":5125,"src":"14469:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14469:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"signature","nameLocation":"14504:9:15","nodeType":"VariableDeclaration","scope":5125,"src":"14491:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5112,"name":"bytes","nodeType":"ElementaryTypeName","src":"14491:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14468:47:15"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"14537:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"14537:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14536:9:15"},"scope":5135,"src":"14448:160:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":5133,"nodeType":"Block","src":"14704:3:15","statements":[]},"id":5134,"implemented":true,"kind":"function","modifiers":[{"id":5131,"kind":"modifierInvocation","modifierName":{"id":5130,"name":"onlyOwner","nameLocations":["14694:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"14694:9:15"},"nodeType":"ModifierInvocation","src":"14694:9:15"}],"name":"_authorizeUpgrade","nameLocation":"14623:17:15","nodeType":"FunctionDefinition","overrides":{"id":5129,"nodeType":"OverrideSpecifier","overrides":[],"src":"14685:8:15"},"parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"newImplementation","nameLocation":"14649:17:15","nodeType":"VariableDeclaration","scope":5134,"src":"14641:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5126,"name":"address","nodeType":"ElementaryTypeName","src":"14641:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14640:27:15"},"returnParameters":{"id":5132,"nodeType":"ParameterList","parameters":[],"src":"14704:0:15"},"scope":5135,"src":"14614:93:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":5136,"src":"1523:13186:15","usedErrors":[30,35,211,214,475,480,721,734,1130,1411,1416,1419,1777,1782,1787,5262,5265,5268,5271,5274,5277,5280,5283,5286,5289,5292,5295,5298,5301,5304,5307,5310,5313,5316,5319],"usedEvents":[41,219,700,5324,5337,5342,5347,5354,5361,5368,5371]}],"src":"36:14674:15"},"id":15},"contracts/VerisenseAVSManagerStorage.sol":{"ast":{"absolutePath":"contracts/VerisenseAVSManagerStorage.sol","exportedSymbols":{"EnumerableSet":[3842],"IVerisenseAVSManager":[5482],"VerisenseAVSManagerStorage":[5174]},"id":5175,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":5137,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"36:31:16"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":5139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5175,"sourceUnit":3843,"src":"69:88:16","symbolAliases":[{"foreign":{"id":5138,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"78:13:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IVerisenseAVSManager.sol","file":"./interfaces/IVerisenseAVSManager.sol","id":5141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5175,"sourceUnit":5483,"src":"158:75:16","symbolAliases":[{"foreign":{"id":5140,"name":"IVerisenseAVSManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"166:20:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5143,"name":"IVerisenseAVSManager","nameLocations":["401:20:16"],"nodeType":"IdentifierPath","referencedDeclaration":5482,"src":"401:20:16"},"id":5144,"nodeType":"InheritanceSpecifier","src":"401:20:16"}],"canonicalName":"VerisenseAVSManagerStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"234:117:16","text":" @title VerisenseAVSManagerStorage\n @author Puffer Finance\n @custom:security-contact security@puffer.fi"},"fullyImplemented":false,"id":5174,"linearizedBaseContracts":[5174,5482],"name":"VerisenseAVSManagerStorage","nameLocation":"371:26:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"VerisenseAVSManagerStorage.VerisenseAVSStorage","id":5162,"members":[{"constant":false,"id":5149,"mutability":"mutable","name":"operators","nameLocation":"520:9:16","nodeType":"VariableDeclaration","scope":5162,"src":"465:64:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData)"},"typeName":{"id":5148,"keyName":"operator","keyNameLocation":"481:8:16","keyType":{"id":5145,"name":"address","nodeType":"ElementaryTypeName","src":"473:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"465:54:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_OperatorData_$5223_storage_$","typeString":"mapping(address => struct IVerisenseAVSManager.OperatorData)"},"valueName":"operatorData","valueNameLocation":"506:12:16","valueType":{"id":5147,"nodeType":"UserDefinedTypeName","pathNode":{"id":5146,"name":"OperatorData","nameLocations":["493:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":5223,"src":"493:12:16"},"referencedDeclaration":5223,"src":"493:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorData_$5223_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorData"}}},"visibility":"internal"},{"constant":false,"id":5152,"mutability":"mutable","name":"operatorAddresses","nameLocation":"564:17:16","nodeType":"VariableDeclaration","scope":5162,"src":"539:42:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5151,"nodeType":"UserDefinedTypeName","pathNode":{"id":5150,"name":"EnumerableSet.AddressSet","nameLocations":["539:13:16","553:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"539:24:16"},"referencedDeclaration":3555,"src":"539:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5154,"mutability":"mutable","name":"deregistrationDelay","nameLocation":"598:19:16","nodeType":"VariableDeclaration","scope":5162,"src":"591:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5153,"name":"uint64","nodeType":"ElementaryTypeName","src":"591:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5156,"mutability":"mutable","name":"stakeFloor","nameLocation":"635:10:16","nodeType":"VariableDeclaration","scope":5162,"src":"627:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5155,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5158,"mutability":"mutable","name":"latestRewardedEra","nameLocation":"663:17:16","nodeType":"VariableDeclaration","scope":5162,"src":"655:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5161,"mutability":"mutable","name":"allowlistedRestakingStrategies","nameLocation":"715:30:16","nodeType":"VariableDeclaration","scope":5162,"src":"690:55:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5160,"nodeType":"UserDefinedTypeName","pathNode":{"id":5159,"name":"EnumerableSet.AddressSet","nameLocations":["690:13:16","704:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3555,"src":"690:24:16"},"referencedDeclaration":3555,"src":"690:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3555_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"name":"VerisenseAVSStorage","nameLocation":"435:19:16","nodeType":"StructDefinition","scope":5174,"src":"428:324:16","visibility":"public"},{"constant":true,"id":5165,"mutability":"constant","name":"_STORAGE_LOCATION","nameLocation":"782:17:16","nodeType":"VariableDeclaration","scope":5174,"src":"757:111:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"757:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861663939333039346338656161306162646666636336333862633864383766396339613530663934356462396239396162306236363831656162346634663030","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"802:66:16","typeDescriptions":{"typeIdentifier":"t_rational_79425411398038441992392820170605867212512622548449786824579387367559795789568_by_1","typeString":"int_const 7942...(69 digits omitted)...9568"},"value":"0xaf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f00"},"visibility":"private"},{"body":{"id":5172,"nodeType":"Block","src":"971:132:16","statements":[{"AST":{"nativeSrc":"1046:51:16","nodeType":"YulBlock","src":"1046:51:16","statements":[{"nativeSrc":"1060:27:16","nodeType":"YulAssignment","src":"1060:27:16","value":{"name":"_STORAGE_LOCATION","nativeSrc":"1070:17:16","nodeType":"YulIdentifier","src":"1070:17:16"},"variableNames":[{"name":"$.slot","nativeSrc":"1060:6:16","nodeType":"YulIdentifier","src":"1060:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5169,"isOffset":false,"isSlot":true,"src":"1060:6:16","suffix":"slot","valueSize":1},{"declaration":5165,"isOffset":false,"isSlot":false,"src":"1070:17:16","valueSize":1}],"id":5171,"nodeType":"InlineAssembly","src":"1037:60:16"}]},"id":5173,"implemented":true,"kind":"function","modifiers":[],"name":"_getVerisenseAVSManagerStorage","nameLocation":"884:30:16","nodeType":"FunctionDefinition","parameters":{"id":5166,"nodeType":"ParameterList","parameters":[],"src":"914:2:16"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"$","nameLocation":"968:1:16","nodeType":"VariableDeclaration","scope":5173,"src":"940:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"},"typeName":{"id":5168,"nodeType":"UserDefinedTypeName","pathNode":{"id":5167,"name":"VerisenseAVSStorage","nameLocations":["940:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":5162,"src":"940:19:16"},"referencedDeclaration":5162,"src":"940:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_VerisenseAVSStorage_$5162_storage_ptr","typeString":"struct VerisenseAVSManagerStorage.VerisenseAVSStorage"}},"visibility":"internal"}],"src":"939:31:16"},"scope":5174,"src":"875:228:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5175,"src":"353:753:16","usedErrors":[5262,5265,5268,5271,5274,5277,5280,5283,5286,5289,5292,5295,5298,5301,5304,5307,5310,5313,5316,5319],"usedEvents":[5324,5337,5342,5347,5354,5361,5368,5371]}],"src":"36:1071:16"},"id":16},"contracts/interfaces/IVerisenseAVSManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IVerisenseAVSManager.sol","exportedSymbols":{"IAVSDirectory":[5572],"IDelegationManager":[6097],"IEigenPod":[6430],"IEigenPodManager":[6613],"IRewardsCoordinator":[7242],"ISignatureUtils":[7258],"IVerisenseAVSManager":[5482]},"id":5483,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":5176,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"36:31:17"},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","id":5178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5483,"sourceUnit":6098,"src":"69:106:17","symbolAliases":[{"foreign":{"id":5177,"name":"IDelegationManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"78:18:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","file":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","id":5180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5483,"sourceUnit":7259,"src":"176:100:17","symbolAliases":[{"foreign":{"id":5179,"name":"ISignatureUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"185:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol","id":5182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5483,"sourceUnit":5573,"src":"277:96:17","symbolAliases":[{"foreign":{"id":5181,"name":"IAVSDirectory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"286:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol","id":5184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5483,"sourceUnit":7243,"src":"374:108:17","symbolAliases":[{"foreign":{"id":5183,"name":"IRewardsCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"383:19:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol","id":5186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5483,"sourceUnit":6431,"src":"483:88:17","symbolAliases":[{"foreign":{"id":5185,"name":"IEigenPod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"492:9:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","file":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","id":5188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5483,"sourceUnit":6614,"src":"572:102:17","symbolAliases":[{"foreign":{"id":5187,"name":"IEigenPodManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"581:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVerisenseAVSManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"676:258:17","text":" @title IVerisenseAVSManager\n @notice Interface for the VerisenseAVSManager contract, which manages operators and validators in the Verisense AVS.\n @dev This interface defines the main functions and events for operator and validator management."},"fullyImplemented":false,"id":5482,"linearizedBaseContracts":[5482],"name":"IVerisenseAVSManager","nameLocation":"945:20:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IVerisenseAVSManager.ValidatorData","documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"972:207:17","text":" @title ValidatorData\n @notice Struct to store information about a validator in the Verisense AVS system.\n @dev This struct is used to keep track of important validator details."},"id":5203,"members":[{"constant":false,"id":5193,"mutability":"mutable","name":"eigenPod","nameLocation":"1303:8:17","nodeType":"VariableDeclaration","scope":5203,"src":"1295:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5192,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5196,"mutability":"mutable","name":"index","nameLocation":"1382:5:17","nodeType":"VariableDeclaration","scope":5203,"src":"1375:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5195,"name":"uint64","nodeType":"ElementaryTypeName","src":"1375:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5199,"mutability":"mutable","name":"operator","nameLocation":"1478:8:17","nodeType":"VariableDeclaration","scope":5203,"src":"1470:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5198,"name":"address","nodeType":"ElementaryTypeName","src":"1470:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5202,"mutability":"mutable","name":"registeredUntil","nameLocation":"1581:15:17","nodeType":"VariableDeclaration","scope":5203,"src":"1574:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5201,"name":"uint64","nodeType":"ElementaryTypeName","src":"1574:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"ValidatorData","nameLocation":"1191:13:17","nodeType":"StructDefinition","scope":5482,"src":"1184:419:17","visibility":"public"},{"canonicalName":"IVerisenseAVSManager.OperatorValidData","id":5213,"members":[{"constant":false,"id":5205,"mutability":"mutable","name":"operator","nameLocation":"1652:8:17","nodeType":"VariableDeclaration","scope":5213,"src":"1644:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5204,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5207,"mutability":"mutable","name":"stake","nameLocation":"1678:5:17","nodeType":"VariableDeclaration","scope":5213,"src":"1670:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5209,"mutability":"mutable","name":"substratePubkey","nameLocation":"1701:15:17","nodeType":"VariableDeclaration","scope":5213,"src":"1693:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5212,"mutability":"mutable","name":"restakedStrategies","nameLocation":"1736:18:17","nodeType":"VariableDeclaration","scope":5213,"src":"1726:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5210,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5211,"nodeType":"ArrayTypeName","src":"1726:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"OperatorValidData","nameLocation":"1616:17:17","nodeType":"StructDefinition","scope":5482,"src":"1609:152:17","visibility":"public"},{"canonicalName":"IVerisenseAVSManager.OperatorData","documentation":{"id":5214,"nodeType":"StructuredDocumentation","src":"1767:205:17","text":" @title OperatorData\n @notice Struct to store information about an operator in the Verisense AVS system.\n @dev This struct is used to keep track of important operator details."},"id":5223,"members":[{"constant":false,"id":5217,"mutability":"mutable","name":"startDeregisterOperatorBlock","nameLocation":"2105:28:17","nodeType":"VariableDeclaration","scope":5223,"src":"2098:35:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5216,"name":"uint64","nodeType":"ElementaryTypeName","src":"2098:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5220,"mutability":"mutable","name":"substrate_pubkey","nameLocation":"2197:16:17","nodeType":"VariableDeclaration","scope":5223,"src":"2189:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2189:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5222,"mutability":"mutable","name":"isRegistered","nameLocation":"2229:12:17","nodeType":"VariableDeclaration","scope":5223,"src":"2224:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5221,"name":"bool","nodeType":"ElementaryTypeName","src":"2224:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"OperatorData","nameLocation":"1984:12:17","nodeType":"StructDefinition","scope":5482,"src":"1977:271:17","visibility":"public"},{"canonicalName":"IVerisenseAVSManager.ValidatorDataExtended","documentation":{"id":5224,"nodeType":"StructuredDocumentation","src":"2254:206:17","text":" @title ValidatorDataExtended\n @notice Struct to store comprehensive information about a validator.\n @dev This struct combines ValidatorData with additional status information."},"id":5251,"members":[{"constant":false,"id":5227,"mutability":"mutable","name":"operator","nameLocation":"2592:8:17","nodeType":"VariableDeclaration","scope":5251,"src":"2584:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5226,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"eigenPod","nameLocation":"2679:8:17","nodeType":"VariableDeclaration","scope":5251,"src":"2671:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5229,"name":"address","nodeType":"ElementaryTypeName","src":"2671:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5233,"mutability":"mutable","name":"validatorIndex","nameLocation":"2772:14:17","nodeType":"VariableDeclaration","scope":5251,"src":"2765:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5232,"name":"uint64","nodeType":"ElementaryTypeName","src":"2765:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5237,"mutability":"mutable","name":"status","nameLocation":"2896:6:17","nodeType":"VariableDeclaration","scope":5251,"src":"2869:33:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"},"typeName":{"id":5236,"nodeType":"UserDefinedTypeName","pathNode":{"id":5235,"name":"IEigenPod.VALIDATOR_STATUS","nameLocations":["2869:9:17","2879:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6149,"src":"2869:26:17"},"referencedDeclaration":6149,"src":"2869:26:17","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"}},"visibility":"internal"},{"constant":false,"id":5240,"mutability":"mutable","name":"delegateKey","nameLocation":"3007:11:17","nodeType":"VariableDeclaration","scope":5251,"src":"3001:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5239,"name":"bytes","nodeType":"ElementaryTypeName","src":"3001:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5244,"mutability":"mutable","name":"chainIds","nameLocation":"3110:8:17","nodeType":"VariableDeclaration","scope":5251,"src":"3100:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5243,"nodeType":"ArrayTypeName","src":"3100:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5247,"mutability":"mutable","name":"backedByStake","nameLocation":"3236:13:17","nodeType":"VariableDeclaration","scope":5251,"src":"3231:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5246,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5250,"mutability":"mutable","name":"registered","nameLocation":"3375:10:17","nodeType":"VariableDeclaration","scope":5251,"src":"3370:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5249,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ValidatorDataExtended","nameLocation":"2472:21:17","nodeType":"StructDefinition","scope":5482,"src":"2465:927:17","visibility":"public"},{"canonicalName":"IVerisenseAVSManager.OperatorDataExtended","documentation":{"id":5252,"nodeType":"StructuredDocumentation","src":"3398:227:17","text":" @title OperatorDataExtended\n @notice Struct to store extended information about an operator in the Verisense AVS system.\n @dev This struct combines OperatorData with additional status information."},"id":5259,"members":[{"constant":false,"id":5255,"mutability":"mutable","name":"startDeregisterOperatorBlock","nameLocation":"3767:28:17","nodeType":"VariableDeclaration","scope":5259,"src":"3759:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5254,"name":"uint128","nodeType":"ElementaryTypeName","src":"3759:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"isRegistered","nameLocation":"3873:12:17","nodeType":"VariableDeclaration","scope":5259,"src":"3868:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5257,"name":"bool","nodeType":"ElementaryTypeName","src":"3868:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"OperatorDataExtended","nameLocation":"3637:20:17","nodeType":"StructDefinition","scope":5482,"src":"3630:262:17","visibility":"public"},{"documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"3964:88:17","text":"@notice Thrown when an operator attempts to deregister while still having validators"},"errorSelector":"20050484","id":5262,"name":"OperatorHasValidators","nameLocation":"4063:21:17","nodeType":"ErrorDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[],"src":"4084:2:17"},"src":"4057:30:17"},{"documentation":{"id":5263,"nodeType":"StructuredDocumentation","src":"4093:71:17","text":"@notice Thrown when a non-operator attempts an operator-only action"},"errorSelector":"7c214f04","id":5265,"name":"NotOperator","nameLocation":"4175:11:17","nodeType":"ErrorDefinition","parameters":{"id":5264,"nodeType":"ParameterList","parameters":[],"src":"4186:2:17"},"src":"4169:20:17"},{"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"4195:70:17","text":"@notice Thrown when an EigenPod does not exist for a given address"},"errorSelector":"5dd90f17","id":5268,"name":"NoEigenPod","nameLocation":"4276:10:17","nodeType":"ErrorDefinition","parameters":{"id":5267,"nodeType":"ParameterList","parameters":[],"src":"4286:2:17"},"src":"4270:19:17"},{"documentation":{"id":5269,"nodeType":"StructuredDocumentation","src":"4295:95:17","text":"@notice Thrown when trying to finish deregistering an operator before the delay has elapsed"},"errorSelector":"207c1161","id":5271,"name":"DeregistrationDelayNotElapsed","nameLocation":"4401:29:17","nodeType":"ErrorDefinition","parameters":{"id":5270,"nodeType":"ParameterList","parameters":[],"src":"4430:2:17"},"src":"4395:38:17"},{"documentation":{"id":5272,"nodeType":"StructuredDocumentation","src":"4439:94:17","text":"@notice Thrown when attempting to start deregistering an operator that has already started"},"errorSelector":"75fbfac8","id":5274,"name":"DeregistrationAlreadyStarted","nameLocation":"4544:28:17","nodeType":"ErrorDefinition","parameters":{"id":5273,"nodeType":"ParameterList","parameters":[],"src":"4572:2:17"},"src":"4538:37:17"},{"documentation":{"id":5275,"nodeType":"StructuredDocumentation","src":"4581:86:17","text":"@notice Thrown when trying to finish deregistering an operator that hasn't started"},"errorSelector":"a9e6e7eb","id":5277,"name":"DeregistrationNotStarted","nameLocation":"4678:24:17","nodeType":"ErrorDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[],"src":"4702:2:17"},"src":"4672:33:17"},{"documentation":{"id":5278,"nodeType":"StructuredDocumentation","src":"4711:76:17","text":"@notice Thrown when an address is not delegated to the expected operator"},"errorSelector":"bb54d47b","id":5280,"name":"NotDelegatedToOperator","nameLocation":"4798:22:17","nodeType":"ErrorDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[],"src":"4820:2:17"},"src":"4792:31:17"},{"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"4829:62:17","text":"@notice Thrown when a validator is not in the active state"},"errorSelector":"a6ce15f6","id":5283,"name":"ValidatorNotActive","nameLocation":"4902:18:17","nodeType":"ErrorDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[],"src":"4920:2:17"},"src":"4896:27:17"},{"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"4929:100:17","text":"@notice Thrown when an action requires a registered operator, but the operator is not registered"},"errorSelector":"25ec6c1f","id":5286,"name":"OperatorNotRegistered","nameLocation":"5040:21:17","nodeType":"ErrorDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[],"src":"5061:2:17"},"src":"5034:30:17"},{"documentation":{"id":5287,"nodeType":"StructuredDocumentation","src":"5070:73:17","text":"@notice Thrown when a non-operator attempts to deregister a validator"},"errorSelector":"856901f0","id":5289,"name":"NotValidatorOperator","nameLocation":"5154:20:17","nodeType":"ErrorDefinition","parameters":{"id":5288,"nodeType":"ParameterList","parameters":[],"src":"5174:2:17"},"src":"5148:29:17"},{"documentation":{"id":5290,"nodeType":"StructuredDocumentation","src":"5183:85:17","text":"@notice Thrown when attempting to register a validator that is already registered"},"errorSelector":"9973f7d8","id":5292,"name":"ValidatorAlreadyRegistered","nameLocation":"5279:26:17","nodeType":"ErrorDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[],"src":"5305:2:17"},"src":"5273:35:17"},{"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"5314:61:17","text":"@notice Thrown when an operator's delegate key is not set"},"errorSelector":"ddcd95ef","id":5295,"name":"DelegateKeyNotSet","nameLocation":"5386:17:17","nodeType":"ErrorDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[],"src":"5403:2:17"},"src":"5380:26:17"},{"documentation":{"id":5296,"nodeType":"StructuredDocumentation","src":"5412:98:17","text":"@notice Thrown when trying to update an operator commitment before the change delay has passed"},"errorSelector":"6ba3a96b","id":5298,"name":"CommitmentChangeNotReady","nameLocation":"5521:24:17","nodeType":"ErrorDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[],"src":"5545:2:17"},"src":"5515:33:17"},{"documentation":{"id":5299,"nodeType":"StructuredDocumentation","src":"5554:89:17","text":"@notice Thrown when attempting to deregister a validator that is already deregistered"},"errorSelector":"32b7c2c6","id":5301,"name":"ValidatorAlreadyDeregistered","nameLocation":"5654:28:17","nodeType":"ErrorDefinition","parameters":{"id":5300,"nodeType":"ParameterList","parameters":[],"src":"5682:2:17"},"src":"5648:37:17"},{"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"5691:67:17","text":"@notice Thrown when a restaking strategy allowlist update fails"},"errorSelector":"79fdfc7d","id":5304,"name":"RestakingStrategyAllowlistUpdateFailed","nameLocation":"5769:38:17","nodeType":"ErrorDefinition","parameters":{"id":5303,"nodeType":"ParameterList","parameters":[],"src":"5807:2:17"},"src":"5763:47:17"},{"documentation":{"id":5305,"nodeType":"StructuredDocumentation","src":"5816:57:17","text":"@notice Thrown when an AVS operator status call fails"},"errorSelector":"7ac6bfd2","id":5307,"name":"AVSOperatorStatusCallFailed","nameLocation":"5884:27:17","nodeType":"ErrorDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[],"src":"5911:2:17"},"src":"5878:36:17"},{"documentation":{"id":5308,"nodeType":"StructuredDocumentation","src":"5920:70:17","text":"@notice Thrown when an invalid EigenPodManager address is provided"},"errorSelector":"b73aab8e","id":5310,"name":"InvalidEigenPodManagerAddress","nameLocation":"6001:29:17","nodeType":"ErrorDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[],"src":"6030:2:17"},"src":"5995:38:17"},{"documentation":{"id":5311,"nodeType":"StructuredDocumentation","src":"6039:77:17","text":"@notice Thrown when an invalid EigenDelegationManager address is provided"},"errorSelector":"4047bca6","id":5313,"name":"InvalidEigenDelegationManagerAddress","nameLocation":"6127:36:17","nodeType":"ErrorDefinition","parameters":{"id":5312,"nodeType":"ParameterList","parameters":[],"src":"6163:2:17"},"src":"6121:45:17"},{"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"6172:67:17","text":"@notice Thrown when an invalid AVSDirectory address is provided"},"errorSelector":"444b9b9e","id":5316,"name":"InvalidAVSDirectoryAddress","nameLocation":"6250:26:17","nodeType":"ErrorDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[],"src":"6276:2:17"},"src":"6244:35:17"},{"documentation":{"id":5317,"nodeType":"StructuredDocumentation","src":"6285:73:17","text":"@notice Thrown when an invalid RewardsCoordinator address is provided"},"errorSelector":"fa560abe","id":5319,"name":"InvalidRewardsCoordinatorAddress","nameLocation":"6369:32:17","nodeType":"ErrorDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[],"src":"6401:2:17"},"src":"6363:41:17"},{"anonymous":false,"documentation":{"id":5320,"nodeType":"StructuredDocumentation","src":"6410:153:17","text":" @notice Emitted when a new operator is registered in the Verisense AVS.\n @param operator The address of the registered operator."},"eventSelector":"4d0eb1f4bac8744fd2be119845e23b3befc88094b42bcda1204c65694a00f9e5","id":5324,"name":"OperatorRegistered","nameLocation":"6574:18:17","nodeType":"EventDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6609:8:17","nodeType":"VariableDeclaration","scope":5324,"src":"6593:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5321,"name":"address","nodeType":"ElementaryTypeName","src":"6593:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6592:26:17"},"src":"6568:51:17"},{"anonymous":false,"documentation":{"id":5325,"nodeType":"StructuredDocumentation","src":"6625:364:17","text":" @notice Emitted when a new validator is registered in the Verisense AVS .\n @param podOwner The address of the validator's EigenPod owner.\n @param delegateKey The delegate public key for the validator.\n @param blsPubKeyHash The BLS public key hash of the validator.\n @param validatorIndex The beacon chain validator index."},"eventSelector":"28e80e6d7e989497bd036ed5c5484b9b46fe0d438a8ea0918e31d3cc59817f65","id":5337,"name":"ValidatorRegistered","nameLocation":"7000:19:17","nodeType":"EventDefinition","parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"indexed":true,"mutability":"mutable","name":"podOwner","nameLocation":"7045:8:17","nodeType":"VariableDeclaration","scope":5337,"src":"7029:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5326,"name":"address","nodeType":"ElementaryTypeName","src":"7029:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5329,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"7079:8:17","nodeType":"VariableDeclaration","scope":5337,"src":"7063:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5328,"name":"address","nodeType":"ElementaryTypeName","src":"7063:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5331,"indexed":false,"mutability":"mutable","name":"delegateKey","nameLocation":"7103:11:17","nodeType":"VariableDeclaration","scope":5337,"src":"7097:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5330,"name":"bytes","nodeType":"ElementaryTypeName","src":"7097:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5333,"indexed":false,"mutability":"mutable","name":"blsPubKeyHash","nameLocation":"7132:13:17","nodeType":"VariableDeclaration","scope":5337,"src":"7124:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7124:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5335,"indexed":false,"mutability":"mutable","name":"validatorIndex","nameLocation":"7163:14:17","nodeType":"VariableDeclaration","scope":5337,"src":"7155:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7019:164:17"},"src":"6994:190:17"},{"anonymous":false,"documentation":{"id":5338,"nodeType":"StructuredDocumentation","src":"7190:162:17","text":" @notice Emitted when an operator starts the deregistration process.\n @param operator The address of the operator starting deregistration."},"eventSelector":"34e20e11f51d19d6e90f5aaea605cb369f34ad23805c51d2e77d05c8208c8585","id":5342,"name":"OperatorDeregisterStarted","nameLocation":"7363:25:17","nodeType":"EventDefinition","parameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"7405:8:17","nodeType":"VariableDeclaration","scope":5342,"src":"7389:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5339,"name":"address","nodeType":"ElementaryTypeName","src":"7389:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7388:26:17"},"src":"7357:58:17"},{"anonymous":false,"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"7421:156:17","text":" @notice Emitted when an operator is deregistered from the Verisense AVS.\n @param operator The address of the deregistered operator."},"eventSelector":"6dd4ca66565fb3dee8076c654634c6c4ad949022d809d0394308617d6791218d","id":5347,"name":"OperatorDeregistered","nameLocation":"7588:20:17","nodeType":"EventDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"7625:8:17","nodeType":"VariableDeclaration","scope":5347,"src":"7609:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5344,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7608:26:17"},"src":"7582:53:17"},{"anonymous":false,"documentation":{"id":5348,"nodeType":"StructuredDocumentation","src":"7641:249:17","text":" @notice Emitted when a validator is deregistered from the Verisense AVS.\n @param operator The address of the operator managing the validator.\n @param blsPubKeyHash The BLS public key hash of the deregistered validator."},"eventSelector":"9100d6f32d745f208c0e70d0679e591d81509157db766dc5eb3d092ac047f067","id":5354,"name":"ValidatorDeregistered","nameLocation":"7901:21:17","nodeType":"EventDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"7939:8:17","nodeType":"VariableDeclaration","scope":5354,"src":"7923:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5349,"name":"address","nodeType":"ElementaryTypeName","src":"7923:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5352,"indexed":false,"mutability":"mutable","name":"blsPubKeyHash","nameLocation":"7957:13:17","nodeType":"VariableDeclaration","scope":5354,"src":"7949:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7949:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7922:49:17"},"src":"7895:77:17"},{"anonymous":false,"documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"7979:199:17","text":" @notice Emitted when the deregistration delay is updated.\n @param oldDelay The previous deregistration delay value.\n @param newDelay The new deregistration delay value."},"eventSelector":"7d9c9ce14fd1f11f09bf0faca4d408d3bb5815ceb44368d65b408ebc4401165c","id":5361,"name":"DeregistrationDelaySet","nameLocation":"8189:22:17","nodeType":"EventDefinition","parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"indexed":false,"mutability":"mutable","name":"oldDelay","nameLocation":"8219:8:17","nodeType":"VariableDeclaration","scope":5361,"src":"8212:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5356,"name":"uint64","nodeType":"ElementaryTypeName","src":"8212:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5359,"indexed":false,"mutability":"mutable","name":"newDelay","nameLocation":"8236:8:17","nodeType":"VariableDeclaration","scope":5361,"src":"8229:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5358,"name":"uint64","nodeType":"ElementaryTypeName","src":"8229:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8211:34:17"},"src":"8183:63:17"},{"anonymous":false,"documentation":{"id":5362,"nodeType":"StructuredDocumentation","src":"8252:236:17","text":" @notice Emitted when a restaking strategy is added or removed from the allowlist.\n @param strategy The address of the strategy.\n @param allowed Whether the strategy is allowed (true) or disallowed (false)."},"eventSelector":"74d2e573146a4c9fbfd23124ce9007a97aebeb715219b83507ec3a05209486bd","id":5368,"name":"RestakingStrategyAllowlistUpdated","nameLocation":"8499:33:17","nodeType":"EventDefinition","parameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"8549:8:17","nodeType":"VariableDeclaration","scope":5368,"src":"8533:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5363,"name":"address","nodeType":"ElementaryTypeName","src":"8533:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5366,"indexed":false,"mutability":"mutable","name":"allowed","nameLocation":"8564:7:17","nodeType":"VariableDeclaration","scope":5368,"src":"8559:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5365,"name":"bool","nodeType":"ElementaryTypeName","src":"8559:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8532:40:17"},"src":"8493:80:17"},{"anonymous":false,"documentation":{"id":5369,"nodeType":"StructuredDocumentation","src":"8579:71:17","text":" @notice Emitted when operator rewards are submitted."},"eventSelector":"410f403ed28055ee05512c23d09c2b582fa6d23119e026c0cfc4aa615cab07bb","id":5371,"name":"OperatorRewardsSubmitted","nameLocation":"8661:24:17","nodeType":"EventDefinition","parameters":{"id":5370,"nodeType":"ParameterList","parameters":[],"src":"8685:2:17"},"src":"8655:33:17"},{"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"8694:126:17","text":" @notice Returns the EigenPodManager contract.\n @return IEigenPodManager The EigenPodManager contract."},"functionSelector":"0a732358","id":5378,"implemented":false,"kind":"function","modifiers":[],"name":"EIGEN_POD_MANAGER","nameLocation":"8834:17:17","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[],"src":"8851:2:17"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5378,"src":"8877:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"},"typeName":{"id":5375,"nodeType":"UserDefinedTypeName","pathNode":{"id":5374,"name":"IEigenPodManager","nameLocations":["8877:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6613,"src":"8877:16:17"},"referencedDeclaration":6613,"src":"8877:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"visibility":"internal"}],"src":"8876:18:17"},"scope":5482,"src":"8825:70:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"8901:142:17","text":" @notice Returns the EigenDelegationManager contract.\n @return IDelegationManager The EigenDelegationManager contract."},"functionSelector":"f2251b0f","id":5385,"implemented":false,"kind":"function","modifiers":[],"name":"EIGEN_DELEGATION_MANAGER","nameLocation":"9057:24:17","nodeType":"FunctionDefinition","parameters":{"id":5380,"nodeType":"ParameterList","parameters":[],"src":"9081:2:17"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5385,"src":"9107:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"},"typeName":{"id":5382,"nodeType":"UserDefinedTypeName","pathNode":{"id":5381,"name":"IDelegationManager","nameLocations":["9107:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":6097,"src":"9107:18:17"},"referencedDeclaration":6097,"src":"9107:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"visibility":"internal"}],"src":"9106:20:17"},"scope":5482,"src":"9048:79:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"9133:117:17","text":" @notice Returns the AVSDirectory contract.\n @return IAVSDirectory The AVSDirectory contract."},"functionSelector":"ad656c56","id":5392,"implemented":false,"kind":"function","modifiers":[],"name":"AVS_DIRECTORY","nameLocation":"9264:13:17","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[],"src":"9277:2:17"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"9303:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"},"typeName":{"id":5389,"nodeType":"UserDefinedTypeName","pathNode":{"id":5388,"name":"IAVSDirectory","nameLocations":["9303:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"9303:13:17"},"referencedDeclaration":5572,"src":"9303:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IAVSDirectory_$5572","typeString":"contract IAVSDirectory"}},"visibility":"internal"}],"src":"9302:15:17"},"scope":5482,"src":"9255:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5393,"nodeType":"StructuredDocumentation","src":"9324:166:17","text":" @notice Registers a new operator in the Verisense AVS.\n @param operatorSignature The signature and associated data for operator registration."},"functionSelector":"ca1e1d67","id":5401,"implemented":false,"kind":"function","modifiers":[],"name":"registerOperator","nameLocation":"9504:16:17","nodeType":"FunctionDefinition","parameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"operatorSignature","nameLocation":"9571:17:17","nodeType":"VariableDeclaration","scope":5401,"src":"9521:67:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_memory_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry"},"typeName":{"id":5395,"nodeType":"UserDefinedTypeName","pathNode":{"id":5394,"name":"ISignatureUtils.SignatureWithSaltAndExpiry","nameLocations":["9521:15:17","9537:26:17"],"nodeType":"IdentifierPath","referencedDeclaration":7257,"src":"9521:42:17"},"referencedDeclaration":7257,"src":"9521:42:17","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_storage_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry"}},"visibility":"internal"},{"constant":false,"id":5398,"mutability":"mutable","name":"substrate_pubkey","nameLocation":"9598:16:17","nodeType":"VariableDeclaration","scope":5401,"src":"9590:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9590:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9520:95:17"},"returnParameters":{"id":5400,"nodeType":"ParameterList","parameters":[],"src":"9624:0:17"},"scope":5482,"src":"9495:130:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"9631:98:17","text":" @notice Starts the process of deregistering an operator from the Verisense AVS."},"functionSelector":"389517e4","id":5405,"implemented":false,"kind":"function","modifiers":[],"name":"startDeregisterOperator","nameLocation":"9743:23:17","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[],"src":"9766:2:17"},"returnParameters":{"id":5404,"nodeType":"ParameterList","parameters":[],"src":"9777:0:17"},"scope":5482,"src":"9734:44:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"9784:100:17","text":" @notice Finishes the process of deregistering an operator from the Verisense AVS."},"functionSelector":"e3672163","id":5409,"implemented":false,"kind":"function","modifiers":[],"name":"finishDeregisterOperator","nameLocation":"9898:24:17","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[],"src":"9922:2:17"},"returnParameters":{"id":5408,"nodeType":"ParameterList","parameters":[],"src":"9933:0:17"},"scope":5482,"src":"9889:45:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"9940:122:17","text":" @notice Updates the metadata URI for the AVS\n @param _metadataURI is the metadata URI for the AVS"},"functionSelector":"a98fb355","id":5415,"implemented":false,"kind":"function","modifiers":[],"name":"updateAVSMetadataURI","nameLocation":"10076:20:17","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"_metadataURI","nameLocation":"10111:12:17","nodeType":"VariableDeclaration","scope":5415,"src":"10097:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5411,"name":"string","nodeType":"ElementaryTypeName","src":"10097:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10096:28:17"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[],"src":"10133:0:17"},"scope":5482,"src":"10067:67:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"10140:171:17","text":" @notice Sets a new deregistration delay for operators.\n @param newDelay The new deregistration delay in seconds.\n @dev Restricted to the DAO"},"functionSelector":"84a3f19b","id":5421,"implemented":false,"kind":"function","modifiers":[],"name":"setDeregistrationDelay","nameLocation":"10325:22:17","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"newDelay","nameLocation":"10355:8:17","nodeType":"VariableDeclaration","scope":5421,"src":"10348:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5417,"name":"uint64","nodeType":"ElementaryTypeName","src":"10348:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10347:17:17"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[],"src":"10373:0:17"},"scope":5482,"src":"10316:58:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"10380:294:17","text":" @notice Add or remove a strategy address from the allowlist of restaking strategies\n @param strategy The address of the strategy to add or remove\n @param allowed Whether the strategy should be allowed (true) or disallowed (false)\n @dev Restricted to the DAO"},"functionSelector":"43adc491","id":5429,"implemented":false,"kind":"function","modifiers":[],"name":"setAllowlistRestakingStrategy","nameLocation":"10688:29:17","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"strategy","nameLocation":"10726:8:17","nodeType":"VariableDeclaration","scope":5429,"src":"10718:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5423,"name":"address","nodeType":"ElementaryTypeName","src":"10718:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5426,"mutability":"mutable","name":"allowed","nameLocation":"10741:7:17","nodeType":"VariableDeclaration","scope":5429,"src":"10736:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5425,"name":"bool","nodeType":"ElementaryTypeName","src":"10736:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10717:32:17"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[],"src":"10758:0:17"},"scope":5482,"src":"10679:80:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5430,"nodeType":"StructuredDocumentation","src":"10765:213:17","text":" @notice Retrieves information about a specific operator.\n @param operator The address of the operator.\n @return OperatorDataExtended struct containing information about the operator."},"functionSelector":"5865c60c","id":5438,"implemented":false,"kind":"function","modifiers":[],"name":"getOperator","nameLocation":"10992:11:17","nodeType":"FunctionDefinition","parameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"operator","nameLocation":"11012:8:17","nodeType":"VariableDeclaration","scope":5438,"src":"11004:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5431,"name":"address","nodeType":"ElementaryTypeName","src":"11004:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11003:18:17"},"returnParameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5438,"src":"11045:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_memory_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"},"typeName":{"id":5435,"nodeType":"UserDefinedTypeName","pathNode":{"id":5434,"name":"OperatorDataExtended","nameLocations":["11045:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":5259,"src":"11045:20:17"},"referencedDeclaration":5259,"src":"11045:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDataExtended_$5259_storage_ptr","typeString":"struct IVerisenseAVSManager.OperatorDataExtended"}},"visibility":"internal"}],"src":"11044:29:17"},"scope":5482,"src":"10983:91:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"11080:144:17","text":" @notice Retrieves the current deregistration delay for operators.\n @return The current deregistration delay in seconds."},"functionSelector":"8495feab","id":5444,"implemented":false,"kind":"function","modifiers":[],"name":"getDeregistrationDelay","nameLocation":"11238:22:17","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[],"src":"11260:2:17"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5444,"src":"11286:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5441,"name":"uint64","nodeType":"ElementaryTypeName","src":"11286:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11285:8:17"},"scope":5482,"src":"11229:65:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5445,"nodeType":"StructuredDocumentation","src":"11300:473:17","text":" @notice Returns the list of strategies that the operator has potentially restaked on the AVS\n @param operator The address of the operator to get restaked strategies for\n @dev This function is intended to be called off-chain\n @dev No guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness\n      of each element in the returned array. The off-chain service should do that validation separately"},"functionSelector":"33cfb7b7","id":5453,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorRestakedStrategies","nameLocation":"11787:29:17","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"operator","nameLocation":"11825:8:17","nodeType":"VariableDeclaration","scope":5453,"src":"11817:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5446,"name":"address","nodeType":"ElementaryTypeName","src":"11817:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11816:18:17"},"returnParameters":{"id":5452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5453,"src":"11858:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5449,"name":"address","nodeType":"ElementaryTypeName","src":"11858:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5450,"nodeType":"ArrayTypeName","src":"11858:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11857:18:17"},"scope":5482,"src":"11778:98:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5454,"nodeType":"StructuredDocumentation","src":"11882:311:17","text":" @notice Returns the list of strategies that the AVS supports for restaking\n @dev This function is intended to be called off-chain\n @dev No guarantee is made on uniqueness of each element in the returned array.\n      The off-chain service should do that validation separately"},"functionSelector":"e481af9d","id":5460,"implemented":false,"kind":"function","modifiers":[],"name":"getRestakeableStrategies","nameLocation":"12207:24:17","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[],"src":"12231:2:17"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5460,"src":"12257:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5456,"name":"address","nodeType":"ElementaryTypeName","src":"12257:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5457,"nodeType":"ArrayTypeName","src":"12257:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12256:18:17"},"scope":5482,"src":"12198:77:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"12281:181:17","text":" @notice Submits EigenLayer rewards for operators.\n @param eraIndex The era index of submissions.\n @param submissions The array of rewards submissions."},"functionSelector":"9375e713","id":5470,"implemented":false,"kind":"function","modifiers":[],"name":"submitOperatorRewards","nameLocation":"12476:21:17","nodeType":"FunctionDefinition","parameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"eraIndex","nameLocation":"12506:8:17","nodeType":"VariableDeclaration","scope":5470,"src":"12498:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"submissions","nameLocation":"12581:11:17","nodeType":"VariableDeclaration","scope":5470,"src":"12516:76:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]"},"typeName":{"baseType":{"id":5465,"nodeType":"UserDefinedTypeName","pathNode":{"id":5464,"name":"IRewardsCoordinator.OperatorDirectedRewardsSubmission","nameLocations":["12516:19:17","12536:33:17"],"nodeType":"IdentifierPath","referencedDeclaration":6775,"src":"12516:53:17"},"referencedDeclaration":6775,"src":"12516:53:17","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"}},"id":5466,"nodeType":"ArrayTypeName","src":"12516:55:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]"}},"visibility":"internal"}],"src":"12497:96:17"},"returnParameters":{"id":5469,"nodeType":"ParameterList","parameters":[],"src":"12610:0:17"},"scope":5482,"src":"12467:144:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1ed6e115","id":5475,"implemented":false,"kind":"function","modifiers":[],"name":"latestRewardedEra","nameLocation":"12626:17:17","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[],"src":"12643:2:17"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5475,"src":"12669:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"12669:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12668:9:17"},"scope":5482,"src":"12617:61:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"12684:133:17","text":" @notice Sets the claimer for the AVS to get excess rewards back.\n @param claimer The address of the claimer."},"functionSelector":"a0169ddd","id":5481,"implemented":false,"kind":"function","modifiers":[],"name":"setClaimerFor","nameLocation":"12831:13:17","nodeType":"FunctionDefinition","parameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"claimer","nameLocation":"12853:7:17","nodeType":"VariableDeclaration","scope":5481,"src":"12845:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5477,"name":"address","nodeType":"ElementaryTypeName","src":"12845:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12844:17:17"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[],"src":"12870:0:17"},"scope":5482,"src":"12822:49:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5483,"src":"935:11938:17","usedErrors":[5262,5265,5268,5271,5274,5277,5280,5283,5286,5289,5292,5295,5298,5301,5304,5307,5310,5313,5316,5319],"usedEvents":[5324,5337,5342,5347,5354,5361,5368,5371]}],"src":"36:12838:17"},"id":17},"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol","exportedSymbols":{"IAVSDirectory":[5572],"ISignatureUtils":[7258]},"id":5573,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":5484,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:18"},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","file":"./ISignatureUtils.sol","id":5485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5573,"sourceUnit":7259,"src":"63:31:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5486,"name":"ISignatureUtils","nameLocations":["123:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":7258,"src":"123:15:18"},"id":5487,"nodeType":"InheritanceSpecifier","src":"123:15:18"}],"canonicalName":"IAVSDirectory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5572,"linearizedBaseContracts":[5572,7258],"name":"IAVSDirectory","nameLocation":"106:13:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IAVSDirectory.OperatorAVSRegistrationStatus","documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"145:82:18","text":"@notice Enum representing the status of an operator's registration with an AVS"},"id":5491,"members":[{"id":5489,"name":"UNREGISTERED","nameLocation":"277:12:18","nodeType":"EnumValue","src":"277:12:18"},{"id":5490,"name":"REGISTERED","nameLocation":"333:10:18","nodeType":"EnumValue","src":"333:10:18"}],"name":"OperatorAVSRegistrationStatus","nameLocation":"237:29:18","nodeType":"EnumDefinition","src":"232:148:18"},{"anonymous":false,"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"386:238:18","text":" @notice Emitted when @param avs indicates that they are updating their MetadataURI string\n @dev Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing"},"eventSelector":"a89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c943713","id":5498,"name":"AVSMetadataURIUpdated","nameLocation":"635:21:18","nodeType":"EventDefinition","parameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"indexed":true,"mutability":"mutable","name":"avs","nameLocation":"673:3:18","nodeType":"VariableDeclaration","scope":5498,"src":"657:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5496,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"685:11:18","nodeType":"VariableDeclaration","scope":5498,"src":"678:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5495,"name":"string","nodeType":"ElementaryTypeName","src":"678:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:41:18"},"src":"629:69:18"},{"anonymous":false,"documentation":{"id":5499,"nodeType":"StructuredDocumentation","src":"704:80:18","text":"@notice Emitted when an operator's registration status for an AVS is updated"},"eventSelector":"f0952b1c65271d819d39983d2abb044b9cace59bcc4d4dd389f586ebdcb15b41","id":5508,"name":"OperatorAVSRegistrationStatusUpdated","nameLocation":"795:36:18","nodeType":"EventDefinition","parameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"857:8:18","nodeType":"VariableDeclaration","scope":5508,"src":"841:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5500,"name":"address","nodeType":"ElementaryTypeName","src":"841:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5503,"indexed":true,"mutability":"mutable","name":"avs","nameLocation":"883:3:18","nodeType":"VariableDeclaration","scope":5508,"src":"867:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5502,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5506,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"918:6:18","nodeType":"VariableDeclaration","scope":5508,"src":"888:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"},"typeName":{"id":5505,"nodeType":"UserDefinedTypeName","pathNode":{"id":5504,"name":"OperatorAVSRegistrationStatus","nameLocations":["888:29:18"],"nodeType":"IdentifierPath","referencedDeclaration":5491,"src":"888:29:18"},"referencedDeclaration":5491,"src":"888:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_OperatorAVSRegistrationStatus_$5491","typeString":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}},"visibility":"internal"}],"src":"831:99:18"},"src":"789:142:18"},{"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"937:266:18","text":" @notice Called by the AVS's service manager contract to register an operator with the avs.\n @param operator The address of the operator to register.\n @param operatorSignature The signature, salt, and expiry of the operator's signature."},"functionSelector":"9926ee7d","id":5517,"implemented":false,"kind":"function","modifiers":[],"name":"registerOperatorToAVS","nameLocation":"1217:21:18","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"operator","nameLocation":"1256:8:18","nodeType":"VariableDeclaration","scope":5517,"src":"1248:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5510,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5514,"mutability":"mutable","name":"operatorSignature","nameLocation":"1324:17:18","nodeType":"VariableDeclaration","scope":5517,"src":"1274:67:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_memory_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry"},"typeName":{"id":5513,"nodeType":"UserDefinedTypeName","pathNode":{"id":5512,"name":"ISignatureUtils.SignatureWithSaltAndExpiry","nameLocations":["1274:15:18","1290:26:18"],"nodeType":"IdentifierPath","referencedDeclaration":7257,"src":"1274:42:18"},"referencedDeclaration":7257,"src":"1274:42:18","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithSaltAndExpiry_$7257_storage_ptr","typeString":"struct ISignatureUtils.SignatureWithSaltAndExpiry"}},"visibility":"internal"}],"src":"1238:109:18"},"returnParameters":{"id":5516,"nodeType":"ParameterList","parameters":[],"src":"1356:0:18"},"scope":5572,"src":"1208:149:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"1363:149:18","text":" @notice Called by an avs to deregister an operator with the avs.\n @param operator The address of the operator to deregister."},"functionSelector":"a364f4da","id":5523,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterOperatorFromAVS","nameLocation":"1526:25:18","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"operator","nameLocation":"1560:8:18","nodeType":"VariableDeclaration","scope":5523,"src":"1552:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5519,"name":"address","nodeType":"ElementaryTypeName","src":"1552:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1551:18:18"},"returnParameters":{"id":5522,"nodeType":"ParameterList","parameters":[],"src":"1578:0:18"},"scope":5572,"src":"1517:62:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5524,"nodeType":"StructuredDocumentation","src":"1585:310:18","text":" @notice Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\n @param metadataURI The URI for metadata associated with an AVS\n @dev Note that the `metadataURI` is *never stored * and is only emitted in the `AVSMetadataURIUpdated` event"},"functionSelector":"a98fb355","id":5529,"implemented":false,"kind":"function","modifiers":[],"name":"updateAVSMetadataURI","nameLocation":"1909:20:18","nodeType":"FunctionDefinition","parameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"metadataURI","nameLocation":"1946:11:18","nodeType":"VariableDeclaration","scope":5529,"src":"1930:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5525,"name":"string","nodeType":"ElementaryTypeName","src":"1930:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1929:29:18"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[],"src":"1967:0:18"},"scope":5572,"src":"1900:68:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5530,"nodeType":"StructuredDocumentation","src":"1974:164:18","text":" @notice Returns whether or not the salt has already been used by the operator.\n @dev Salts is used in the `registerOperatorToAVS` function."},"functionSelector":"374823b5","id":5539,"implemented":false,"kind":"function","modifiers":[],"name":"operatorSaltIsSpent","nameLocation":"2152:19:18","nodeType":"FunctionDefinition","parameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"operator","nameLocation":"2180:8:18","nodeType":"VariableDeclaration","scope":5539,"src":"2172:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5531,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5534,"mutability":"mutable","name":"salt","nameLocation":"2198:4:18","nodeType":"VariableDeclaration","scope":5539,"src":"2190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2190:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2171:32:18"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"2227:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5536,"name":"bool","nodeType":"ElementaryTypeName","src":"2227:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2226:6:18"},"scope":5572,"src":"2143:90:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"2239:445:18","text":" @notice Calculates the digest hash to be signed by an operator to register with an AVS\n @param operator The account registering as an operator\n @param avs The address of the service manager contract for the AVS that the operator is registering to\n @param salt A unique and single use value associated with the approver signature.\n @param expiry Time after which the approver's signature becomes invalid"},"functionSelector":"a1060c88","id":5553,"implemented":false,"kind":"function","modifiers":[],"name":"calculateOperatorAVSRegistrationDigestHash","nameLocation":"2698:42:18","nodeType":"FunctionDefinition","parameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"operator","nameLocation":"2758:8:18","nodeType":"VariableDeclaration","scope":5553,"src":"2750:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5541,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5544,"mutability":"mutable","name":"avs","nameLocation":"2784:3:18","nodeType":"VariableDeclaration","scope":5553,"src":"2776:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5543,"name":"address","nodeType":"ElementaryTypeName","src":"2776:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5546,"mutability":"mutable","name":"salt","nameLocation":"2805:4:18","nodeType":"VariableDeclaration","scope":5553,"src":"2797:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2797:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5548,"mutability":"mutable","name":"expiry","nameLocation":"2827:6:18","nodeType":"VariableDeclaration","scope":5553,"src":"2819:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2740:99:18"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5553,"src":"2863:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2863:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2862:9:18"},"scope":5572,"src":"2689:183:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5554,"nodeType":"StructuredDocumentation","src":"2878:81:18","text":"@notice The EIP-712 typehash for the Registration struct used by the contract"},"functionSelector":"d79aceab","id":5559,"implemented":false,"kind":"function","modifiers":[],"name":"OPERATOR_AVS_REGISTRATION_TYPEHASH","nameLocation":"2973:34:18","nodeType":"FunctionDefinition","parameters":{"id":5555,"nodeType":"ParameterList","parameters":[],"src":"3007:2:18"},"returnParameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5559,"src":"3033:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:9:18"},"scope":5572,"src":"2964:78:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5560,"nodeType":"StructuredDocumentation","src":"3048:198:18","text":" @notice Called by an operator to cancel a salt that has been used to register with an AVS.\n @param salt A unique and single use value associated with the approver signature."},"functionSelector":"ec76f442","id":5565,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSalt","nameLocation":"3260:10:18","nodeType":"FunctionDefinition","parameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"salt","nameLocation":"3279:4:18","nodeType":"VariableDeclaration","scope":5565,"src":"3271:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3271:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3270:14:18"},"returnParameters":{"id":5564,"nodeType":"ParameterList","parameters":[],"src":"3293:0:18"},"scope":5572,"src":"3251:43:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"3300:384:18","text":" @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID.\n @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n for more detailed information please read EIP-712."},"functionSelector":"f698da25","id":5571,"implemented":false,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"3698:15:18","nodeType":"FunctionDefinition","parameters":{"id":5567,"nodeType":"ParameterList","parameters":[],"src":"3713:2:18"},"returnParameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5571,"src":"3739:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3738:9:18"},"scope":5572,"src":"3689:59:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5573,"src":"96:3654:18","usedErrors":[],"usedEvents":[5498,5508]}],"src":"37:3714:18"},"id":18},"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","exportedSymbols":{"IDelegationManager":[6097],"IERC20":[1077],"ISignatureUtils":[7258],"IStrategy":[7612]},"id":6098,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":5574,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:19"},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","file":"./IStrategy.sol","id":5575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6098,"sourceUnit":7613,"src":"63:25:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","file":"./ISignatureUtils.sol","id":5576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6098,"sourceUnit":7259,"src":"89:31:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5578,"name":"ISignatureUtils","nameLocations":["870:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":7258,"src":"870:15:19"},"id":5579,"nodeType":"InheritanceSpecifier","src":"870:15:19"}],"canonicalName":"IDelegationManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":5577,"nodeType":"StructuredDocumentation","src":"122:715:19","text":" @title DelegationManager\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice  This is the contract for delegation in EigenLayer. The main functionalities of this contract are\n - enabling anyone to register as an operator in EigenLayer\n - allowing operators to specify parameters related to stakers who delegate to them\n - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time)\n - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)"},"fullyImplemented":false,"id":6097,"linearizedBaseContracts":[6097,7258],"name":"IDelegationManager","nameLocation":"848:18:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDelegationManager.OperatorDetails","id":5589,"members":[{"constant":false,"id":5582,"mutability":"mutable","name":"__deprecated_earningsReceiver","nameLocation":"1154:29:19","nodeType":"VariableDeclaration","scope":5589,"src":"1146:37:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5581,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5585,"mutability":"mutable","name":"delegationApprover","nameLocation":"1905:18:19","nodeType":"VariableDeclaration","scope":5589,"src":"1897:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5584,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5588,"mutability":"mutable","name":"stakerOptOutWindowBlocks","nameLocation":"2540:24:19","nodeType":"VariableDeclaration","scope":5589,"src":"2533:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5587,"name":"uint32","nodeType":"ElementaryTypeName","src":"2533:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"OperatorDetails","nameLocation":"1009:15:19","nodeType":"StructDefinition","scope":6097,"src":"1002:1569:19","visibility":"public"},{"canonicalName":"IDelegationManager.StakerDelegation","documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"2577:339:19","text":" @notice Abstract struct used in calculating an EIP712 signature for a staker to approve that they (the staker themselves) delegate to a specific operator.\n @dev Used in computing the `STAKER_DELEGATION_TYPEHASH` and as a reference in the computation of the stakerDigestHash in the `delegateToBySignature` function."},"id":5599,"members":[{"constant":false,"id":5592,"mutability":"mutable","name":"staker","nameLocation":"3003:6:19","nodeType":"VariableDeclaration","scope":5599,"src":"2995:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5591,"name":"address","nodeType":"ElementaryTypeName","src":"2995:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5594,"mutability":"mutable","name":"operator","nameLocation":"3070:8:19","nodeType":"VariableDeclaration","scope":5599,"src":"3062:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5593,"name":"address","nodeType":"ElementaryTypeName","src":"3062:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5596,"mutability":"mutable","name":"nonce","nameLocation":"3126:5:19","nodeType":"VariableDeclaration","scope":5599,"src":"3118:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5598,"mutability":"mutable","name":"expiry","nameLocation":"3208:6:19","nodeType":"VariableDeclaration","scope":5599,"src":"3200:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"3200:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakerDelegation","nameLocation":"2928:16:19","nodeType":"StructDefinition","scope":6097,"src":"2921:300:19","visibility":"public"},{"canonicalName":"IDelegationManager.DelegationApproval","documentation":{"id":5600,"nodeType":"StructuredDocumentation","src":"3227:337:19","text":" @notice Abstract struct used in calculating an EIP712 signature for an operator's delegationApprover to approve that a specific staker delegate to the operator.\n @dev Used in computing the `DELEGATION_APPROVAL_TYPEHASH` and as a reference in the computation of the approverDigestHash in the `_delegate` function."},"id":5609,"members":[{"constant":false,"id":5602,"mutability":"mutable","name":"staker","nameLocation":"3653:6:19","nodeType":"VariableDeclaration","scope":5609,"src":"3645:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5601,"name":"address","nodeType":"ElementaryTypeName","src":"3645:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5604,"mutability":"mutable","name":"operator","nameLocation":"3720:8:19","nodeType":"VariableDeclaration","scope":5609,"src":"3712:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5603,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5606,"mutability":"mutable","name":"salt","nameLocation":"3786:4:19","nodeType":"VariableDeclaration","scope":5609,"src":"3778:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3778:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5608,"mutability":"mutable","name":"expiry","nameLocation":"3867:6:19","nodeType":"VariableDeclaration","scope":5609,"src":"3859:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5607,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DelegationApproval","nameLocation":"3576:18:19","nodeType":"StructDefinition","scope":6097,"src":"3569:311:19","visibility":"public"},{"canonicalName":"IDelegationManager.Withdrawal","documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"3886:438:19","text":" Struct type used to specify an existing queued withdrawal. Rather than storing the entire struct, only a hash is stored.\n In functions that operate on existing queued withdrawals -- e.g. completeQueuedWithdrawal`, the data is resubmitted and the hash of the submitted\n data is computed by `calculateWithdrawalRoot` and checked against the stored hash in order to confirm the integrity of the submitted data."},"id":5628,"members":[{"constant":false,"id":5612,"mutability":"mutable","name":"staker","nameLocation":"4419:6:19","nodeType":"VariableDeclaration","scope":5628,"src":"4411:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5611,"name":"address","nodeType":"ElementaryTypeName","src":"4411:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5614,"mutability":"mutable","name":"delegatedTo","nameLocation":"4543:11:19","nodeType":"VariableDeclaration","scope":5628,"src":"4535:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5613,"name":"address","nodeType":"ElementaryTypeName","src":"4535:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5616,"mutability":"mutable","name":"withdrawer","nameLocation":"4680:10:19","nodeType":"VariableDeclaration","scope":5628,"src":"4672:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5615,"name":"address","nodeType":"ElementaryTypeName","src":"4672:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5618,"mutability":"mutable","name":"nonce","nameLocation":"4799:5:19","nodeType":"VariableDeclaration","scope":5628,"src":"4791:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5617,"name":"uint256","nodeType":"ElementaryTypeName","src":"4791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5620,"mutability":"mutable","name":"startBlock","nameLocation":"4877:10:19","nodeType":"VariableDeclaration","scope":5628,"src":"4870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5619,"name":"uint32","nodeType":"ElementaryTypeName","src":"4870:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"strategies","nameLocation":"4969:10:19","nodeType":"VariableDeclaration","scope":5628,"src":"4957:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":5622,"nodeType":"UserDefinedTypeName","pathNode":{"id":5621,"name":"IStrategy","nameLocations":["4957:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"4957:9:19"},"referencedDeclaration":7612,"src":"4957:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":5623,"nodeType":"ArrayTypeName","src":"4957:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"},{"constant":false,"id":5627,"mutability":"mutable","name":"shares","nameLocation":"5091:6:19","nodeType":"VariableDeclaration","scope":5628,"src":"5081:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5626,"nodeType":"ArrayTypeName","src":"5081:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Withdrawal","nameLocation":"4336:10:19","nodeType":"StructDefinition","scope":6097,"src":"4329:775:19","visibility":"public"},{"canonicalName":"IDelegationManager.QueuedWithdrawalParams","id":5638,"members":[{"constant":false,"id":5632,"mutability":"mutable","name":"strategies","nameLocation":"5228:10:19","nodeType":"VariableDeclaration","scope":5638,"src":"5216:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":5630,"nodeType":"UserDefinedTypeName","pathNode":{"id":5629,"name":"IStrategy","nameLocations":["5216:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"5216:9:19"},"referencedDeclaration":7612,"src":"5216:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":5631,"nodeType":"ArrayTypeName","src":"5216:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"},{"constant":false,"id":5635,"mutability":"mutable","name":"shares","nameLocation":"5350:6:19","nodeType":"VariableDeclaration","scope":5638,"src":"5340:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5633,"name":"uint256","nodeType":"ElementaryTypeName","src":"5340:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ArrayTypeName","src":"5340:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5637,"mutability":"mutable","name":"withdrawer","nameLocation":"5415:10:19","nodeType":"VariableDeclaration","scope":5638,"src":"5407:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5636,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"QueuedWithdrawalParams","nameLocation":"5117:22:19","nodeType":"StructDefinition","scope":6097,"src":"5110:322:19","visibility":"public"},{"anonymous":false,"eventSelector":"8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e2","id":5645,"name":"OperatorRegistered","nameLocation":"5547:18:19","nodeType":"EventDefinition","parameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"5582:8:19","nodeType":"VariableDeclaration","scope":5645,"src":"5566:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5639,"name":"address","nodeType":"ElementaryTypeName","src":"5566:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5643,"indexed":false,"mutability":"mutable","name":"operatorDetails","nameLocation":"5608:15:19","nodeType":"VariableDeclaration","scope":5645,"src":"5592:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_memory_ptr","typeString":"struct IDelegationManager.OperatorDetails"},"typeName":{"id":5642,"nodeType":"UserDefinedTypeName","pathNode":{"id":5641,"name":"OperatorDetails","nameLocations":["5592:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":5589,"src":"5592:15:19"},"referencedDeclaration":5589,"src":"5592:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_storage_ptr","typeString":"struct IDelegationManager.OperatorDetails"}},"visibility":"internal"}],"src":"5565:59:19"},"src":"5541:84:19"},{"anonymous":false,"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"5631:95:19","text":"@notice Emitted when an operator updates their OperatorDetails to @param newOperatorDetails"},"eventSelector":"febe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac","id":5653,"name":"OperatorDetailsModified","nameLocation":"5737:23:19","nodeType":"EventDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"5777:8:19","nodeType":"VariableDeclaration","scope":5653,"src":"5761:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5647,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5651,"indexed":false,"mutability":"mutable","name":"newOperatorDetails","nameLocation":"5803:18:19","nodeType":"VariableDeclaration","scope":5653,"src":"5787:34:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_memory_ptr","typeString":"struct IDelegationManager.OperatorDetails"},"typeName":{"id":5650,"nodeType":"UserDefinedTypeName","pathNode":{"id":5649,"name":"OperatorDetails","nameLocations":["5787:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":5589,"src":"5787:15:19"},"referencedDeclaration":5589,"src":"5787:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_storage_ptr","typeString":"struct IDelegationManager.OperatorDetails"}},"visibility":"internal"}],"src":"5760:62:19"},"src":"5731:92:19"},{"anonymous":false,"documentation":{"id":5654,"nodeType":"StructuredDocumentation","src":"5829:243:19","text":" @notice Emitted when @param operator indicates that they are updating their MetadataURI string\n @dev Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing"},"eventSelector":"02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b6708090","id":5660,"name":"OperatorMetadataURIUpdated","nameLocation":"6083:26:19","nodeType":"EventDefinition","parameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6126:8:19","nodeType":"VariableDeclaration","scope":5660,"src":"6110:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5655,"name":"address","nodeType":"ElementaryTypeName","src":"6110:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5658,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"6143:11:19","nodeType":"VariableDeclaration","scope":5660,"src":"6136:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5657,"name":"string","nodeType":"ElementaryTypeName","src":"6136:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6109:46:19"},"src":"6077:79:19"},{"anonymous":false,"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"6162:141:19","text":"@notice Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares."},"eventSelector":"1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c","id":5672,"name":"OperatorSharesIncreased","nameLocation":"6314:23:19","nodeType":"EventDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6354:8:19","nodeType":"VariableDeclaration","scope":5672,"src":"6338:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5662,"name":"address","nodeType":"ElementaryTypeName","src":"6338:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5665,"indexed":false,"mutability":"mutable","name":"staker","nameLocation":"6372:6:19","nodeType":"VariableDeclaration","scope":5672,"src":"6364:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5664,"name":"address","nodeType":"ElementaryTypeName","src":"6364:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5668,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"6390:8:19","nodeType":"VariableDeclaration","scope":5672,"src":"6380:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":5667,"nodeType":"UserDefinedTypeName","pathNode":{"id":5666,"name":"IStrategy","nameLocations":["6380:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"6380:9:19"},"referencedDeclaration":7612,"src":"6380:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":5670,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"6408:6:19","nodeType":"VariableDeclaration","scope":5672,"src":"6400:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6400:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6337:78:19"},"src":"6308:108:19"},{"anonymous":false,"documentation":{"id":5673,"nodeType":"StructuredDocumentation","src":"6422:141:19","text":"@notice Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares."},"eventSelector":"6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd","id":5684,"name":"OperatorSharesDecreased","nameLocation":"6574:23:19","nodeType":"EventDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6614:8:19","nodeType":"VariableDeclaration","scope":5684,"src":"6598:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5674,"name":"address","nodeType":"ElementaryTypeName","src":"6598:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5677,"indexed":false,"mutability":"mutable","name":"staker","nameLocation":"6632:6:19","nodeType":"VariableDeclaration","scope":5684,"src":"6624:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5676,"name":"address","nodeType":"ElementaryTypeName","src":"6624:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5680,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"6650:8:19","nodeType":"VariableDeclaration","scope":5684,"src":"6640:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":5679,"nodeType":"UserDefinedTypeName","pathNode":{"id":5678,"name":"IStrategy","nameLocations":["6640:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"6640:9:19"},"referencedDeclaration":7612,"src":"6640:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":5682,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"6668:6:19","nodeType":"VariableDeclaration","scope":5684,"src":"6660:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6660:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6597:78:19"},"src":"6568:108:19"},{"anonymous":false,"documentation":{"id":5685,"nodeType":"StructuredDocumentation","src":"6682:68:19","text":"@notice Emitted when @param staker delegates to @param operator."},"eventSelector":"c3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d8743304","id":5691,"name":"StakerDelegated","nameLocation":"6761:15:19","nodeType":"EventDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"6793:6:19","nodeType":"VariableDeclaration","scope":5691,"src":"6777:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5686,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5689,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6817:8:19","nodeType":"VariableDeclaration","scope":5691,"src":"6801:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5688,"name":"address","nodeType":"ElementaryTypeName","src":"6801:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6776:50:19"},"src":"6755:72:19"},{"anonymous":false,"documentation":{"id":5692,"nodeType":"StructuredDocumentation","src":"6833:72:19","text":"@notice Emitted when @param staker undelegates from @param operator."},"eventSelector":"fee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af44676","id":5698,"name":"StakerUndelegated","nameLocation":"6916:17:19","nodeType":"EventDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"6950:6:19","nodeType":"VariableDeclaration","scope":5698,"src":"6934:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5693,"name":"address","nodeType":"ElementaryTypeName","src":"6934:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5696,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6974:8:19","nodeType":"VariableDeclaration","scope":5698,"src":"6958:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5695,"name":"address","nodeType":"ElementaryTypeName","src":"6958:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6933:50:19"},"src":"6910:74:19"},{"anonymous":false,"documentation":{"id":5699,"nodeType":"StructuredDocumentation","src":"6990:105:19","text":"@notice Emitted when @param staker is undelegated via a call not originating from the staker themself"},"eventSelector":"f0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a","id":5705,"name":"StakerForceUndelegated","nameLocation":"7106:22:19","nodeType":"EventDefinition","parameters":{"id":5704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"7145:6:19","nodeType":"VariableDeclaration","scope":5705,"src":"7129:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5700,"name":"address","nodeType":"ElementaryTypeName","src":"7129:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5703,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"7169:8:19","nodeType":"VariableDeclaration","scope":5705,"src":"7153:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5702,"name":"address","nodeType":"ElementaryTypeName","src":"7153:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7128:50:19"},"src":"7100:79:19"},{"anonymous":false,"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"7185:180:19","text":" @notice Emitted when a new withdrawal is queued.\n @param withdrawalRoot Is the hash of the `withdrawal`.\n @param withdrawal Is the withdrawal itself."},"eventSelector":"9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f9","id":5713,"name":"WithdrawalQueued","nameLocation":"7376:16:19","nodeType":"EventDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"indexed":false,"mutability":"mutable","name":"withdrawalRoot","nameLocation":"7401:14:19","nodeType":"VariableDeclaration","scope":5713,"src":"7393:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7393:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5711,"indexed":false,"mutability":"mutable","name":"withdrawal","nameLocation":"7428:10:19","nodeType":"VariableDeclaration","scope":5713,"src":"7417:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_memory_ptr","typeString":"struct IDelegationManager.Withdrawal"},"typeName":{"id":5710,"nodeType":"UserDefinedTypeName","pathNode":{"id":5709,"name":"Withdrawal","nameLocations":["7417:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":5628,"src":"7417:10:19"},"referencedDeclaration":5628,"src":"7417:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_storage_ptr","typeString":"struct IDelegationManager.Withdrawal"}},"visibility":"internal"}],"src":"7392:47:19"},"src":"7370:70:19"},{"anonymous":false,"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"7446:57:19","text":"@notice Emitted when a queued withdrawal is completed"},"eventSelector":"c97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d","id":5718,"name":"WithdrawalCompleted","nameLocation":"7514:19:19","nodeType":"EventDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"indexed":false,"mutability":"mutable","name":"withdrawalRoot","nameLocation":"7542:14:19","nodeType":"VariableDeclaration","scope":5718,"src":"7534:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7534:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7533:24:19"},"src":"7508:50:19"},{"anonymous":false,"documentation":{"id":5719,"nodeType":"StructuredDocumentation","src":"7564:112:19","text":"@notice Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`."},"eventSelector":"afa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b69","id":5725,"name":"MinWithdrawalDelayBlocksSet","nameLocation":"7687:27:19","nodeType":"EventDefinition","parameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"indexed":false,"mutability":"mutable","name":"previousValue","nameLocation":"7723:13:19","nodeType":"VariableDeclaration","scope":5725,"src":"7715:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5720,"name":"uint256","nodeType":"ElementaryTypeName","src":"7715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5723,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"7746:8:19","nodeType":"VariableDeclaration","scope":5725,"src":"7738:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7714:41:19"},"src":"7681:75:19"},{"anonymous":false,"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"7762:117:19","text":"@notice Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`."},"eventSelector":"0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d","id":5735,"name":"StrategyWithdrawalDelayBlocksSet","nameLocation":"7890:32:19","nodeType":"EventDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"7933:8:19","nodeType":"VariableDeclaration","scope":5735,"src":"7923:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":5728,"nodeType":"UserDefinedTypeName","pathNode":{"id":5727,"name":"IStrategy","nameLocations":["7923:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"7923:9:19"},"referencedDeclaration":7612,"src":"7923:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":5731,"indexed":false,"mutability":"mutable","name":"previousValue","nameLocation":"7951:13:19","nodeType":"VariableDeclaration","scope":5735,"src":"7943:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"7943:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5733,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"7974:8:19","nodeType":"VariableDeclaration","scope":5735,"src":"7966:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"7966:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7922:61:19"},"src":"7884:100:19"},{"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"7990:640:19","text":" @notice Registers the caller as an operator in EigenLayer.\n @param registeringOperatorDetails is the `OperatorDetails` for the operator.\n @param metadataURI is a URI for the operator's metadata, i.e. a link providing more details on the operator.\n @dev Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".\n @dev This function will revert if the caller is already delegated to an operator.\n @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event"},"functionSelector":"0f589e59","id":5744,"implemented":false,"kind":"function","modifiers":[],"name":"registerAsOperator","nameLocation":"8644:18:19","nodeType":"FunctionDefinition","parameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"registeringOperatorDetails","nameLocation":"8697:26:19","nodeType":"VariableDeclaration","scope":5744,"src":"8672:51:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_calldata_ptr","typeString":"struct IDelegationManager.OperatorDetails"},"typeName":{"id":5738,"nodeType":"UserDefinedTypeName","pathNode":{"id":5737,"name":"OperatorDetails","nameLocations":["8672:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":5589,"src":"8672:15:19"},"referencedDeclaration":5589,"src":"8672:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_storage_ptr","typeString":"struct IDelegationManager.OperatorDetails"}},"visibility":"internal"},{"constant":false,"id":5741,"mutability":"mutable","name":"metadataURI","nameLocation":"8749:11:19","nodeType":"VariableDeclaration","scope":5744,"src":"8733:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5740,"name":"string","nodeType":"ElementaryTypeName","src":"8733:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8662:104:19"},"returnParameters":{"id":5743,"nodeType":"ParameterList","parameters":[],"src":"8775:0:19"},"scope":6097,"src":"8635:141:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5745,"nodeType":"StructuredDocumentation","src":"8782:293:19","text":" @notice Updates an operator's stored `OperatorDetails`.\n @param newOperatorDetails is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\n @dev The caller must have previously registered as an operator in EigenLayer."},"functionSelector":"f16172b0","id":5751,"implemented":false,"kind":"function","modifiers":[],"name":"modifyOperatorDetails","nameLocation":"9089:21:19","nodeType":"FunctionDefinition","parameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"newOperatorDetails","nameLocation":"9136:18:19","nodeType":"VariableDeclaration","scope":5751,"src":"9111:43:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_calldata_ptr","typeString":"struct IDelegationManager.OperatorDetails"},"typeName":{"id":5747,"nodeType":"UserDefinedTypeName","pathNode":{"id":5746,"name":"OperatorDetails","nameLocations":["9111:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":5589,"src":"9111:15:19"},"referencedDeclaration":5589,"src":"9111:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_storage_ptr","typeString":"struct IDelegationManager.OperatorDetails"}},"visibility":"internal"}],"src":"9110:45:19"},"returnParameters":{"id":5750,"nodeType":"ParameterList","parameters":[],"src":"9164:0:19"},"scope":6097,"src":"9080:85:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"9171:330:19","text":" @notice Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\n @param metadataURI The URI for metadata associated with an operator\n @dev Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event"},"functionSelector":"99be81c8","id":5757,"implemented":false,"kind":"function","modifiers":[],"name":"updateOperatorMetadataURI","nameLocation":"9515:25:19","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"metadataURI","nameLocation":"9557:11:19","nodeType":"VariableDeclaration","scope":5757,"src":"9541:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5753,"name":"string","nodeType":"ElementaryTypeName","src":"9541:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9540:29:19"},"returnParameters":{"id":5756,"nodeType":"ParameterList","parameters":[],"src":"9578:0:19"},"scope":6097,"src":"9506:73:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"9585:992:19","text":" @notice Caller delegates their stake to an operator.\n @param operator The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\n @param approverSignatureAndExpiry Verifies the operator approves of this delegation\n @param approverSalt A unique single use value tied to an individual signature.\n @dev The approverSignatureAndExpiry is used in the event that:\n          1) the operator's `delegationApprover` address is set to a non-zero value.\n                  AND\n          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator\n             or their delegationApprover is the `msg.sender`, then approval is assumed.\n @dev In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n in this case to save on complexity + gas costs"},"functionSelector":"eea9064b","id":5768,"implemented":false,"kind":"function","modifiers":[],"name":"delegateTo","nameLocation":"10591:10:19","nodeType":"FunctionDefinition","parameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"operator","nameLocation":"10619:8:19","nodeType":"VariableDeclaration","scope":5768,"src":"10611:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5759,"name":"address","nodeType":"ElementaryTypeName","src":"10611:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5763,"mutability":"mutable","name":"approverSignatureAndExpiry","nameLocation":"10664:26:19","nodeType":"VariableDeclaration","scope":5768,"src":"10637:53:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithExpiry_$7250_memory_ptr","typeString":"struct ISignatureUtils.SignatureWithExpiry"},"typeName":{"id":5762,"nodeType":"UserDefinedTypeName","pathNode":{"id":5761,"name":"SignatureWithExpiry","nameLocations":["10637:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"10637:19:19"},"referencedDeclaration":7250,"src":"10637:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithExpiry_$7250_storage_ptr","typeString":"struct ISignatureUtils.SignatureWithExpiry"}},"visibility":"internal"},{"constant":false,"id":5765,"mutability":"mutable","name":"approverSalt","nameLocation":"10708:12:19","nodeType":"VariableDeclaration","scope":5768,"src":"10700:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10700:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10601:125:19"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[],"src":"10735:0:19"},"scope":6097,"src":"10582:154:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5769,"nodeType":"StructuredDocumentation","src":"10742:1590:19","text":" @notice Caller delegates a staker's stake to an operator with valid signatures from both parties.\n @param staker The account delegating stake to an `operator` account\n @param operator The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\n @param stakerSignatureAndExpiry Signed data from the staker authorizing delegating stake to an operator\n @param approverSignatureAndExpiry is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\n @param approverSalt Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\n @dev If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.\n @dev If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.\n @dev the operator's `delegationApprover` address is set to a non-zero value.\n @dev neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover\n is the `msg.sender`, then approval is assumed.\n @dev This function will revert if the current `block.timestamp` is equal to or exceeds the expiry\n @dev In the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input\n in this case to save on complexity + gas costs"},"functionSelector":"7f548071","id":5784,"implemented":false,"kind":"function","modifiers":[],"name":"delegateToBySignature","nameLocation":"12346:21:19","nodeType":"FunctionDefinition","parameters":{"id":5782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"staker","nameLocation":"12385:6:19","nodeType":"VariableDeclaration","scope":5784,"src":"12377:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5770,"name":"address","nodeType":"ElementaryTypeName","src":"12377:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5773,"mutability":"mutable","name":"operator","nameLocation":"12409:8:19","nodeType":"VariableDeclaration","scope":5784,"src":"12401:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5772,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5776,"mutability":"mutable","name":"stakerSignatureAndExpiry","nameLocation":"12454:24:19","nodeType":"VariableDeclaration","scope":5784,"src":"12427:51:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithExpiry_$7250_memory_ptr","typeString":"struct ISignatureUtils.SignatureWithExpiry"},"typeName":{"id":5775,"nodeType":"UserDefinedTypeName","pathNode":{"id":5774,"name":"SignatureWithExpiry","nameLocations":["12427:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"12427:19:19"},"referencedDeclaration":7250,"src":"12427:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithExpiry_$7250_storage_ptr","typeString":"struct ISignatureUtils.SignatureWithExpiry"}},"visibility":"internal"},{"constant":false,"id":5779,"mutability":"mutable","name":"approverSignatureAndExpiry","nameLocation":"12515:26:19","nodeType":"VariableDeclaration","scope":5784,"src":"12488:53:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithExpiry_$7250_memory_ptr","typeString":"struct ISignatureUtils.SignatureWithExpiry"},"typeName":{"id":5778,"nodeType":"UserDefinedTypeName","pathNode":{"id":5777,"name":"SignatureWithExpiry","nameLocations":["12488:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":7250,"src":"12488:19:19"},"referencedDeclaration":7250,"src":"12488:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureWithExpiry_$7250_storage_ptr","typeString":"struct ISignatureUtils.SignatureWithExpiry"}},"visibility":"internal"},{"constant":false,"id":5781,"mutability":"mutable","name":"approverSalt","nameLocation":"12559:12:19","nodeType":"VariableDeclaration","scope":5784,"src":"12551:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12551:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12367:210:19"},"returnParameters":{"id":5783,"nodeType":"ParameterList","parameters":[],"src":"12586:0:19"},"scope":6097,"src":"12337:250:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5785,"nodeType":"StructuredDocumentation","src":"12593:800:19","text":" @notice Undelegates the staker from the operator who they are delegated to. Puts the staker into the \"undelegation limbo\" mode of the EigenPodManager\n and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary.\n @param staker The account to be undelegated.\n @return withdrawalRoot The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0).\n @dev Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.\n @dev Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"\n @dev Reverts if the `staker` is already undelegated."},"functionSelector":"da8be864","id":5793,"implemented":false,"kind":"function","modifiers":[],"name":"undelegate","nameLocation":"13407:10:19","nodeType":"FunctionDefinition","parameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"staker","nameLocation":"13426:6:19","nodeType":"VariableDeclaration","scope":5793,"src":"13418:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5786,"name":"address","nodeType":"ElementaryTypeName","src":"13418:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13417:16:19"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"withdrawalRoot","nameLocation":"13469:14:19","nodeType":"VariableDeclaration","scope":5793,"src":"13452:31:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13452:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5790,"nodeType":"ArrayTypeName","src":"13452:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13451:33:19"},"scope":6097,"src":"13398:87:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5794,"nodeType":"StructuredDocumentation","src":"13491:346:19","text":" Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed\n from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from\n their operator.\n All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."},"functionSelector":"0dd8dd02","id":5804,"implemented":false,"kind":"function","modifiers":[],"name":"queueWithdrawals","nameLocation":"13851:16:19","nodeType":"FunctionDefinition","parameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"queuedWithdrawalParams","nameLocation":"13902:22:19","nodeType":"VariableDeclaration","scope":5804,"src":"13868:56:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedWithdrawalParams_$5638_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDelegationManager.QueuedWithdrawalParams[]"},"typeName":{"baseType":{"id":5796,"nodeType":"UserDefinedTypeName","pathNode":{"id":5795,"name":"QueuedWithdrawalParams","nameLocations":["13868:22:19"],"nodeType":"IdentifierPath","referencedDeclaration":5638,"src":"13868:22:19"},"referencedDeclaration":5638,"src":"13868:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedWithdrawalParams_$5638_storage_ptr","typeString":"struct IDelegationManager.QueuedWithdrawalParams"}},"id":5797,"nodeType":"ArrayTypeName","src":"13868:24:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedWithdrawalParams_$5638_storage_$dyn_storage_ptr","typeString":"struct IDelegationManager.QueuedWithdrawalParams[]"}},"visibility":"internal"}],"src":"13867:58:19"},"returnParameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5804,"src":"13960:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13960:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5801,"nodeType":"ArrayTypeName","src":"13960:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13959:18:19"},"scope":6097,"src":"13842:136:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5805,"nodeType":"StructuredDocumentation","src":"13984:1431:19","text":" @notice Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\n @param withdrawal The Withdrawal to complete.\n @param tokens Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array.\n This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\n @param middlewareTimesIndex is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\n @param receiveAsTokens If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves\n and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies\n will simply be transferred to the caller directly.\n @dev middlewareTimesIndex is unused, but will be used in the Slasher eventually\n @dev beaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that\n any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in\n any other strategies, which will be transferred to the withdrawer."},"functionSelector":"60d7faed","id":5819,"implemented":false,"kind":"function","modifiers":[],"name":"completeQueuedWithdrawal","nameLocation":"15429:24:19","nodeType":"FunctionDefinition","parameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"withdrawal","nameLocation":"15483:10:19","nodeType":"VariableDeclaration","scope":5819,"src":"15463:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_calldata_ptr","typeString":"struct IDelegationManager.Withdrawal"},"typeName":{"id":5807,"nodeType":"UserDefinedTypeName","pathNode":{"id":5806,"name":"Withdrawal","nameLocations":["15463:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":5628,"src":"15463:10:19"},"referencedDeclaration":5628,"src":"15463:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_storage_ptr","typeString":"struct IDelegationManager.Withdrawal"}},"visibility":"internal"},{"constant":false,"id":5812,"mutability":"mutable","name":"tokens","nameLocation":"15521:6:19","nodeType":"VariableDeclaration","scope":5819,"src":"15503:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1077_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5810,"nodeType":"UserDefinedTypeName","pathNode":{"id":5809,"name":"IERC20","nameLocations":["15503:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"15503:6:19"},"referencedDeclaration":1077,"src":"15503:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":5811,"nodeType":"ArrayTypeName","src":"15503:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1077_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":5814,"mutability":"mutable","name":"middlewareTimesIndex","nameLocation":"15545:20:19","nodeType":"VariableDeclaration","scope":5819,"src":"15537:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"15537:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5816,"mutability":"mutable","name":"receiveAsTokens","nameLocation":"15580:15:19","nodeType":"VariableDeclaration","scope":5819,"src":"15575:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5815,"name":"bool","nodeType":"ElementaryTypeName","src":"15575:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15453:148:19"},"returnParameters":{"id":5818,"nodeType":"ParameterList","parameters":[],"src":"15610:0:19"},"scope":6097,"src":"15420:191:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"15617:723:19","text":" @notice Array-ified version of `completeQueuedWithdrawal`.\n Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\n @param withdrawals The Withdrawals to complete.\n @param tokens Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\n @param middlewareTimesIndexes One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\n @param receiveAsTokens Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\n @dev See `completeQueuedWithdrawal` for relevant dev tags"},"functionSelector":"33404396","id":5838,"implemented":false,"kind":"function","modifiers":[],"name":"completeQueuedWithdrawals","nameLocation":"16354:25:19","nodeType":"FunctionDefinition","parameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"withdrawals","nameLocation":"16411:11:19","nodeType":"VariableDeclaration","scope":5838,"src":"16389:33:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5628_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDelegationManager.Withdrawal[]"},"typeName":{"baseType":{"id":5822,"nodeType":"UserDefinedTypeName","pathNode":{"id":5821,"name":"Withdrawal","nameLocations":["16389:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":5628,"src":"16389:10:19"},"referencedDeclaration":5628,"src":"16389:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_storage_ptr","typeString":"struct IDelegationManager.Withdrawal"}},"id":5823,"nodeType":"ArrayTypeName","src":"16389:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5628_storage_$dyn_storage_ptr","typeString":"struct IDelegationManager.Withdrawal[]"}},"visibility":"internal"},{"constant":false,"id":5829,"mutability":"mutable","name":"tokens","nameLocation":"16452:6:19","nodeType":"VariableDeclaration","scope":5838,"src":"16432:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_contract$_IERC20_$1077_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"contract IERC20[][]"},"typeName":{"baseType":{"baseType":{"id":5826,"nodeType":"UserDefinedTypeName","pathNode":{"id":5825,"name":"IERC20","nameLocations":["16432:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"16432:6:19"},"referencedDeclaration":1077,"src":"16432:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":5827,"nodeType":"ArrayTypeName","src":"16432:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1077_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"id":5828,"nodeType":"ArrayTypeName","src":"16432:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_contract$_IERC20_$1077_$dyn_storage_$dyn_storage_ptr","typeString":"contract IERC20[][]"}},"visibility":"internal"},{"constant":false,"id":5832,"mutability":"mutable","name":"middlewareTimesIndexes","nameLocation":"16487:22:19","nodeType":"VariableDeclaration","scope":5838,"src":"16468:41:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5830,"name":"uint256","nodeType":"ElementaryTypeName","src":"16468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5831,"nodeType":"ArrayTypeName","src":"16468:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5835,"mutability":"mutable","name":"receiveAsTokens","nameLocation":"16535:15:19","nodeType":"VariableDeclaration","scope":5838,"src":"16519:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5833,"name":"bool","nodeType":"ElementaryTypeName","src":"16519:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5834,"nodeType":"ArrayTypeName","src":"16519:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"16379:177:19"},"returnParameters":{"id":5837,"nodeType":"ParameterList","parameters":[],"src":"16565:0:19"},"scope":6097,"src":"16345:221:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"16572:531:19","text":" @notice Increases a staker's delegated share balance in a strategy.\n @param staker The address to increase the delegated shares for their operator.\n @param strategy The strategy in which to increase the delegated shares.\n @param shares The number of shares to increase.\n @dev *If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n @dev Callable only by the StrategyManager or EigenPodManager."},"functionSelector":"28a573ae","id":5849,"implemented":false,"kind":"function","modifiers":[],"name":"increaseDelegatedShares","nameLocation":"17117:23:19","nodeType":"FunctionDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"staker","nameLocation":"17149:6:19","nodeType":"VariableDeclaration","scope":5849,"src":"17141:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5840,"name":"address","nodeType":"ElementaryTypeName","src":"17141:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5844,"mutability":"mutable","name":"strategy","nameLocation":"17167:8:19","nodeType":"VariableDeclaration","scope":5849,"src":"17157:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":5843,"nodeType":"UserDefinedTypeName","pathNode":{"id":5842,"name":"IStrategy","nameLocations":["17157:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"17157:9:19"},"referencedDeclaration":7612,"src":"17157:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":5846,"mutability":"mutable","name":"shares","nameLocation":"17185:6:19","nodeType":"VariableDeclaration","scope":5849,"src":"17177:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"17177:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17140:52:19"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[],"src":"17201:0:19"},"scope":6097,"src":"17108:94:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5850,"nodeType":"StructuredDocumentation","src":"17208:531:19","text":" @notice Decreases a staker's delegated share balance in a strategy.\n @param staker The address to increase the delegated shares for their operator.\n @param strategy The strategy in which to decrease the delegated shares.\n @param shares The number of shares to decrease.\n @dev *If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.\n @dev Callable only by the StrategyManager or EigenPodManager."},"functionSelector":"132d4967","id":5860,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseDelegatedShares","nameLocation":"17753:23:19","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"staker","nameLocation":"17785:6:19","nodeType":"VariableDeclaration","scope":5860,"src":"17777:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5851,"name":"address","nodeType":"ElementaryTypeName","src":"17777:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5855,"mutability":"mutable","name":"strategy","nameLocation":"17803:8:19","nodeType":"VariableDeclaration","scope":5860,"src":"17793:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"IStrategy","nameLocations":["17793:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"17793:9:19"},"referencedDeclaration":7612,"src":"17793:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":5857,"mutability":"mutable","name":"shares","nameLocation":"17821:6:19","nodeType":"VariableDeclaration","scope":5860,"src":"17813:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"17813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17776:52:19"},"returnParameters":{"id":5859,"nodeType":"ParameterList","parameters":[],"src":"17837:0:19"},"scope":6097,"src":"17744:94:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5861,"nodeType":"StructuredDocumentation","src":"17844:197:19","text":" @notice Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\n @param newMinWithdrawalDelayBlocks new value of `minWithdrawalDelayBlocks`."},"functionSelector":"635bbd10","id":5866,"implemented":false,"kind":"function","modifiers":[],"name":"setMinWithdrawalDelayBlocks","nameLocation":"18055:27:19","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"newMinWithdrawalDelayBlocks","nameLocation":"18091:27:19","nodeType":"VariableDeclaration","scope":5866,"src":"18083:35:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"18083:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18082:37:19"},"returnParameters":{"id":5865,"nodeType":"ParameterList","parameters":[],"src":"18128:0:19"},"scope":6097,"src":"18046:83:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5867,"nodeType":"StructuredDocumentation","src":"18136:459:19","text":" @notice Called by owner to set the minimum withdrawal delay blocks for each passed in strategy\n Note that the min number of blocks to complete a withdrawal of a strategy is\n MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\n @param strategies The strategies to set the minimum withdrawal delay blocks for\n @param withdrawalDelayBlocks The minimum withdrawal delay blocks to set for each strategy"},"functionSelector":"1522bf02","id":5877,"implemented":false,"kind":"function","modifiers":[],"name":"setStrategyWithdrawalDelayBlocks","nameLocation":"18609:32:19","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"strategies","nameLocation":"18663:10:19","nodeType":"VariableDeclaration","scope":5877,"src":"18642:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_calldata_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":5869,"nodeType":"UserDefinedTypeName","pathNode":{"id":5868,"name":"IStrategy","nameLocations":["18642:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"18642:9:19"},"referencedDeclaration":7612,"src":"18642:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":5870,"nodeType":"ArrayTypeName","src":"18642:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"},{"constant":false,"id":5874,"mutability":"mutable","name":"withdrawalDelayBlocks","nameLocation":"18694:21:19","nodeType":"VariableDeclaration","scope":5877,"src":"18675:40:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5872,"name":"uint256","nodeType":"ElementaryTypeName","src":"18675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5873,"nodeType":"ArrayTypeName","src":"18675:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18641:75:19"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[],"src":"18725:0:19"},"scope":6097,"src":"18600:126:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"18732:291:19","text":" @notice returns the address of the operator that `staker` is delegated to.\n @notice Mapping: staker => operator whom the staker is currently delegated to.\n @dev Note that returning address(0) indicates that the staker is not actively delegated to any operator."},"functionSelector":"65da1264","id":5885,"implemented":false,"kind":"function","modifiers":[],"name":"delegatedTo","nameLocation":"19037:11:19","nodeType":"FunctionDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"staker","nameLocation":"19057:6:19","nodeType":"VariableDeclaration","scope":5885,"src":"19049:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5879,"name":"address","nodeType":"ElementaryTypeName","src":"19049:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19048:16:19"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"19088:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5882,"name":"address","nodeType":"ElementaryTypeName","src":"19088:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19087:9:19"},"scope":6097,"src":"19028:69:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"19103:92:19","text":" @notice Returns the OperatorDetails struct associated with an `operator`."},"functionSelector":"c5e480db","id":5894,"implemented":false,"kind":"function","modifiers":[],"name":"operatorDetails","nameLocation":"19209:15:19","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"operator","nameLocation":"19233:8:19","nodeType":"VariableDeclaration","scope":5894,"src":"19225:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5887,"name":"address","nodeType":"ElementaryTypeName","src":"19225:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19224:18:19"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5894,"src":"19266:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_memory_ptr","typeString":"struct IDelegationManager.OperatorDetails"},"typeName":{"id":5891,"nodeType":"UserDefinedTypeName","pathNode":{"id":5890,"name":"OperatorDetails","nameLocations":["19266:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":5589,"src":"19266:15:19"},"referencedDeclaration":5589,"src":"19266:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDetails_$5589_storage_ptr","typeString":"struct IDelegationManager.OperatorDetails"}},"visibility":"internal"}],"src":"19265:24:19"},"scope":6097,"src":"19200:90:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"19296:81:19","text":" @notice Returns the delegationApprover account for an operator"},"functionSelector":"3cdeb5e0","id":5902,"implemented":false,"kind":"function","modifiers":[],"name":"delegationApprover","nameLocation":"19391:18:19","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"operator","nameLocation":"19418:8:19","nodeType":"VariableDeclaration","scope":5902,"src":"19410:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5896,"name":"address","nodeType":"ElementaryTypeName","src":"19410:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19409:18:19"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5902,"src":"19451:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5899,"name":"address","nodeType":"ElementaryTypeName","src":"19451:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19450:9:19"},"scope":6097,"src":"19382:78:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"19466:79:19","text":" @notice Returns the stakerOptOutWindowBlocks for an operator"},"functionSelector":"16928365","id":5910,"implemented":false,"kind":"function","modifiers":[],"name":"stakerOptOutWindowBlocks","nameLocation":"19559:24:19","nodeType":"FunctionDefinition","parameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"operator","nameLocation":"19592:8:19","nodeType":"VariableDeclaration","scope":5910,"src":"19584:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5904,"name":"address","nodeType":"ElementaryTypeName","src":"19584:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19583:18:19"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5910,"src":"19625:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5907,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19624:9:19"},"scope":6097,"src":"19550:84:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5911,"nodeType":"StructuredDocumentation","src":"19640:94:19","text":" @notice Given array of strategies, returns array of shares for the operator"},"functionSelector":"90041347","id":5923,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorShares","nameLocation":"19748:17:19","nodeType":"FunctionDefinition","parameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5913,"mutability":"mutable","name":"operator","nameLocation":"19783:8:19","nodeType":"VariableDeclaration","scope":5923,"src":"19775:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5912,"name":"address","nodeType":"ElementaryTypeName","src":"19775:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5917,"mutability":"mutable","name":"strategies","nameLocation":"19820:10:19","nodeType":"VariableDeclaration","scope":5923,"src":"19801:29:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":5915,"nodeType":"UserDefinedTypeName","pathNode":{"id":5914,"name":"IStrategy","nameLocations":["19801:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"19801:9:19"},"referencedDeclaration":7612,"src":"19801:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":5916,"nodeType":"ArrayTypeName","src":"19801:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"src":"19765:71:19"},"returnParameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5923,"src":"19860:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"19860:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5920,"nodeType":"ArrayTypeName","src":"19860:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19859:18:19"},"scope":6097,"src":"19739:139:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5924,"nodeType":"StructuredDocumentation","src":"19884:317:19","text":" @notice Given a list of strategies, return the minimum number of blocks that must pass to withdraw\n from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\n @param strategies The strategies to check withdrawal delays for"},"functionSelector":"0449ca39","id":5933,"implemented":false,"kind":"function","modifiers":[],"name":"getWithdrawalDelay","nameLocation":"20215:18:19","nodeType":"FunctionDefinition","parameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"strategies","nameLocation":"20255:10:19","nodeType":"VariableDeclaration","scope":5933,"src":"20234:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_calldata_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":5926,"nodeType":"UserDefinedTypeName","pathNode":{"id":5925,"name":"IStrategy","nameLocations":["20234:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"20234:9:19"},"referencedDeclaration":7612,"src":"20234:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":5927,"nodeType":"ArrayTypeName","src":"20234:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"src":"20233:33:19"},"returnParameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5933,"src":"20290:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"20290:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20289:9:19"},"scope":6097,"src":"20206:93:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5934,"nodeType":"StructuredDocumentation","src":"20305:489:19","text":" @notice returns the total number of shares in `strategy` that are delegated to `operator`.\n @notice Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\n @dev By design, the following invariant should hold for each Strategy:\n (operator's shares in delegation manager) = sum (shares above zero of all stakers delegated to operator)\n = sum (delegateable shares of all stakers delegated to the operator)"},"functionSelector":"778e55f3","id":5944,"implemented":false,"kind":"function","modifiers":[],"name":"operatorShares","nameLocation":"20808:14:19","nodeType":"FunctionDefinition","parameters":{"id":5940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"operator","nameLocation":"20831:8:19","nodeType":"VariableDeclaration","scope":5944,"src":"20823:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5935,"name":"address","nodeType":"ElementaryTypeName","src":"20823:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5939,"mutability":"mutable","name":"strategy","nameLocation":"20851:8:19","nodeType":"VariableDeclaration","scope":5944,"src":"20841:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":5938,"nodeType":"UserDefinedTypeName","pathNode":{"id":5937,"name":"IStrategy","nameLocations":["20841:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"20841:9:19"},"referencedDeclaration":7612,"src":"20841:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"20822:38:19"},"returnParameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5944,"src":"20884:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"20884:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20883:9:19"},"scope":6097,"src":"20799:94:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5945,"nodeType":"StructuredDocumentation","src":"20900:214:19","text":" @notice Returns the number of actively-delegatable shares a staker has across all strategies.\n @dev Returns two empty arrays in the case that the Staker has no actively-delegateable shares."},"functionSelector":"cf80873e","id":5957,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatableShares","nameLocation":"21128:20:19","nodeType":"FunctionDefinition","parameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"staker","nameLocation":"21157:6:19","nodeType":"VariableDeclaration","scope":5957,"src":"21149:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5946,"name":"address","nodeType":"ElementaryTypeName","src":"21149:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21148:16:19"},"returnParameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5957,"src":"21188:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":5950,"nodeType":"UserDefinedTypeName","pathNode":{"id":5949,"name":"IStrategy","nameLocations":["21188:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"21188:9:19"},"referencedDeclaration":7612,"src":"21188:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":5951,"nodeType":"ArrayTypeName","src":"21188:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5957,"src":"21208:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"21208:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5954,"nodeType":"ArrayTypeName","src":"21208:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21187:38:19"},"scope":6097,"src":"21119:107:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5958,"nodeType":"StructuredDocumentation","src":"21232:101:19","text":" @notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."},"functionSelector":"3e28391d","id":5965,"implemented":false,"kind":"function","modifiers":[],"name":"isDelegated","nameLocation":"21347:11:19","nodeType":"FunctionDefinition","parameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"staker","nameLocation":"21367:6:19","nodeType":"VariableDeclaration","scope":5965,"src":"21359:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5959,"name":"address","nodeType":"ElementaryTypeName","src":"21359:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21358:16:19"},"returnParameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5965,"src":"21398:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5962,"name":"bool","nodeType":"ElementaryTypeName","src":"21398:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21397:6:19"},"scope":6097,"src":"21338:66:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"21410:96:19","text":" @notice Returns true is an operator has previously registered for delegation."},"functionSelector":"6d70f7ae","id":5973,"implemented":false,"kind":"function","modifiers":[],"name":"isOperator","nameLocation":"21520:10:19","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"operator","nameLocation":"21539:8:19","nodeType":"VariableDeclaration","scope":5973,"src":"21531:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5967,"name":"address","nodeType":"ElementaryTypeName","src":"21531:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21530:18:19"},"returnParameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5973,"src":"21572:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5970,"name":"bool","nodeType":"ElementaryTypeName","src":"21572:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21571:6:19"},"scope":6097,"src":"21511:67:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"21584:153:19","text":"@notice Mapping: staker => number of signed delegation nonces (used in `delegateToBySignature`) from the staker that the contract has already checked"},"functionSelector":"29c77d4f","id":5981,"implemented":false,"kind":"function","modifiers":[],"name":"stakerNonce","nameLocation":"21751:11:19","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"staker","nameLocation":"21771:6:19","nodeType":"VariableDeclaration","scope":5981,"src":"21763:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5975,"name":"address","nodeType":"ElementaryTypeName","src":"21763:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21762:16:19"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5981,"src":"21802:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"21802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21801:9:19"},"scope":6097,"src":"21742:69:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5982,"nodeType":"StructuredDocumentation","src":"21817:431:19","text":" @notice Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\n @dev Salts are used in the `delegateTo` and `delegateToBySignature` functions. Note that these functions only process the delegationApprover's\n signature + the provided salt if the operator being delegated to has specified a nonzero address as their `delegationApprover`."},"functionSelector":"bb45fef2","id":5991,"implemented":false,"kind":"function","modifiers":[],"name":"delegationApproverSaltIsSpent","nameLocation":"22262:29:19","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"_delegationApprover","nameLocation":"22300:19:19","nodeType":"VariableDeclaration","scope":5991,"src":"22292:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5983,"name":"address","nodeType":"ElementaryTypeName","src":"22292:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5986,"mutability":"mutable","name":"salt","nameLocation":"22329:4:19","nodeType":"VariableDeclaration","scope":5991,"src":"22321:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22321:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22291:43:19"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5991,"src":"22358:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5988,"name":"bool","nodeType":"ElementaryTypeName","src":"22358:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22357:6:19"},"scope":6097,"src":"22253:111:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5992,"nodeType":"StructuredDocumentation","src":"22370:520:19","text":" @notice Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner,\n up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\n Note that strategies each have a separate withdrawal delay, which can be greater than this value. So the minimum number of blocks that must pass\n to withdraw a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"},"functionSelector":"c448feb8","id":5997,"implemented":false,"kind":"function","modifiers":[],"name":"minWithdrawalDelayBlocks","nameLocation":"22904:24:19","nodeType":"FunctionDefinition","parameters":{"id":5993,"nodeType":"ParameterList","parameters":[],"src":"22928:2:19"},"returnParameters":{"id":5996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"22954:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5994,"name":"uint256","nodeType":"ElementaryTypeName","src":"22954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22953:9:19"},"scope":6097,"src":"22895:68:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"22969:277:19","text":" @notice Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner,\n up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."},"functionSelector":"c488375a","id":6006,"implemented":false,"kind":"function","modifiers":[],"name":"strategyWithdrawalDelayBlocks","nameLocation":"23260:29:19","nodeType":"FunctionDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"strategy","nameLocation":"23300:8:19","nodeType":"VariableDeclaration","scope":6006,"src":"23290:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":6000,"nodeType":"UserDefinedTypeName","pathNode":{"id":5999,"name":"IStrategy","nameLocations":["23290:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"23290:9:19"},"referencedDeclaration":7612,"src":"23290:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"23289:20:19"},"returnParameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6006,"src":"23333:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6003,"name":"uint256","nodeType":"ElementaryTypeName","src":"23333:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23332:9:19"},"scope":6097,"src":"23251:91:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6007,"nodeType":"StructuredDocumentation","src":"23348:56:19","text":"@notice return address of the beaconChainETHStrategy"},"functionSelector":"9104c319","id":6013,"implemented":false,"kind":"function","modifiers":[],"name":"beaconChainETHStrategy","nameLocation":"23418:22:19","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[],"src":"23440:2:19"},"returnParameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6013,"src":"23466:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":6010,"nodeType":"UserDefinedTypeName","pathNode":{"id":6009,"name":"IStrategy","nameLocations":["23466:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"23466:9:19"},"referencedDeclaration":7612,"src":"23466:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"23465:11:19"},"scope":6097,"src":"23409:68:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6014,"nodeType":"StructuredDocumentation","src":"23483:277:19","text":" @notice Calculates the digestHash for a `staker` to sign to delegate to an `operator`\n @param staker The signing staker\n @param operator The operator who is being delegated to\n @param expiry The desired expiry time of the staker's signature"},"functionSelector":"1bbce091","id":6025,"implemented":false,"kind":"function","modifiers":[],"name":"calculateCurrentStakerDelegationDigestHash","nameLocation":"23774:42:19","nodeType":"FunctionDefinition","parameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"staker","nameLocation":"23834:6:19","nodeType":"VariableDeclaration","scope":6025,"src":"23826:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6015,"name":"address","nodeType":"ElementaryTypeName","src":"23826:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6018,"mutability":"mutable","name":"operator","nameLocation":"23858:8:19","nodeType":"VariableDeclaration","scope":6025,"src":"23850:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6017,"name":"address","nodeType":"ElementaryTypeName","src":"23850:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6020,"mutability":"mutable","name":"expiry","nameLocation":"23884:6:19","nodeType":"VariableDeclaration","scope":6025,"src":"23876:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"23876:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23816:80:19"},"returnParameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"23920:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23920:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"23919:9:19"},"scope":6097,"src":"23765:164:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"23935:419:19","text":" @notice Calculates the digest hash to be signed and used in the `delegateToBySignature` function\n @param staker The signing staker\n @param _stakerNonce The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\n @param operator The operator who is being delegated to\n @param expiry The desired expiry time of the staker's signature"},"functionSelector":"c94b5111","id":6039,"implemented":false,"kind":"function","modifiers":[],"name":"calculateStakerDelegationDigestHash","nameLocation":"24368:35:19","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"staker","nameLocation":"24421:6:19","nodeType":"VariableDeclaration","scope":6039,"src":"24413:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6027,"name":"address","nodeType":"ElementaryTypeName","src":"24413:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6030,"mutability":"mutable","name":"_stakerNonce","nameLocation":"24445:12:19","nodeType":"VariableDeclaration","scope":6039,"src":"24437:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6029,"name":"uint256","nodeType":"ElementaryTypeName","src":"24437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6032,"mutability":"mutable","name":"operator","nameLocation":"24475:8:19","nodeType":"VariableDeclaration","scope":6039,"src":"24467:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6031,"name":"address","nodeType":"ElementaryTypeName","src":"24467:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6034,"mutability":"mutable","name":"expiry","nameLocation":"24501:6:19","nodeType":"VariableDeclaration","scope":6039,"src":"24493:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"24493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24403:110:19"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"24537:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24537:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24536:9:19"},"scope":6097,"src":"24359:187:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"24552:585:19","text":" @notice Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\n @param staker The account delegating their stake\n @param operator The account receiving delegated stake\n @param _delegationApprover the operator's `delegationApprover` who will be signing the delegationHash (in general)\n @param approverSalt A unique and single use value associated with the approver signature.\n @param expiry Time after which the approver's signature becomes invalid"},"functionSelector":"0b9f487a","id":6055,"implemented":false,"kind":"function","modifiers":[],"name":"calculateDelegationApprovalDigestHash","nameLocation":"25151:37:19","nodeType":"FunctionDefinition","parameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"staker","nameLocation":"25206:6:19","nodeType":"VariableDeclaration","scope":6055,"src":"25198:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6041,"name":"address","nodeType":"ElementaryTypeName","src":"25198:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6044,"mutability":"mutable","name":"operator","nameLocation":"25230:8:19","nodeType":"VariableDeclaration","scope":6055,"src":"25222:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6043,"name":"address","nodeType":"ElementaryTypeName","src":"25222:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6046,"mutability":"mutable","name":"_delegationApprover","nameLocation":"25256:19:19","nodeType":"VariableDeclaration","scope":6055,"src":"25248:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6045,"name":"address","nodeType":"ElementaryTypeName","src":"25248:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6048,"mutability":"mutable","name":"approverSalt","nameLocation":"25293:12:19","nodeType":"VariableDeclaration","scope":6055,"src":"25285:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25285:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6050,"mutability":"mutable","name":"expiry","nameLocation":"25323:6:19","nodeType":"VariableDeclaration","scope":6055,"src":"25315:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"25315:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25188:147:19"},"returnParameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6055,"src":"25359:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25359:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25358:9:19"},"scope":6097,"src":"25142:226:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6056,"nodeType":"StructuredDocumentation","src":"25374:58:19","text":"@notice The EIP-712 typehash for the contract's domain"},"functionSelector":"20606b70","id":6061,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_TYPEHASH","nameLocation":"25446:15:19","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[],"src":"25461:2:19"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6061,"src":"25487:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25487:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25486:9:19"},"scope":6097,"src":"25437:59:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6062,"nodeType":"StructuredDocumentation","src":"25502:85:19","text":"@notice The EIP-712 typehash for the StakerDelegation struct used by the contract"},"functionSelector":"43377382","id":6067,"implemented":false,"kind":"function","modifiers":[],"name":"STAKER_DELEGATION_TYPEHASH","nameLocation":"25601:26:19","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[],"src":"25627:2:19"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"25653:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25653:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25652:9:19"},"scope":6097,"src":"25592:70:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"25668:87:19","text":"@notice The EIP-712 typehash for the DelegationApproval struct used by the contract"},"functionSelector":"04a4f979","id":6073,"implemented":false,"kind":"function","modifiers":[],"name":"DELEGATION_APPROVAL_TYPEHASH","nameLocation":"25769:28:19","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[],"src":"25797:2:19"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6073,"src":"25823:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25823:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25822:9:19"},"scope":6097,"src":"25760:72:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6074,"nodeType":"StructuredDocumentation","src":"25838:384:19","text":" @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID.\n @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n for more detailed information please read EIP-712."},"functionSelector":"f698da25","id":6079,"implemented":false,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"26236:15:19","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[],"src":"26251:2:19"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6079,"src":"26277:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26277:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26276:9:19"},"scope":6097,"src":"26227:59:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"26292:235:19","text":"@notice Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\n @dev This only increments (doesn't decrement), and is used to help ensure that otherwise identical withdrawals have unique hashes."},"functionSelector":"a1788484","id":6087,"implemented":false,"kind":"function","modifiers":[],"name":"cumulativeWithdrawalsQueued","nameLocation":"26541:27:19","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"staker","nameLocation":"26577:6:19","nodeType":"VariableDeclaration","scope":6087,"src":"26569:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6081,"name":"address","nodeType":"ElementaryTypeName","src":"26569:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26568:16:19"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"26608:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"26608:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26607:9:19"},"scope":6097,"src":"26532:85:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"26623:55:19","text":"@notice Returns the keccak256 hash of `withdrawal`."},"functionSelector":"597b36da","id":6096,"implemented":false,"kind":"function","modifiers":[],"name":"calculateWithdrawalRoot","nameLocation":"26692:23:19","nodeType":"FunctionDefinition","parameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"withdrawal","nameLocation":"26734:10:19","nodeType":"VariableDeclaration","scope":6096,"src":"26716:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_memory_ptr","typeString":"struct IDelegationManager.Withdrawal"},"typeName":{"id":6090,"nodeType":"UserDefinedTypeName","pathNode":{"id":6089,"name":"Withdrawal","nameLocations":["26716:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":5628,"src":"26716:10:19"},"referencedDeclaration":5628,"src":"26716:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5628_storage_ptr","typeString":"struct IDelegationManager.Withdrawal"}},"visibility":"internal"}],"src":"26715:30:19"},"returnParameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6096,"src":"26769:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26769:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26768:9:19"},"scope":6097,"src":"26683:95:19","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":6098,"src":"838:25942:19","usedErrors":[],"usedEvents":[5645,5653,5660,5672,5684,5691,5698,5705,5713,5718,5725,5735]}],"src":"37:26744:19"},"id":19},"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol","exportedSymbols":{"IETHPOSDeposit":[6138]},"id":6139,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":6099,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"2302:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IETHPOSDeposit","contractDependencies":[],"contractKind":"interface","documentation":{"id":6100,"nodeType":"StructuredDocumentation","src":"2399:167:20","text":"@notice This is the Ethereum 2.0 deposit contract interface.\n For more information see the Phase 0 specification under https://github.com/ethereum/eth2.0-specs"},"fullyImplemented":false,"id":6138,"linearizedBaseContracts":[6138],"name":"IETHPOSDeposit","nameLocation":"2576:14:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"2597:38:20","text":"@notice A processed deposit event."},"eventSelector":"649bbc62d0e31342afea4e5cd82d4049e7e1ee912fc0889aa790803be39038c5","id":6113,"name":"DepositEvent","nameLocation":"2646:12:20","nodeType":"EventDefinition","parameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"indexed":false,"mutability":"mutable","name":"pubkey","nameLocation":"2665:6:20","nodeType":"VariableDeclaration","scope":6113,"src":"2659:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6102,"name":"bytes","nodeType":"ElementaryTypeName","src":"2659:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6105,"indexed":false,"mutability":"mutable","name":"withdrawal_credentials","nameLocation":"2679:22:20","nodeType":"VariableDeclaration","scope":6113,"src":"2673:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6104,"name":"bytes","nodeType":"ElementaryTypeName","src":"2673:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6107,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2709:6:20","nodeType":"VariableDeclaration","scope":6113,"src":"2703:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6106,"name":"bytes","nodeType":"ElementaryTypeName","src":"2703:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6109,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"2723:9:20","nodeType":"VariableDeclaration","scope":6113,"src":"2717:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6108,"name":"bytes","nodeType":"ElementaryTypeName","src":"2717:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6111,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"2740:5:20","nodeType":"VariableDeclaration","scope":6113,"src":"2734:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2734:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2658:88:20"},"src":"2640:107:20"},{"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"2753:367:20","text":"@notice Submit a Phase 0 DepositData object.\n @param pubkey A BLS12-381 public key.\n @param withdrawal_credentials Commitment to a public key for withdrawals.\n @param signature A BLS12-381 signature.\n @param deposit_data_root The SHA-256 hash of the SSZ-encoded DepositData object.\n Used as a protection against malformed input."},"functionSelector":"22895118","id":6125,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3134:7:20","nodeType":"FunctionDefinition","parameters":{"id":6123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"pubkey","nameLocation":"3166:6:20","nodeType":"VariableDeclaration","scope":6125,"src":"3151:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3151:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6118,"mutability":"mutable","name":"withdrawal_credentials","nameLocation":"3197:22:20","nodeType":"VariableDeclaration","scope":6125,"src":"3182:37:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6117,"name":"bytes","nodeType":"ElementaryTypeName","src":"3182:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6120,"mutability":"mutable","name":"signature","nameLocation":"3244:9:20","nodeType":"VariableDeclaration","scope":6125,"src":"3229:24:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6119,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6122,"mutability":"mutable","name":"deposit_data_root","nameLocation":"3271:17:20","nodeType":"VariableDeclaration","scope":6125,"src":"3263:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3263:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3141:153:20"},"returnParameters":{"id":6124,"nodeType":"ParameterList","parameters":[],"src":"3311:0:20"},"scope":6138,"src":"3125:187:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":6126,"nodeType":"StructuredDocumentation","src":"3318:87:20","text":"@notice Query the current deposit root hash.\n @return The deposit root hash."},"functionSelector":"c5f2892f","id":6131,"implemented":false,"kind":"function","modifiers":[],"name":"get_deposit_root","nameLocation":"3419:16:20","nodeType":"FunctionDefinition","parameters":{"id":6127,"nodeType":"ParameterList","parameters":[],"src":"3435:2:20"},"returnParameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6131,"src":"3461:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3461:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3460:9:20"},"scope":6138,"src":"3410:60:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6132,"nodeType":"StructuredDocumentation","src":"3476:120:20","text":"@notice Query the current deposit count.\n @return The deposit count encoded as a little endian 64-bit number."},"functionSelector":"621fd130","id":6137,"implemented":false,"kind":"function","modifiers":[],"name":"get_deposit_count","nameLocation":"3610:17:20","nodeType":"FunctionDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[],"src":"3627:2:20"},"returnParameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6137,"src":"3653:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6134,"name":"bytes","nodeType":"ElementaryTypeName","src":"3653:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3652:14:20"},"scope":6138,"src":"3601:66:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6139,"src":"2566:1103:20","usedErrors":[],"usedEvents":[6113]}],"src":"2302:1368:20"},"id":20},"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol","exportedSymbols":{"BeaconChainProofs":[8293],"Endian":[8378],"IERC20":[1077],"IEigenPod":[6430],"IEigenPodManager":[6613],"Merkle":[8659]},"id":6431,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6140,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:21"},{"absolutePath":"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol","file":"../libraries/BeaconChainProofs.sol","id":6141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6431,"sourceUnit":8294,"src":"63:44:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","file":"./IEigenPodManager.sol","id":6142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6431,"sourceUnit":6614,"src":"108:32:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6431,"sourceUnit":1078,"src":"141:56:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IEigenPod","contractDependencies":[],"contractKind":"interface","documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"199:441:21","text":" @title The implementation contract used for restaking beacon chain ETH on EigenLayer\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @dev Note that all beacon chain balances are stored as gwei within the beacon chain datastructures. We choose\n   to account balances in terms of gwei in the EigenPod contract and convert to wei when making calls to other contracts"},"fullyImplemented":false,"id":6430,"linearizedBaseContracts":[6430],"name":"IEigenPod","nameLocation":"651:9:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IEigenPod.VALIDATOR_STATUS","documentation":{"id":6145,"nodeType":"StructuredDocumentation","src":"667:79:21","text":"                                STRUCTS / ENUMS"},"id":6149,"members":[{"id":6146,"name":"INACTIVE","nameLocation":"783:8:21","nodeType":"EnumValue","src":"783:8:21"},{"id":6147,"name":"ACTIVE","nameLocation":"817:6:21","nodeType":"EnumValue","src":"817:6:21"},{"id":6148,"name":"WITHDRAWN","nameLocation":"908:9:21","nodeType":"EnumValue","src":"908:9:21"}],"name":"VALIDATOR_STATUS","nameLocation":"756:16:21","nodeType":"EnumDefinition","src":"751:208:21"},{"canonicalName":"IEigenPod.ValidatorInfo","id":6159,"members":[{"constant":false,"id":6151,"mutability":"mutable","name":"validatorIndex","nameLocation":"1057:14:21","nodeType":"VariableDeclaration","scope":6159,"src":"1050:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6150,"name":"uint64","nodeType":"ElementaryTypeName","src":"1050:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6153,"mutability":"mutable","name":"restakedBalanceGwei","nameLocation":"1157:19:21","nodeType":"VariableDeclaration","scope":6159,"src":"1150:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6152,"name":"uint64","nodeType":"ElementaryTypeName","src":"1150:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6155,"mutability":"mutable","name":"lastCheckpointedAt","nameLocation":"1259:18:21","nodeType":"VariableDeclaration","scope":6159,"src":"1252:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6154,"name":"uint64","nodeType":"ElementaryTypeName","src":"1252:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6158,"mutability":"mutable","name":"status","nameLocation":"1339:6:21","nodeType":"VariableDeclaration","scope":6159,"src":"1322:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"},"typeName":{"id":6157,"nodeType":"UserDefinedTypeName","pathNode":{"id":6156,"name":"VALIDATOR_STATUS","nameLocations":["1322:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":6149,"src":"1322:16:21"},"referencedDeclaration":6149,"src":"1322:16:21","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"}},"visibility":"internal"}],"name":"ValidatorInfo","nameLocation":"972:13:21","nodeType":"StructDefinition","scope":6430,"src":"965:387:21","visibility":"public"},{"canonicalName":"IEigenPod.Checkpoint","id":6168,"members":[{"constant":false,"id":6161,"mutability":"mutable","name":"beaconBlockRoot","nameLocation":"1394:15:21","nodeType":"VariableDeclaration","scope":6168,"src":"1386:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1386:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6163,"mutability":"mutable","name":"proofsRemaining","nameLocation":"1426:15:21","nodeType":"VariableDeclaration","scope":6168,"src":"1419:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6162,"name":"uint24","nodeType":"ElementaryTypeName","src":"1419:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"podBalanceGwei","nameLocation":"1458:14:21","nodeType":"VariableDeclaration","scope":6168,"src":"1451:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6164,"name":"uint64","nodeType":"ElementaryTypeName","src":"1451:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"balanceDeltasGwei","nameLocation":"1489:17:21","nodeType":"VariableDeclaration","scope":6168,"src":"1482:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6166,"name":"int128","nodeType":"ElementaryTypeName","src":"1482:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1365:10:21","nodeType":"StructDefinition","scope":6430,"src":"1358:155:21","visibility":"public"},{"anonymous":false,"documentation":{"id":6169,"nodeType":"StructuredDocumentation","src":"1599:66:21","text":"@notice Emitted when an ETH validator stakes via this eigenPod"},"eventSelector":"606865b7934a25d4aed43f6cdb426403353fa4b3009c4d228407474581b01e23","id":6173,"name":"EigenPodStaked","nameLocation":"1676:14:21","nodeType":"EventDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"indexed":false,"mutability":"mutable","name":"pubkey","nameLocation":"1697:6:21","nodeType":"VariableDeclaration","scope":6173,"src":"1691:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6170,"name":"bytes","nodeType":"ElementaryTypeName","src":"1691:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1690:14:21"},"src":"1670:35:21"},{"anonymous":false,"documentation":{"id":6174,"nodeType":"StructuredDocumentation","src":"1711:72:21","text":"@notice Emitted when a pod owner updates the proof submitter address"},"eventSelector":"fb8129080a19d34dceac04ba253fc50304dc86c729bd63cdca4a969ad19a5eac","id":6180,"name":"ProofSubmitterUpdated","nameLocation":"1794:21:21","nodeType":"EventDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"indexed":false,"mutability":"mutable","name":"prevProofSubmitter","nameLocation":"1824:18:21","nodeType":"VariableDeclaration","scope":6180,"src":"1816:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6175,"name":"address","nodeType":"ElementaryTypeName","src":"1816:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6178,"indexed":false,"mutability":"mutable","name":"newProofSubmitter","nameLocation":"1852:17:21","nodeType":"VariableDeclaration","scope":6180,"src":"1844:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6177,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1815:55:21"},"src":"1788:83:21"},{"anonymous":false,"documentation":{"id":6181,"nodeType":"StructuredDocumentation","src":"1877:123:21","text":"@notice Emitted when an ETH validator's withdrawal credentials are successfully verified to be pointed to this eigenPod"},"eventSelector":"2d0800bbc377ea54a08c5db6a87aafff5e3e9c8fead0eda110e40e0c10441449","id":6185,"name":"ValidatorRestaked","nameLocation":"2011:17:21","nodeType":"EventDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"indexed":false,"mutability":"mutable","name":"validatorIndex","nameLocation":"2036:14:21","nodeType":"VariableDeclaration","scope":6185,"src":"2029:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6182,"name":"uint40","nodeType":"ElementaryTypeName","src":"2029:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"2028:23:21"},"src":"2005:47:21"},{"anonymous":false,"documentation":{"id":6186,"nodeType":"StructuredDocumentation","src":"2058:107:21","text":"@notice Emitted when an ETH validator's  balance is proven to be updated.  Here newValidatorBalanceGwei"},"eventSelector":"0e5fac175b83177cc047381e030d8fb3b42b37bd1c025e22c280facad62c32df","id":6194,"name":"ValidatorBalanceUpdated","nameLocation":"2243:23:21","nodeType":"EventDefinition","parameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"indexed":false,"mutability":"mutable","name":"validatorIndex","nameLocation":"2274:14:21","nodeType":"VariableDeclaration","scope":6194,"src":"2267:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6187,"name":"uint40","nodeType":"ElementaryTypeName","src":"2267:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":6190,"indexed":false,"mutability":"mutable","name":"balanceTimestamp","nameLocation":"2297:16:21","nodeType":"VariableDeclaration","scope":6194,"src":"2290:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6189,"name":"uint64","nodeType":"ElementaryTypeName","src":"2290:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6192,"indexed":false,"mutability":"mutable","name":"newValidatorBalanceGwei","nameLocation":"2322:23:21","nodeType":"VariableDeclaration","scope":6194,"src":"2315:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6191,"name":"uint64","nodeType":"ElementaryTypeName","src":"2315:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2266:80:21"},"src":"2237:110:21"},{"anonymous":false,"documentation":{"id":6195,"nodeType":"StructuredDocumentation","src":"2353:82:21","text":"@notice Emitted when restaked beacon chain ETH is withdrawn from the eigenPod."},"eventSelector":"8947fd2ce07ef9cc302c4e8f0461015615d91ce851564839e91cc804c2f49d8e","id":6201,"name":"RestakedBeaconChainETHWithdrawn","nameLocation":"2446:31:21","nodeType":"EventDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2494:9:21","nodeType":"VariableDeclaration","scope":6201,"src":"2478:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6196,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6199,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2513:6:21","nodeType":"VariableDeclaration","scope":6201,"src":"2505:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:43:21"},"src":"2440:81:21"},{"anonymous":false,"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"2527:67:21","text":"@notice Emitted when ETH is received via the `receive` fallback"},"eventSelector":"6fdd3dbdb173299608c0aa9f368735857c8842b581f8389238bf05bd04b3bf49","id":6206,"name":"NonBeaconChainETHReceived","nameLocation":"2605:25:21","nodeType":"EventDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"indexed":false,"mutability":"mutable","name":"amountReceived","nameLocation":"2639:14:21","nodeType":"VariableDeclaration","scope":6206,"src":"2631:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:24:21"},"src":"2599:56:21"},{"anonymous":false,"documentation":{"id":6207,"nodeType":"StructuredDocumentation","src":"2661:48:21","text":"@notice Emitted when a checkpoint is created"},"eventSelector":"575796133bbed337e5b39aa49a30dc2556a91e0c6c2af4b7b886ae77ebef1076","id":6215,"name":"CheckpointCreated","nameLocation":"2720:17:21","nodeType":"EventDefinition","parameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"indexed":true,"mutability":"mutable","name":"checkpointTimestamp","nameLocation":"2762:19:21","nodeType":"VariableDeclaration","scope":6215,"src":"2747:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6208,"name":"uint64","nodeType":"ElementaryTypeName","src":"2747:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6211,"indexed":true,"mutability":"mutable","name":"beaconBlockRoot","nameLocation":"2799:15:21","nodeType":"VariableDeclaration","scope":6215,"src":"2783:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2783:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6213,"indexed":false,"mutability":"mutable","name":"validatorCount","nameLocation":"2824:14:21","nodeType":"VariableDeclaration","scope":6215,"src":"2816:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2816:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2737:107:21"},"src":"2714:131:21"},{"anonymous":false,"documentation":{"id":6216,"nodeType":"StructuredDocumentation","src":"2851:50:21","text":"@notice Emitted when a checkpoint is finalized"},"eventSelector":"525408c201bc1576eb44116f6478f1c2a54775b19a043bcfdc708364f74f8e44","id":6222,"name":"CheckpointFinalized","nameLocation":"2912:19:21","nodeType":"EventDefinition","parameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"indexed":true,"mutability":"mutable","name":"checkpointTimestamp","nameLocation":"2947:19:21","nodeType":"VariableDeclaration","scope":6222,"src":"2932:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6217,"name":"uint64","nodeType":"ElementaryTypeName","src":"2932:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6220,"indexed":false,"mutability":"mutable","name":"totalShareDeltaWei","nameLocation":"2975:18:21","nodeType":"VariableDeclaration","scope":6222,"src":"2968:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6219,"name":"int256","nodeType":"ElementaryTypeName","src":"2968:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2931:63:21"},"src":"2906:89:21"},{"anonymous":false,"documentation":{"id":6223,"nodeType":"StructuredDocumentation","src":"3001:69:21","text":"@notice Emitted when a validator is proven for a given checkpoint"},"eventSelector":"a91c59033c3423e18b54d0acecebb4972f9ea95aedf5f4cae3b677b02eaf3a3f","id":6229,"name":"ValidatorCheckpointed","nameLocation":"3081:21:21","nodeType":"EventDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"indexed":true,"mutability":"mutable","name":"checkpointTimestamp","nameLocation":"3118:19:21","nodeType":"VariableDeclaration","scope":6229,"src":"3103:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6224,"name":"uint64","nodeType":"ElementaryTypeName","src":"3103:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6227,"indexed":true,"mutability":"mutable","name":"validatorIndex","nameLocation":"3154:14:21","nodeType":"VariableDeclaration","scope":6229,"src":"3139:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6226,"name":"uint40","nodeType":"ElementaryTypeName","src":"3139:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3102:67:21"},"src":"3075:95:21"},{"anonymous":false,"documentation":{"id":6230,"nodeType":"StructuredDocumentation","src":"3176:85:21","text":"@notice Emitted when a validaor is proven to have 0 balance at a given checkpoint"},"eventSelector":"2a02361ffa66cf2c2da4682c2355a6adcaa9f6c227b6e6563e68480f9587626a","id":6236,"name":"ValidatorWithdrawn","nameLocation":"3272:18:21","nodeType":"EventDefinition","parameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"indexed":true,"mutability":"mutable","name":"checkpointTimestamp","nameLocation":"3306:19:21","nodeType":"VariableDeclaration","scope":6236,"src":"3291:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6231,"name":"uint64","nodeType":"ElementaryTypeName","src":"3291:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6234,"indexed":true,"mutability":"mutable","name":"validatorIndex","nameLocation":"3342:14:21","nodeType":"VariableDeclaration","scope":6236,"src":"3327:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6233,"name":"uint40","nodeType":"ElementaryTypeName","src":"3327:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3290:67:21"},"src":"3266:92:21"},{"documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"3456:142:21","text":"@notice Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager"},"functionSelector":"c4d66de8","id":6242,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"3612:10:21","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"owner","nameLocation":"3631:5:21","nodeType":"VariableDeclaration","scope":6242,"src":"3623:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6238,"name":"address","nodeType":"ElementaryTypeName","src":"3623:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3622:15:21"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[],"src":"3646:0:21"},"scope":6430,"src":"3603:44:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6243,"nodeType":"StructuredDocumentation","src":"3653:91:21","text":"@notice Called by EigenPodManager when the owner wants to create another ETH validator."},"functionSelector":"9b4e4634","id":6252,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"3758:5:21","nodeType":"FunctionDefinition","parameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"pubkey","nameLocation":"3779:6:21","nodeType":"VariableDeclaration","scope":6252,"src":"3764:21:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6244,"name":"bytes","nodeType":"ElementaryTypeName","src":"3764:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6247,"mutability":"mutable","name":"signature","nameLocation":"3802:9:21","nodeType":"VariableDeclaration","scope":6252,"src":"3787:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6246,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6249,"mutability":"mutable","name":"depositDataRoot","nameLocation":"3821:15:21","nodeType":"VariableDeclaration","scope":6252,"src":"3813:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3813:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3763:74:21"},"returnParameters":{"id":6251,"nodeType":"ParameterList","parameters":[],"src":"3854:0:21"},"scope":6430,"src":"3749:106:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"3861:528:21","text":" @notice Transfers `amountWei` in ether from this contract to the specified `recipient` address\n @notice Called by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain.\n @dev The podOwner must have already proved sufficient withdrawals, so that this pod's `withdrawableRestakedExecutionLayerGwei` exceeds the\n `amountWei` input (when converted to GWEI).\n @dev Reverts if `amountWei` is not a whole Gwei amount"},"functionSelector":"c4907442","id":6260,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawRestakedBeaconChainETH","nameLocation":"4403:30:21","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"recipient","nameLocation":"4442:9:21","nodeType":"VariableDeclaration","scope":6260,"src":"4434:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6254,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6257,"mutability":"mutable","name":"amount","nameLocation":"4461:6:21","nodeType":"VariableDeclaration","scope":6260,"src":"4453:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6256,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4433:35:21"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[],"src":"4477:0:21"},"scope":6430,"src":"4394:84:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"4484:919:21","text":" @dev Create a checkpoint used to prove this pod's active validator set. Checkpoints are completed\n by submitting one checkpoint proof per ACTIVE validator. During the checkpoint process, the total\n change in ACTIVE validator balance is tracked, and any validators with 0 balance are marked `WITHDRAWN`.\n @dev Once finalized, the pod owner is awarded shares corresponding to:\n - the total change in their ACTIVE validator balances\n - any ETH in the pod not already awarded shares\n @dev A checkpoint cannot be created if the pod already has an outstanding checkpoint. If\n this is the case, the pod owner MUST complete the existing checkpoint before starting a new one.\n @param revertIfNoBalance Forces a revert if the pod ETH balance is 0. This allows the pod owner\n to prevent accidentally starting a checkpoint that will not increase their shares"},"functionSelector":"88676cad","id":6266,"implemented":false,"kind":"function","modifiers":[],"name":"startCheckpoint","nameLocation":"5417:15:21","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"revertIfNoBalance","nameLocation":"5438:17:21","nodeType":"VariableDeclaration","scope":6266,"src":"5433:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6262,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5432:24:21"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[],"src":"5465:0:21"},"scope":6430,"src":"5408:58:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6267,"nodeType":"StructuredDocumentation","src":"5472:763:21","text":" @dev Progress the current checkpoint towards completion by submitting one or more validator\n checkpoint proofs. Anyone can call this method to submit proofs towards the current checkpoint.\n For each validator proven, the current checkpoint's `proofsRemaining` decreases.\n @dev If the checkpoint's `proofsRemaining` reaches 0, the checkpoint is finalized.\n (see `_updateCheckpoint` for more details)\n @dev This method can only be called when there is a currently-active checkpoint.\n @param balanceContainerProof proves the beacon's current balance container root against a checkpoint's `beaconBlockRoot`\n @param proofs Proofs for one or more validator current balances against the `balanceContainerRoot`"},"functionSelector":"f074ba62","id":6277,"implemented":false,"kind":"function","modifiers":[],"name":"verifyCheckpointProofs","nameLocation":"6249:22:21","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"balanceContainerProof","nameLocation":"6330:21:21","nodeType":"VariableDeclaration","scope":6277,"src":"6281:70:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof"},"typeName":{"id":6269,"nodeType":"UserDefinedTypeName","pathNode":{"id":6268,"name":"BeaconChainProofs.BalanceContainerProof","nameLocations":["6281:17:21","6299:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":7943,"src":"6281:39:21"},"referencedDeclaration":7943,"src":"6281:39:21","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_storage_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof"}},"visibility":"internal"},{"constant":false,"id":6274,"mutability":"mutable","name":"proofs","nameLocation":"6403:6:21","nodeType":"VariableDeclaration","scope":6277,"src":"6361:48:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BalanceProof_$7951_calldata_ptr_$dyn_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceProof[]"},"typeName":{"baseType":{"id":6272,"nodeType":"UserDefinedTypeName","pathNode":{"id":6271,"name":"BeaconChainProofs.BalanceProof","nameLocations":["6361:17:21","6379:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":7951,"src":"6361:30:21"},"referencedDeclaration":7951,"src":"6361:30:21","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_storage_ptr","typeString":"struct BeaconChainProofs.BalanceProof"}},"id":6273,"nodeType":"ArrayTypeName","src":"6361:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BalanceProof_$7951_storage_$dyn_storage_ptr","typeString":"struct BeaconChainProofs.BalanceProof[]"}},"visibility":"internal"}],"src":"6271:144:21"},"returnParameters":{"id":6276,"nodeType":"ParameterList","parameters":[],"src":"6424:0:21"},"scope":6430,"src":"6240:185:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"6431:1136:21","text":" @dev Verify one or more validators have their withdrawal credentials pointed at this EigenPod, and award\n shares based on their effective balance. Proven validators are marked `ACTIVE` within the EigenPod, and\n future checkpoint proofs will need to include them.\n @dev Withdrawal credential proofs MUST NOT be older than `currentCheckpointTimestamp`.\n @dev Validators proven via this method MUST NOT have an exit epoch set already.\n @param beaconTimestamp the beacon chain timestamp sent to the 4788 oracle contract. Corresponds\n to the parent beacon block root against which the proof is verified.\n @param stateRootProof proves a beacon state root against a beacon block root\n @param validatorIndices a list of validator indices being proven\n @param validatorFieldsProofs proofs of each validator's `validatorFields` against the beacon state root\n @param validatorFields the fields of the beacon chain \"Validator\" container. See consensus specs for\n details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator"},"functionSelector":"3f65cf19","id":6296,"implemented":false,"kind":"function","modifiers":[],"name":"verifyWithdrawalCredentials","nameLocation":"7581:27:21","nodeType":"FunctionDefinition","parameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"beaconTimestamp","nameLocation":"7625:15:21","nodeType":"VariableDeclaration","scope":6296,"src":"7618:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6279,"name":"uint64","nodeType":"ElementaryTypeName","src":"7618:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6283,"mutability":"mutable","name":"stateRootProof","nameLocation":"7692:14:21","nodeType":"VariableDeclaration","scope":6296,"src":"7650:56:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_calldata_ptr","typeString":"struct BeaconChainProofs.StateRootProof"},"typeName":{"id":6282,"nodeType":"UserDefinedTypeName","pathNode":{"id":6281,"name":"BeaconChainProofs.StateRootProof","nameLocations":["7650:17:21","7668:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":7930,"src":"7650:32:21"},"referencedDeclaration":7930,"src":"7650:32:21","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_storage_ptr","typeString":"struct BeaconChainProofs.StateRootProof"}},"visibility":"internal"},{"constant":false,"id":6286,"mutability":"mutable","name":"validatorIndices","nameLocation":"7734:16:21","nodeType":"VariableDeclaration","scope":6296,"src":"7716:34:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":6284,"name":"uint40","nodeType":"ElementaryTypeName","src":"7716:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":6285,"nodeType":"ArrayTypeName","src":"7716:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"},{"constant":false,"id":6289,"mutability":"mutable","name":"validatorFieldsProofs","nameLocation":"7777:21:21","nodeType":"VariableDeclaration","scope":6296,"src":"7760:38:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6287,"name":"bytes","nodeType":"ElementaryTypeName","src":"7760:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6288,"nodeType":"ArrayTypeName","src":"7760:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":6293,"mutability":"mutable","name":"validatorFields","nameLocation":"7829:15:21","nodeType":"VariableDeclaration","scope":6296,"src":"7808:36:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[][]"},"typeName":{"baseType":{"baseType":{"id":6290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7808:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6291,"nodeType":"ArrayTypeName","src":"7808:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"id":6292,"nodeType":"ArrayTypeName","src":"7808:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr","typeString":"bytes32[][]"}},"visibility":"internal"}],"src":"7608:242:21"},"returnParameters":{"id":6295,"nodeType":"ParameterList","parameters":[],"src":"7859:0:21"},"scope":6430,"src":"7572:288:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"7866:2023:21","text":" @dev Prove that one of this pod's active validators was slashed on the beacon chain. A successful\n staleness proof allows the caller to start a checkpoint.\n @dev Note that in order to start a checkpoint, any existing checkpoint must already be completed!\n (See `_startCheckpoint` for details)\n @dev Note that this method allows anyone to start a checkpoint as soon as a slashing occurs on the beacon\n chain. This is intended to make it easier to external watchers to keep a pod's balance up to date.\n @dev Note too that beacon chain slashings are not instant. There is a delay between the initial slashing event\n and the validator's final exit back to the execution layer. During this time, the validator's balance may or\n may not drop further due to a correlation penalty. This method allows proof of a slashed validator\n to initiate a checkpoint for as long as the validator remains on the beacon chain. Once the validator\n has exited and been checkpointed at 0 balance, they are no longer \"checkpoint-able\" and cannot be proven\n \"stale\" via this method.\n See https://eth2book.info/capella/part3/transition/epoch/#slashings for more info.\n @param beaconTimestamp the beacon chain timestamp sent to the 4788 oracle contract. Corresponds\n to the parent beacon block root against which the proof is verified.\n @param stateRootProof proves a beacon state root against a beacon block root\n @param proof the fields of the beacon chain \"Validator\" container, along with a merkle proof against\n the beacon state root. See the consensus specs for more details:\n https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\n @dev Staleness conditions:\n - Validator's last checkpoint is older than `beaconTimestamp`\n - Validator MUST be in `ACTIVE` status in the pod\n - Validator MUST be slashed on the beacon chain"},"functionSelector":"039157d2","id":6308,"implemented":false,"kind":"function","modifiers":[],"name":"verifyStaleBalance","nameLocation":"9903:18:21","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"beaconTimestamp","nameLocation":"9938:15:21","nodeType":"VariableDeclaration","scope":6308,"src":"9931:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6298,"name":"uint64","nodeType":"ElementaryTypeName","src":"9931:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6302,"mutability":"mutable","name":"stateRootProof","nameLocation":"10005:14:21","nodeType":"VariableDeclaration","scope":6308,"src":"9963:56:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_calldata_ptr","typeString":"struct BeaconChainProofs.StateRootProof"},"typeName":{"id":6301,"nodeType":"UserDefinedTypeName","pathNode":{"id":6300,"name":"BeaconChainProofs.StateRootProof","nameLocations":["9963:17:21","9981:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":7930,"src":"9963:32:21"},"referencedDeclaration":7930,"src":"9963:32:21","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_storage_ptr","typeString":"struct BeaconChainProofs.StateRootProof"}},"visibility":"internal"},{"constant":false,"id":6305,"mutability":"mutable","name":"proof","nameLocation":"10071:5:21","nodeType":"VariableDeclaration","scope":6308,"src":"10029:47:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorProof_$7937_calldata_ptr","typeString":"struct BeaconChainProofs.ValidatorProof"},"typeName":{"id":6304,"nodeType":"UserDefinedTypeName","pathNode":{"id":6303,"name":"BeaconChainProofs.ValidatorProof","nameLocations":["10029:17:21","10047:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":7937,"src":"10029:32:21"},"referencedDeclaration":7937,"src":"10029:32:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorProof_$7937_storage_ptr","typeString":"struct BeaconChainProofs.ValidatorProof"}},"visibility":"internal"}],"src":"9921:161:21"},"returnParameters":{"id":6307,"nodeType":"ParameterList","parameters":[],"src":"10091:0:21"},"scope":6430,"src":"9894:198:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"10098:78:21","text":"@notice called by owner of a pod to remove any ERC20s deposited in the pod"},"functionSelector":"dda3346c","id":6321,"implemented":false,"kind":"function","modifiers":[],"name":"recoverTokens","nameLocation":"10190:13:21","nodeType":"FunctionDefinition","parameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"tokenList","nameLocation":"10220:9:21","nodeType":"VariableDeclaration","scope":6321,"src":"10204:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1077_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":6311,"nodeType":"UserDefinedTypeName","pathNode":{"id":6310,"name":"IERC20","nameLocations":["10204:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"10204:6:21"},"referencedDeclaration":1077,"src":"10204:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"id":6312,"nodeType":"ArrayTypeName","src":"10204:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1077_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":6316,"mutability":"mutable","name":"amountsToWithdraw","nameLocation":"10248:17:21","nodeType":"VariableDeclaration","scope":6321,"src":"10231:34:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6315,"nodeType":"ArrayTypeName","src":"10231:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6318,"mutability":"mutable","name":"recipient","nameLocation":"10275:9:21","nodeType":"VariableDeclaration","scope":6321,"src":"10267:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6317,"name":"address","nodeType":"ElementaryTypeName","src":"10267:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10203:82:21"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[],"src":"10294:0:21"},"scope":6430,"src":"10181:114:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6322,"nodeType":"StructuredDocumentation","src":"10301:570:21","text":"@notice Allows the owner of a pod to update the proof submitter, a permissioned\n address that can call `startCheckpoint` and `verifyWithdrawalCredentials`.\n @dev Note that EITHER the podOwner OR proofSubmitter can access these methods,\n so it's fine to set your proofSubmitter to 0 if you want the podOwner to be the\n only address that can call these methods.\n @param newProofSubmitter The new proof submitter address. If set to 0, only the\n pod owner will be able to call `startCheckpoint` and `verifyWithdrawalCredentials`"},"functionSelector":"d06d5587","id":6327,"implemented":false,"kind":"function","modifiers":[],"name":"setProofSubmitter","nameLocation":"10885:17:21","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"newProofSubmitter","nameLocation":"10911:17:21","nodeType":"VariableDeclaration","scope":6327,"src":"10903:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6323,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10902:27:21"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[],"src":"10938:0:21"},"scope":6430,"src":"10876:63:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6328,"nodeType":"StructuredDocumentation","src":"11027:430:21","text":"@notice An address with permissions to call `startCheckpoint` and `verifyWithdrawalCredentials`, set\n by the podOwner. This role exists to allow a podOwner to designate a hot wallet that can call\n these methods, allowing the podOwner to remain a cold wallet that is only used to manage funds.\n @dev If this address is NOT set, only the podOwner can call `startCheckpoint` and `verifyWithdrawalCredentials`"},"functionSelector":"58753357","id":6333,"implemented":false,"kind":"function","modifiers":[],"name":"proofSubmitter","nameLocation":"11471:14:21","nodeType":"FunctionDefinition","parameters":{"id":6329,"nodeType":"ParameterList","parameters":[],"src":"11485:2:21"},"returnParameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6333,"src":"11511:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6330,"name":"address","nodeType":"ElementaryTypeName","src":"11511:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11510:9:21"},"scope":6430,"src":"11462:58:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6334,"nodeType":"StructuredDocumentation","src":"11526:145:21","text":"@notice the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),"},"functionSelector":"3474aa16","id":6339,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawableRestakedExecutionLayerGwei","nameLocation":"11685:38:21","nodeType":"FunctionDefinition","parameters":{"id":6335,"nodeType":"ParameterList","parameters":[],"src":"11723:2:21"},"returnParameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6339,"src":"11749:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6336,"name":"uint64","nodeType":"ElementaryTypeName","src":"11749:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11748:8:21"},"scope":6430,"src":"11676:81:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"11763:53:21","text":"@notice The single EigenPodManager for EigenLayer"},"functionSelector":"4665bcda","id":6346,"implemented":false,"kind":"function","modifiers":[],"name":"eigenPodManager","nameLocation":"11830:15:21","nodeType":"FunctionDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[],"src":"11845:2:21"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"11871:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"},"typeName":{"id":6343,"nodeType":"UserDefinedTypeName","pathNode":{"id":6342,"name":"IEigenPodManager","nameLocations":["11871:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":6613,"src":"11871:16:21"},"referencedDeclaration":6613,"src":"11871:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"visibility":"internal"}],"src":"11870:18:21"},"scope":6430,"src":"11821:68:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"11895:38:21","text":"@notice The owner of this EigenPod"},"functionSelector":"0b18ff66","id":6352,"implemented":false,"kind":"function","modifiers":[],"name":"podOwner","nameLocation":"11947:8:21","nodeType":"FunctionDefinition","parameters":{"id":6348,"nodeType":"ParameterList","parameters":[],"src":"11955:2:21"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6352,"src":"11981:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6349,"name":"address","nodeType":"ElementaryTypeName","src":"11981:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11980:9:21"},"scope":6430,"src":"11938:52:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6353,"nodeType":"StructuredDocumentation","src":"11996:72:21","text":"@notice Returns the validatorInfo struct for the provided pubkeyHash"},"functionSelector":"6fcd0e53","id":6361,"implemented":false,"kind":"function","modifiers":[],"name":"validatorPubkeyHashToInfo","nameLocation":"12082:25:21","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"validatorPubkeyHash","nameLocation":"12116:19:21","nodeType":"VariableDeclaration","scope":6361,"src":"12108:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12108:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12107:29:21"},"returnParameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6361,"src":"12160:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$6159_memory_ptr","typeString":"struct IEigenPod.ValidatorInfo"},"typeName":{"id":6358,"nodeType":"UserDefinedTypeName","pathNode":{"id":6357,"name":"ValidatorInfo","nameLocations":["12160:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"12160:13:21"},"referencedDeclaration":6159,"src":"12160:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$6159_storage_ptr","typeString":"struct IEigenPod.ValidatorInfo"}},"visibility":"internal"}],"src":"12159:22:21"},"scope":6430,"src":"12073:109:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6362,"nodeType":"StructuredDocumentation","src":"12188:68:21","text":"@notice Returns the validatorInfo struct for the provided pubkey"},"functionSelector":"b522538a","id":6370,"implemented":false,"kind":"function","modifiers":[],"name":"validatorPubkeyToInfo","nameLocation":"12270:21:21","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"validatorPubkey","nameLocation":"12307:15:21","nodeType":"VariableDeclaration","scope":6370,"src":"12292:30:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6363,"name":"bytes","nodeType":"ElementaryTypeName","src":"12292:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12291:32:21"},"returnParameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6370,"src":"12347:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$6159_memory_ptr","typeString":"struct IEigenPod.ValidatorInfo"},"typeName":{"id":6367,"nodeType":"UserDefinedTypeName","pathNode":{"id":6366,"name":"ValidatorInfo","nameLocations":["12347:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"12347:13:21"},"referencedDeclaration":6159,"src":"12347:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$6159_storage_ptr","typeString":"struct IEigenPod.ValidatorInfo"}},"visibility":"internal"}],"src":"12346:22:21"},"scope":6430,"src":"12261:108:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6371,"nodeType":"StructuredDocumentation","src":"12375:56:21","text":"@notice This returns the status of a given validator"},"functionSelector":"7439841f","id":6379,"implemented":false,"kind":"function","modifiers":[],"name":"validatorStatus","nameLocation":"12445:15:21","nodeType":"FunctionDefinition","parameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"pubkeyHash","nameLocation":"12469:10:21","nodeType":"VariableDeclaration","scope":6379,"src":"12461:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12461:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12460:20:21"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6379,"src":"12504:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"},"typeName":{"id":6376,"nodeType":"UserDefinedTypeName","pathNode":{"id":6375,"name":"VALIDATOR_STATUS","nameLocations":["12504:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":6149,"src":"12504:16:21"},"referencedDeclaration":6149,"src":"12504:16:21","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"}},"visibility":"internal"}],"src":"12503:18:21"},"scope":6430,"src":"12436:86:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6380,"nodeType":"StructuredDocumentation","src":"12528:63:21","text":"@notice This returns the status of a given validator pubkey"},"functionSelector":"58eaee79","id":6388,"implemented":false,"kind":"function","modifiers":[],"name":"validatorStatus","nameLocation":"12605:15:21","nodeType":"FunctionDefinition","parameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"validatorPubkey","nameLocation":"12636:15:21","nodeType":"VariableDeclaration","scope":6388,"src":"12621:30:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6381,"name":"bytes","nodeType":"ElementaryTypeName","src":"12621:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12620:32:21"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6388,"src":"12676:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"},"typeName":{"id":6385,"nodeType":"UserDefinedTypeName","pathNode":{"id":6384,"name":"VALIDATOR_STATUS","nameLocations":["12676:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":6149,"src":"12676:16:21"},"referencedDeclaration":6149,"src":"12676:16:21","typeDescriptions":{"typeIdentifier":"t_enum$_VALIDATOR_STATUS_$6149","typeString":"enum IEigenPod.VALIDATOR_STATUS"}},"visibility":"internal"}],"src":"12675:18:21"},"scope":6430,"src":"12596:98:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6389,"nodeType":"StructuredDocumentation","src":"12700:108:21","text":"@notice Number of validators with proven withdrawal credentials, who do not have proven full withdrawals"},"functionSelector":"2340e8d3","id":6394,"implemented":false,"kind":"function","modifiers":[],"name":"activeValidatorCount","nameLocation":"12822:20:21","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[],"src":"12842:2:21"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6394,"src":"12868:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"12868:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12867:9:21"},"scope":6430,"src":"12813:64:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"12883:58:21","text":"@notice The timestamp of the last checkpoint finalized"},"functionSelector":"ee94d67c","id":6400,"implemented":false,"kind":"function","modifiers":[],"name":"lastCheckpointTimestamp","nameLocation":"12955:23:21","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[],"src":"12978:2:21"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6400,"src":"13004:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6397,"name":"uint64","nodeType":"ElementaryTypeName","src":"13004:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13003:8:21"},"scope":6430,"src":"12946:66:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6401,"nodeType":"StructuredDocumentation","src":"13018:105:21","text":"@notice The timestamp of the currently-active checkpoint. Will be 0 if there is not active checkpoint"},"functionSelector":"42ecff2a","id":6406,"implemented":false,"kind":"function","modifiers":[],"name":"currentCheckpointTimestamp","nameLocation":"13137:26:21","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[],"src":"13163:2:21"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6406,"src":"13189:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6403,"name":"uint64","nodeType":"ElementaryTypeName","src":"13189:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13188:8:21"},"scope":6430,"src":"13128:69:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6407,"nodeType":"StructuredDocumentation","src":"13203:51:21","text":"@notice Returns the currently-active checkpoint"},"functionSelector":"47d28372","id":6413,"implemented":false,"kind":"function","modifiers":[],"name":"currentCheckpoint","nameLocation":"13268:17:21","nodeType":"FunctionDefinition","parameters":{"id":6408,"nodeType":"ParameterList","parameters":[],"src":"13285:2:21"},"returnParameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6413,"src":"13311:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$6168_memory_ptr","typeString":"struct IEigenPod.Checkpoint"},"typeName":{"id":6410,"nodeType":"UserDefinedTypeName","pathNode":{"id":6409,"name":"Checkpoint","nameLocations":["13311:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"13311:10:21"},"referencedDeclaration":6168,"src":"13311:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$6168_storage_ptr","typeString":"struct IEigenPod.Checkpoint"}},"visibility":"internal"}],"src":"13310:19:21"},"scope":6430,"src":"13259:71:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"13336:2296:21","text":"@notice For each checkpoint, the total balance attributed to exited validators, in gwei\n NOTE that the values added to this mapping are NOT guaranteed to capture the entirety of a validator's\n exit - rather, they capture the total change in a validator's balance when a checkpoint shows their\n balance change from nonzero to zero. While a change from nonzero to zero DOES guarantee that a validator\n has been fully exited, it is possible that the magnitude of this change does not capture what is\n typically thought of as a \"full exit.\"\n For example:\n 1. Consider a validator was last checkpointed at 32 ETH before exiting. Once the exit has been processed,\n it is expected that the validator's exited balance is calculated to be `32 ETH`.\n 2. However, before `startCheckpoint` is called, a deposit is made to the validator for 1 ETH. The beacon\n chain will automatically withdraw this ETH, but not until the withdrawal sweep passes over the validator\n again. Until this occurs, the validator's current balance (used for checkpointing) is 1 ETH.\n 3. If `startCheckpoint` is called at this point, the balance delta calculated for this validator will be\n `-31 ETH`, and because the validator has a nonzero balance, it is not marked WITHDRAWN.\n 4. After the exit is processed by the beacon chain, a subsequent `startCheckpoint` and checkpoint proof\n will calculate a balance delta of `-1 ETH` and attribute a 1 ETH exit to the validator.\n If this edge case impacts your usecase, it should be possible to mitigate this by monitoring for deposits\n to your exited validators, and waiting to call `startCheckpoint` until those deposits have been automatically\n exited.\n Additional edge cases this mapping does not cover:\n - If a validator is slashed, their balance exited will reflect their original balance rather than the slashed amount\n - The final partial withdrawal for an exited validator will be likely be included in this mapping.\n   i.e. if a validator was last checkpointed at 32.1 ETH before exiting, the next checkpoint will calculate their\n   \"exited\" amount to be 32.1 ETH rather than 32 ETH."},"functionSelector":"52396a59","id":6421,"implemented":false,"kind":"function","modifiers":[],"name":"checkpointBalanceExitedGwei","nameLocation":"15646:27:21","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6421,"src":"15674:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6415,"name":"uint64","nodeType":"ElementaryTypeName","src":"15674:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15673:8:21"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6421,"src":"15705:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6418,"name":"uint64","nodeType":"ElementaryTypeName","src":"15705:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15704:8:21"},"scope":6430,"src":"15637:76:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"15719:332:21","text":"@notice Query the 4788 oracle to get the parent block root of the slot with the given `timestamp`\n @param timestamp of the block for which the parent block root will be returned. MUST correspond\n to an existing slot within the last 24 hours. If the slot at `timestamp` was skipped, this method\n will revert."},"functionSelector":"6c0d2d5a","id":6429,"implemented":false,"kind":"function","modifiers":[],"name":"getParentBlockRoot","nameLocation":"16065:18:21","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"timestamp","nameLocation":"16091:9:21","nodeType":"VariableDeclaration","scope":6429,"src":"16084:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6423,"name":"uint64","nodeType":"ElementaryTypeName","src":"16084:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"16083:18:21"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6429,"src":"16125:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16125:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16124:9:21"},"scope":6430,"src":"16056:78:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6431,"src":"641:15495:21","usedErrors":[],"usedEvents":[6173,6180,6185,6194,6201,6206,6215,6222,6229,6236]}],"src":"37:16100:21"},"id":21},"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","exportedSymbols":{"BeaconChainProofs":[8293],"Endian":[8378],"IBeacon":[999],"IDelegationManager":[6097],"IERC20":[1077],"IETHPOSDeposit":[6138],"IEigenPod":[6430],"IEigenPodManager":[6613],"IPausable":[6685],"IPauserRegistry":[6715],"ISignatureUtils":[7258],"ISlasher":[7497],"IStrategy":[7612],"IStrategyManager":[7850],"Merkle":[8659]},"id":6614,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6432,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:22"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","id":6433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":1000,"src":"63:58:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol","file":"./IETHPOSDeposit.sol","id":6434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":6139,"src":"122:30:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol","file":"./IStrategyManager.sol","id":6435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":7851,"src":"153:32:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol","file":"./IEigenPod.sol","id":6436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":6431,"src":"186:25:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol","file":"./IPausable.sol","id":6437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":6686,"src":"212:25:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol","file":"./ISlasher.sol","id":6438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":7498,"src":"238:24:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","file":"./IStrategy.sol","id":6439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6614,"sourceUnit":7613,"src":"263:25:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6441,"name":"IPausable","nameLocations":["575:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":6685,"src":"575:9:22"},"id":6442,"nodeType":"InheritanceSpecifier","src":"575:9:22"}],"canonicalName":"IEigenPodManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":6440,"nodeType":"StructuredDocumentation","src":"290:254:22","text":" @title Interface for factory that creates and manages solo staking pods that have their withdrawal credentials pointed to EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service"},"fullyImplemented":false,"id":6613,"linearizedBaseContracts":[6613,6685],"name":"IEigenPodManager","nameLocation":"555:16:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"591:59:22","text":"@notice Emitted to notify the deployment of an EigenPod"},"eventSelector":"21c99d0db02213c32fff5b05cf0a718ab5f858802b91498f80d82270289d856a","id":6449,"name":"PodDeployed","nameLocation":"661:11:22","nodeType":"EventDefinition","parameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"indexed":true,"mutability":"mutable","name":"eigenPod","nameLocation":"689:8:22","nodeType":"VariableDeclaration","scope":6449,"src":"673:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6444,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6447,"indexed":true,"mutability":"mutable","name":"podOwner","nameLocation":"715:8:22","nodeType":"VariableDeclaration","scope":6449,"src":"699:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6446,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"672:52:22"},"src":"655:70:22"},{"anonymous":false,"documentation":{"id":6450,"nodeType":"StructuredDocumentation","src":"731:92:22","text":"@notice Emitted to notify a deposit of beacon chain ETH recorded in the strategy manager"},"eventSelector":"35a85cabc603f48abb2b71d9fbd8adea7c449d7f0be900ae7a2986ea369c3d0d","id":6456,"name":"BeaconChainETHDeposited","nameLocation":"834:23:22","nodeType":"EventDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"indexed":true,"mutability":"mutable","name":"podOwner","nameLocation":"874:8:22","nodeType":"VariableDeclaration","scope":6456,"src":"858:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6451,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6454,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"892:6:22","nodeType":"VariableDeclaration","scope":6456,"src":"884:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"857:42:22"},"src":"828:72:22"},{"anonymous":false,"documentation":{"id":6457,"nodeType":"StructuredDocumentation","src":"906:62:22","text":"@notice Emitted when the balance of an EigenPod is updated"},"eventSelector":"4e2b791dedccd9fb30141b088cabf5c14a8912b52f59375c95c010700b8c6193","id":6463,"name":"PodSharesUpdated","nameLocation":"979:16:22","nodeType":"EventDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"indexed":true,"mutability":"mutable","name":"podOwner","nameLocation":"1012:8:22","nodeType":"VariableDeclaration","scope":6463,"src":"996:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6458,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6461,"indexed":false,"mutability":"mutable","name":"sharesDelta","nameLocation":"1029:11:22","nodeType":"VariableDeclaration","scope":6463,"src":"1022:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6460,"name":"int256","nodeType":"ElementaryTypeName","src":"1022:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"995:46:22"},"src":"973:69:22"},{"anonymous":false,"documentation":{"id":6464,"nodeType":"StructuredDocumentation","src":"1048:68:22","text":"@notice Emitted every time the total shares of a pod are updated"},"eventSelector":"d4def76d6d2bed6f14d5cd9af73cc2913d618d00edde42432e81c09bfe077098","id":6470,"name":"NewTotalShares","nameLocation":"1127:14:22","nodeType":"EventDefinition","parameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"indexed":true,"mutability":"mutable","name":"podOwner","nameLocation":"1158:8:22","nodeType":"VariableDeclaration","scope":6470,"src":"1142:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6465,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6468,"indexed":false,"mutability":"mutable","name":"newTotalShares","nameLocation":"1175:14:22","nodeType":"VariableDeclaration","scope":6470,"src":"1168:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6467,"name":"int256","nodeType":"ElementaryTypeName","src":"1168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1141:49:22"},"src":"1121:70:22"},{"anonymous":false,"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"1197:70:22","text":"@notice Emitted when a withdrawal of beacon chain ETH is completed"},"eventSelector":"a6bab1d55a361fcea2eee2bc9491e4f01e6cf333df03c9c4f2c144466429f7d6","id":6485,"name":"BeaconChainETHWithdrawalCompleted","nameLocation":"1278:33:22","nodeType":"EventDefinition","parameters":{"id":6484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"indexed":true,"mutability":"mutable","name":"podOwner","nameLocation":"1337:8:22","nodeType":"VariableDeclaration","scope":6485,"src":"1321:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6472,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6475,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1363:6:22","nodeType":"VariableDeclaration","scope":6485,"src":"1355:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6477,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1386:5:22","nodeType":"VariableDeclaration","scope":6485,"src":"1379:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6476,"name":"uint96","nodeType":"ElementaryTypeName","src":"1379:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":6479,"indexed":false,"mutability":"mutable","name":"delegatedAddress","nameLocation":"1409:16:22","nodeType":"VariableDeclaration","scope":6485,"src":"1401:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6478,"name":"address","nodeType":"ElementaryTypeName","src":"1401:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6481,"indexed":false,"mutability":"mutable","name":"withdrawer","nameLocation":"1443:10:22","nodeType":"VariableDeclaration","scope":6485,"src":"1435:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6480,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6483,"indexed":false,"mutability":"mutable","name":"withdrawalRoot","nameLocation":"1471:14:22","nodeType":"VariableDeclaration","scope":6485,"src":"1463:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1463:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1311:180:22"},"src":"1272:220:22"},{"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"1498:177:22","text":" @notice Creates an EigenPod for the sender.\n @dev Function will revert if the `msg.sender` already has an EigenPod.\n @dev Returns EigenPod address"},"functionSelector":"84d81062","id":6491,"implemented":false,"kind":"function","modifiers":[],"name":"createPod","nameLocation":"1689:9:22","nodeType":"FunctionDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[],"src":"1698:2:22"},"returnParameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6491,"src":"1719:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6488,"name":"address","nodeType":"ElementaryTypeName","src":"1719:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1718:9:22"},"scope":6613,"src":"1680:48:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"1734:411:22","text":" @notice Stakes for a new beacon chain validator on the sender's EigenPod.\n Also creates an EigenPod for the sender if they don't have one already.\n @param pubkey The 48 bytes public key of the beacon chain validator.\n @param signature The validator's signature of the deposit data.\n @param depositDataRoot The root/hash of the deposit data for the validator's deposit."},"functionSelector":"9b4e4634","id":6501,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"2159:5:22","nodeType":"FunctionDefinition","parameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"pubkey","nameLocation":"2180:6:22","nodeType":"VariableDeclaration","scope":6501,"src":"2165:21:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2165:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6496,"mutability":"mutable","name":"signature","nameLocation":"2203:9:22","nodeType":"VariableDeclaration","scope":6501,"src":"2188:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6495,"name":"bytes","nodeType":"ElementaryTypeName","src":"2188:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"depositDataRoot","nameLocation":"2222:15:22","nodeType":"VariableDeclaration","scope":6501,"src":"2214:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2164:74:22"},"returnParameters":{"id":6500,"nodeType":"ParameterList","parameters":[],"src":"2255:0:22"},"scope":6613,"src":"2150:106:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"2262:469:22","text":" @notice Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager\n to ensure that delegated shares are also tracked correctly\n @param podOwner is the pod owner whose balance is being updated.\n @param sharesDelta is the change in podOwner's beaconChainETHStrategy shares\n @dev Callable only by the podOwner's EigenPod contract.\n @dev Reverts if `sharesDelta` is not a whole Gwei amount"},"functionSelector":"c2c51c40","id":6509,"implemented":false,"kind":"function","modifiers":[],"name":"recordBeaconChainETHBalanceUpdate","nameLocation":"2745:33:22","nodeType":"FunctionDefinition","parameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"podOwner","nameLocation":"2787:8:22","nodeType":"VariableDeclaration","scope":6509,"src":"2779:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6503,"name":"address","nodeType":"ElementaryTypeName","src":"2779:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"sharesDelta","nameLocation":"2804:11:22","nodeType":"VariableDeclaration","scope":6509,"src":"2797:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6505,"name":"int256","nodeType":"ElementaryTypeName","src":"2797:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2778:38:22"},"returnParameters":{"id":6508,"nodeType":"ParameterList","parameters":[],"src":"2825:0:22"},"scope":6613,"src":"2736:90:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6510,"nodeType":"StructuredDocumentation","src":"2832:85:22","text":"@notice Returns the address of the `podOwner`'s EigenPod if it has been deployed."},"functionSelector":"9ba06275","id":6518,"implemented":false,"kind":"function","modifiers":[],"name":"ownerToPod","nameLocation":"2931:10:22","nodeType":"FunctionDefinition","parameters":{"id":6513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6512,"mutability":"mutable","name":"podOwner","nameLocation":"2950:8:22","nodeType":"VariableDeclaration","scope":6518,"src":"2942:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6511,"name":"address","nodeType":"ElementaryTypeName","src":"2942:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2941:18:22"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6518,"src":"2983:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPod_$6430","typeString":"contract IEigenPod"},"typeName":{"id":6515,"nodeType":"UserDefinedTypeName","pathNode":{"id":6514,"name":"IEigenPod","nameLocations":["2983:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"2983:9:22"},"referencedDeclaration":6430,"src":"2983:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPod_$6430","typeString":"contract IEigenPod"}},"visibility":"internal"}],"src":"2982:11:22"},"scope":6613,"src":"2922:72:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6519,"nodeType":"StructuredDocumentation","src":"3000:97:22","text":"@notice Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not)."},"functionSelector":"a38406a3","id":6527,"implemented":false,"kind":"function","modifiers":[],"name":"getPod","nameLocation":"3111:6:22","nodeType":"FunctionDefinition","parameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"podOwner","nameLocation":"3126:8:22","nodeType":"VariableDeclaration","scope":6527,"src":"3118:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6520,"name":"address","nodeType":"ElementaryTypeName","src":"3118:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3117:18:22"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6527,"src":"3159:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPod_$6430","typeString":"contract IEigenPod"},"typeName":{"id":6524,"nodeType":"UserDefinedTypeName","pathNode":{"id":6523,"name":"IEigenPod","nameLocations":["3159:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"3159:9:22"},"referencedDeclaration":6430,"src":"3159:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPod_$6430","typeString":"contract IEigenPod"}},"visibility":"internal"}],"src":"3158:11:22"},"scope":6613,"src":"3102:68:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6528,"nodeType":"StructuredDocumentation","src":"3176:37:22","text":"@notice The ETH2 Deposit Contract"},"functionSelector":"74cdd798","id":6534,"implemented":false,"kind":"function","modifiers":[],"name":"ethPOS","nameLocation":"3227:6:22","nodeType":"FunctionDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[],"src":"3233:2:22"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6534,"src":"3259:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IETHPOSDeposit_$6138","typeString":"contract IETHPOSDeposit"},"typeName":{"id":6531,"nodeType":"UserDefinedTypeName","pathNode":{"id":6530,"name":"IETHPOSDeposit","nameLocations":["3259:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":6138,"src":"3259:14:22"},"referencedDeclaration":6138,"src":"3259:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_IETHPOSDeposit_$6138","typeString":"contract IETHPOSDeposit"}},"visibility":"internal"}],"src":"3258:16:22"},"scope":6613,"src":"3218:57:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6535,"nodeType":"StructuredDocumentation","src":"3281:53:22","text":"@notice Beacon proxy to which the EigenPods point"},"functionSelector":"292b7b2b","id":6541,"implemented":false,"kind":"function","modifiers":[],"name":"eigenPodBeacon","nameLocation":"3348:14:22","nodeType":"FunctionDefinition","parameters":{"id":6536,"nodeType":"ParameterList","parameters":[],"src":"3362:2:22"},"returnParameters":{"id":6540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6541,"src":"3388:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$999","typeString":"contract IBeacon"},"typeName":{"id":6538,"nodeType":"UserDefinedTypeName","pathNode":{"id":6537,"name":"IBeacon","nameLocations":["3388:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"3388:7:22"},"referencedDeclaration":999,"src":"3388:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$999","typeString":"contract IBeacon"}},"visibility":"internal"}],"src":"3387:9:22"},"scope":6613,"src":"3339:58:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"3403:49:22","text":"@notice EigenLayer's StrategyManager contract"},"functionSelector":"39b70e38","id":6548,"implemented":false,"kind":"function","modifiers":[],"name":"strategyManager","nameLocation":"3466:15:22","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[],"src":"3481:2:22"},"returnParameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6548,"src":"3507:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategyManager_$7850","typeString":"contract IStrategyManager"},"typeName":{"id":6545,"nodeType":"UserDefinedTypeName","pathNode":{"id":6544,"name":"IStrategyManager","nameLocations":["3507:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7850,"src":"3507:16:22"},"referencedDeclaration":7850,"src":"3507:16:22","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategyManager_$7850","typeString":"contract IStrategyManager"}},"visibility":"internal"}],"src":"3506:18:22"},"scope":6613,"src":"3457:68:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6549,"nodeType":"StructuredDocumentation","src":"3531:41:22","text":"@notice EigenLayer's Slasher contract"},"functionSelector":"b1344271","id":6555,"implemented":false,"kind":"function","modifiers":[],"name":"slasher","nameLocation":"3586:7:22","nodeType":"FunctionDefinition","parameters":{"id":6550,"nodeType":"ParameterList","parameters":[],"src":"3593:2:22"},"returnParameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6555,"src":"3619:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISlasher_$7497","typeString":"contract ISlasher"},"typeName":{"id":6552,"nodeType":"UserDefinedTypeName","pathNode":{"id":6551,"name":"ISlasher","nameLocations":["3619:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":7497,"src":"3619:8:22"},"referencedDeclaration":7497,"src":"3619:8:22","typeDescriptions":{"typeIdentifier":"t_contract$_ISlasher_$7497","typeString":"contract ISlasher"}},"visibility":"internal"}],"src":"3618:10:22"},"scope":6613,"src":"3577:52:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6556,"nodeType":"StructuredDocumentation","src":"3635:92:22","text":"@notice Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise."},"functionSelector":"f6848d24","id":6563,"implemented":false,"kind":"function","modifiers":[],"name":"hasPod","nameLocation":"3741:6:22","nodeType":"FunctionDefinition","parameters":{"id":6559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6558,"mutability":"mutable","name":"podOwner","nameLocation":"3756:8:22","nodeType":"VariableDeclaration","scope":6563,"src":"3748:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6557,"name":"address","nodeType":"ElementaryTypeName","src":"3748:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3747:18:22"},"returnParameters":{"id":6562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6563,"src":"3789:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6560,"name":"bool","nodeType":"ElementaryTypeName","src":"3789:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3788:6:22"},"scope":6613,"src":"3732:63:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"3801:66:22","text":"@notice Returns the number of EigenPods that have been created"},"functionSelector":"a6a509be","id":6569,"implemented":false,"kind":"function","modifiers":[],"name":"numPods","nameLocation":"3881:7:22","nodeType":"FunctionDefinition","parameters":{"id":6565,"nodeType":"ParameterList","parameters":[],"src":"3888:2:22"},"returnParameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6569,"src":"3914:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6566,"name":"uint256","nodeType":"ElementaryTypeName","src":"3914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3913:9:22"},"scope":6613,"src":"3872:51:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"3929:648:22","text":" @notice Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy.\n @dev The share amount can become negative. This is necessary to accommodate the fact that a pod owner's virtual beacon chain ETH shares can\n decrease between the pod owner queuing and completing a withdrawal.\n When the pod owner's shares would otherwise increase, this \"deficit\" is decreased first _instead_.\n Likewise, when a withdrawal is completed, this \"deficit\" is decreased and the withdrawal amount is decreased; We can think of this\n as the withdrawal \"paying off the deficit\"."},"functionSelector":"60f4062b","id":6577,"implemented":false,"kind":"function","modifiers":[],"name":"podOwnerShares","nameLocation":"4591:14:22","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"podOwner","nameLocation":"4614:8:22","nodeType":"VariableDeclaration","scope":6577,"src":"4606:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6571,"name":"address","nodeType":"ElementaryTypeName","src":"4606:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4605:18:22"},"returnParameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6577,"src":"4647:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6574,"name":"int256","nodeType":"ElementaryTypeName","src":"4647:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4646:8:22"},"scope":6613,"src":"4582:73:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6578,"nodeType":"StructuredDocumentation","src":"4661:62:22","text":"@notice returns canonical, virtual beaconChainETH strategy"},"functionSelector":"9104c319","id":6584,"implemented":false,"kind":"function","modifiers":[],"name":"beaconChainETHStrategy","nameLocation":"4737:22:22","nodeType":"FunctionDefinition","parameters":{"id":6579,"nodeType":"ParameterList","parameters":[],"src":"4759:2:22"},"returnParameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6584,"src":"4785:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":6581,"nodeType":"UserDefinedTypeName","pathNode":{"id":6580,"name":"IStrategy","nameLocations":["4785:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"4785:9:22"},"referencedDeclaration":7612,"src":"4785:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"4784:11:22"},"scope":6613,"src":"4728:68:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6585,"nodeType":"StructuredDocumentation","src":"4802:639:22","text":" @notice Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue.\n Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\n @dev This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to\n result in the `podOwner` incurring a \"share deficit\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive\n shares from the operator to whom the staker is delegated.\n @dev Reverts if `shares` is not a whole Gwei amount"},"functionSelector":"beffbb89","id":6592,"implemented":false,"kind":"function","modifiers":[],"name":"removeShares","nameLocation":"5455:12:22","nodeType":"FunctionDefinition","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6587,"mutability":"mutable","name":"podOwner","nameLocation":"5476:8:22","nodeType":"VariableDeclaration","scope":6592,"src":"5468:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6586,"name":"address","nodeType":"ElementaryTypeName","src":"5468:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6589,"mutability":"mutable","name":"shares","nameLocation":"5494:6:22","nodeType":"VariableDeclaration","scope":6592,"src":"5486:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5486:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5467:34:22"},"returnParameters":{"id":6591,"nodeType":"ParameterList","parameters":[],"src":"5510:0:22"},"scope":6613,"src":"5446:65:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6593,"nodeType":"StructuredDocumentation","src":"5517:514:22","text":" @notice Increases the `podOwner`'s shares by `shares`, paying off deficit if possible.\n Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\n @dev Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input\n in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)\n @dev Reverts if `shares` is not a whole Gwei amount"},"functionSelector":"0e81073c","id":6602,"implemented":false,"kind":"function","modifiers":[],"name":"addShares","nameLocation":"6045:9:22","nodeType":"FunctionDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"podOwner","nameLocation":"6063:8:22","nodeType":"VariableDeclaration","scope":6602,"src":"6055:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6594,"name":"address","nodeType":"ElementaryTypeName","src":"6055:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6597,"mutability":"mutable","name":"shares","nameLocation":"6081:6:22","nodeType":"VariableDeclaration","scope":6602,"src":"6073:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6596,"name":"uint256","nodeType":"ElementaryTypeName","src":"6073:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6054:34:22"},"returnParameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6602,"src":"6107:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6599,"name":"uint256","nodeType":"ElementaryTypeName","src":"6107:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6106:9:22"},"scope":6613,"src":"6036:80:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6603,"nodeType":"StructuredDocumentation","src":"6122:266:22","text":" @notice Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\n @dev Prioritizes decreasing the podOwner's share deficit, if they have one\n @dev Reverts if `shares` is not a whole Gwei amount"},"functionSelector":"387b1300","id":6612,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawSharesAsTokens","nameLocation":"6402:22:22","nodeType":"FunctionDefinition","parameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"podOwner","nameLocation":"6433:8:22","nodeType":"VariableDeclaration","scope":6612,"src":"6425:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6604,"name":"address","nodeType":"ElementaryTypeName","src":"6425:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6607,"mutability":"mutable","name":"destination","nameLocation":"6451:11:22","nodeType":"VariableDeclaration","scope":6612,"src":"6443:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6606,"name":"address","nodeType":"ElementaryTypeName","src":"6443:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6609,"mutability":"mutable","name":"shares","nameLocation":"6472:6:22","nodeType":"VariableDeclaration","scope":6612,"src":"6464:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"6464:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6424:55:22"},"returnParameters":{"id":6611,"nodeType":"ParameterList","parameters":[],"src":"6488:0:22"},"scope":6613,"src":"6393:96:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6614,"src":"545:5946:22","usedErrors":[],"usedEvents":[6449,6456,6463,6470,6485,6626,6633,6640]}],"src":"37:6455:22"},"id":22},"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol","exportedSymbols":{"IPausable":[6685],"IPauserRegistry":[6715]},"id":6686,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6615,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:23"},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol","file":"../interfaces/IPauserRegistry.sol","id":6616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6686,"sourceUnit":6716,"src":"63:43:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPausable","contractDependencies":[],"contractKind":"interface","documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"108:1552:23","text":" @title Adds pausability to a contract, with pausing & unpausing controlled by the `pauser` and `unpauser` of a PauserRegistry contract.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice Contracts that inherit from this contract may define their own `pause` and `unpause` (and/or related) functions.\n These functions should be permissioned as \"onlyPauser\" which defers to a `PauserRegistry` for determining access control.\n @dev Pausability is implemented using a uint256, which allows up to 256 different single bit-flags; each bit can potentially pause different functionality.\n Inspiration for this was taken from the NearBridge design here https://etherscan.io/address/0x3FEFc5A4B1c02f21cBc8D3613643ba0635b9a873#code.\n For the `pause` and `unpause` functions we've implemented, if you pause, you can only flip (any number of) switches to on/1 (aka \"paused\"), and if you unpause,\n you can only flip (any number of) switches to off/0 (aka \"paused\").\n If you want a pauseXYZ function that just flips a single bit / \"pausing flag\", it will:\n 1) 'bit-wise and' (aka `&`) a flag with the current paused state (as a uint256)\n 2) update the paused state to this new value\n @dev We note as well that we have chosen to identify flags by their *bit index* as opposed to their numerical value, so, e.g. defining `DEPOSITS_PAUSED = 3`\n indicates specifically that if the *third bit* of `_paused` is flipped -- i.e. it is a '1' -- then deposits should be paused"},"fullyImplemented":false,"id":6685,"linearizedBaseContracts":[6685],"name":"IPausable","nameLocation":"1671:9:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"1687:76:23","text":"@notice Emitted when the `pauserRegistry` is set to `newPauserRegistry`."},"eventSelector":"6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6","id":6626,"name":"PauserRegistrySet","nameLocation":"1774:17:23","nodeType":"EventDefinition","parameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"indexed":false,"mutability":"mutable","name":"pauserRegistry","nameLocation":"1808:14:23","nodeType":"VariableDeclaration","scope":6626,"src":"1792:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"},"typeName":{"id":6620,"nodeType":"UserDefinedTypeName","pathNode":{"id":6619,"name":"IPauserRegistry","nameLocations":["1792:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":6715,"src":"1792:15:23"},"referencedDeclaration":6715,"src":"1792:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"}},"visibility":"internal"},{"constant":false,"id":6624,"indexed":false,"mutability":"mutable","name":"newPauserRegistry","nameLocation":"1840:17:23","nodeType":"VariableDeclaration","scope":6626,"src":"1824:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"},"typeName":{"id":6623,"nodeType":"UserDefinedTypeName","pathNode":{"id":6622,"name":"IPauserRegistry","nameLocations":["1824:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":6715,"src":"1824:15:23"},"referencedDeclaration":6715,"src":"1824:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"}},"visibility":"internal"}],"src":"1791:67:23"},"src":"1768:91:23"},{"anonymous":false,"documentation":{"id":6627,"nodeType":"StructuredDocumentation","src":"1865:95:23","text":"@notice Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`."},"eventSelector":"ab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d","id":6633,"name":"Paused","nameLocation":"1971:6:23","nodeType":"EventDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1994:7:23","nodeType":"VariableDeclaration","scope":6633,"src":"1978:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6628,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6631,"indexed":false,"mutability":"mutable","name":"newPausedStatus","nameLocation":"2011:15:23","nodeType":"VariableDeclaration","scope":6633,"src":"2003:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1977:50:23"},"src":"1965:63:23"},{"anonymous":false,"documentation":{"id":6634,"nodeType":"StructuredDocumentation","src":"2034:92:23","text":"@notice Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`."},"eventSelector":"3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c","id":6640,"name":"Unpaused","nameLocation":"2137:8:23","nodeType":"EventDefinition","parameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6636,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2162:7:23","nodeType":"VariableDeclaration","scope":6640,"src":"2146:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6635,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6638,"indexed":false,"mutability":"mutable","name":"newPausedStatus","nameLocation":"2179:15:23","nodeType":"VariableDeclaration","scope":6640,"src":"2171:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2145:50:23"},"src":"2131:65:23"},{"documentation":{"id":6641,"nodeType":"StructuredDocumentation","src":"2202:127:23","text":"@notice Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."},"functionSelector":"886f1195","id":6647,"implemented":false,"kind":"function","modifiers":[],"name":"pauserRegistry","nameLocation":"2343:14:23","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[],"src":"2357:2:23"},"returnParameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6647,"src":"2383:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"},"typeName":{"id":6644,"nodeType":"UserDefinedTypeName","pathNode":{"id":6643,"name":"IPauserRegistry","nameLocations":["2383:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":6715,"src":"2383:15:23"},"referencedDeclaration":6715,"src":"2383:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"}},"visibility":"internal"}],"src":"2382:17:23"},"scope":6685,"src":"2334:66:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6648,"nodeType":"StructuredDocumentation","src":"2406:437:23","text":" @notice This function is used to pause an EigenLayer contract's functionality.\n It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\n @param newPausedStatus represents the new value for `_paused` to take, which means it may flip several bits at once.\n @dev This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0."},"functionSelector":"136439dd","id":6653,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"2857:5:23","nodeType":"FunctionDefinition","parameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"newPausedStatus","nameLocation":"2871:15:23","nodeType":"VariableDeclaration","scope":6653,"src":"2863:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2862:25:23"},"returnParameters":{"id":6652,"nodeType":"ParameterList","parameters":[],"src":"2896:0:23"},"scope":6685,"src":"2848:49:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6654,"nodeType":"StructuredDocumentation","src":"2903:64:23","text":" @notice Alias for `pause(type(uint256).max)`."},"functionSelector":"595c6a67","id":6657,"implemented":false,"kind":"function","modifiers":[],"name":"pauseAll","nameLocation":"2981:8:23","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[],"src":"2989:2:23"},"returnParameters":{"id":6656,"nodeType":"ParameterList","parameters":[],"src":"3000:0:23"},"scope":6685,"src":"2972:29:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"3007:465:23","text":" @notice This function is used to unpause an EigenLayer contract's functionality.\n It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\n @param newPausedStatus represents the new value for `_paused` to take, which means it may flip several bits at once.\n @dev This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1."},"functionSelector":"fabc1cbc","id":6663,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"3486:7:23","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"newPausedStatus","nameLocation":"3502:15:23","nodeType":"VariableDeclaration","scope":6663,"src":"3494:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"3494:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3493:25:23"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[],"src":"3527:0:23"},"scope":6685,"src":"3477:51:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6664,"nodeType":"StructuredDocumentation","src":"3534:59:23","text":"@notice Returns the current paused status as a uint256."},"functionSelector":"5c975abb","id":6669,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nameLocation":"3607:6:23","nodeType":"FunctionDefinition","parameters":{"id":6665,"nodeType":"ParameterList","parameters":[],"src":"3613:2:23"},"returnParameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6669,"src":"3639:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"3639:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3638:9:23"},"scope":6685,"src":"3598:50:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6670,"nodeType":"StructuredDocumentation","src":"3654:90:23","text":"@notice Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"},"functionSelector":"5ac86ab7","id":6677,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nameLocation":"3758:6:23","nodeType":"FunctionDefinition","parameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"index","nameLocation":"3771:5:23","nodeType":"VariableDeclaration","scope":6677,"src":"3765:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6671,"name":"uint8","nodeType":"ElementaryTypeName","src":"3765:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3764:13:23"},"returnParameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6677,"src":"3801:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6674,"name":"bool","nodeType":"ElementaryTypeName","src":"3801:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3800:6:23"},"scope":6685,"src":"3749:58:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6678,"nodeType":"StructuredDocumentation","src":"3813:60:23","text":"@notice Allows the unpauser to set a new pauser registry"},"functionSelector":"10d67a2f","id":6684,"implemented":false,"kind":"function","modifiers":[],"name":"setPauserRegistry","nameLocation":"3887:17:23","nodeType":"FunctionDefinition","parameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"newPauserRegistry","nameLocation":"3921:17:23","nodeType":"VariableDeclaration","scope":6684,"src":"3905:33:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"},"typeName":{"id":6680,"nodeType":"UserDefinedTypeName","pathNode":{"id":6679,"name":"IPauserRegistry","nameLocations":["3905:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":6715,"src":"3905:15:23"},"referencedDeclaration":6715,"src":"3905:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPauserRegistry_$6715","typeString":"contract IPauserRegistry"}},"visibility":"internal"}],"src":"3904:35:23"},"returnParameters":{"id":6683,"nodeType":"ParameterList","parameters":[],"src":"3948:0:23"},"scope":6685,"src":"3878:71:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6686,"src":"1661:2290:23","usedErrors":[],"usedEvents":[6626,6633,6640]}],"src":"37:3915:23"},"id":23},"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol","exportedSymbols":{"IPauserRegistry":[6715]},"id":6716,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6687,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IPauserRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":6688,"nodeType":"StructuredDocumentation","src":"63:172:24","text":" @title Interface for the `PauserRegistry` contract.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service"},"fullyImplemented":false,"id":6715,"linearizedBaseContracts":[6715],"name":"IPauserRegistry","nameLocation":"246:15:24","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"65d3a1fd4c13f05cba164f80d03ce90fb4b5e21946bfc3ab7dbd434c2d0b9152","id":6694,"name":"PauserStatusChanged","nameLocation":"274:19:24","nodeType":"EventDefinition","parameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"indexed":false,"mutability":"mutable","name":"pauser","nameLocation":"302:6:24","nodeType":"VariableDeclaration","scope":6694,"src":"294:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6689,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6692,"indexed":false,"mutability":"mutable","name":"canPause","nameLocation":"315:8:24","nodeType":"VariableDeclaration","scope":6694,"src":"310:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6691,"name":"bool","nodeType":"ElementaryTypeName","src":"310:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"293:31:24"},"src":"268:57:24"},{"anonymous":false,"eventSelector":"06b4167a2528887a1e97a366eefe8549bfbf1ea3e6ac81cb2564a934d20e8892","id":6700,"name":"UnpauserChanged","nameLocation":"337:15:24","nodeType":"EventDefinition","parameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"indexed":false,"mutability":"mutable","name":"previousUnpauser","nameLocation":"361:16:24","nodeType":"VariableDeclaration","scope":6700,"src":"353:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6695,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6698,"indexed":false,"mutability":"mutable","name":"newUnpauser","nameLocation":"387:11:24","nodeType":"VariableDeclaration","scope":6700,"src":"379:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6697,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"352:47:24"},"src":"331:69:24"},{"documentation":{"id":6701,"nodeType":"StructuredDocumentation","src":"406:70:24","text":"@notice Mapping of addresses to whether they hold the pauser role."},"functionSelector":"46fbf68e","id":6708,"implemented":false,"kind":"function","modifiers":[],"name":"isPauser","nameLocation":"490:8:24","nodeType":"FunctionDefinition","parameters":{"id":6704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6703,"mutability":"mutable","name":"pauser","nameLocation":"507:6:24","nodeType":"VariableDeclaration","scope":6708,"src":"499:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6702,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"498:16:24"},"returnParameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6708,"src":"538:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6705,"name":"bool","nodeType":"ElementaryTypeName","src":"538:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"537:6:24"},"scope":6715,"src":"481:63:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6709,"nodeType":"StructuredDocumentation","src":"550:118:24","text":"@notice Unique address that holds the unpauser role. Capable of changing *both* the pauser and unpauser addresses."},"functionSelector":"eab66d7a","id":6714,"implemented":false,"kind":"function","modifiers":[],"name":"unpauser","nameLocation":"682:8:24","nodeType":"FunctionDefinition","parameters":{"id":6710,"nodeType":"ParameterList","parameters":[],"src":"690:2:24"},"returnParameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6714,"src":"716:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6711,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"715:9:24"},"scope":6715,"src":"673:52:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6716,"src":"236:491:24","usedErrors":[],"usedEvents":[6694,6700]}],"src":"37:691:24"},"id":24},"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol","exportedSymbols":{"IERC20":[1077],"IRewardsCoordinator":[7242],"IStrategy":[7612]},"id":7243,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6717,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"37:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":1078,"src":"63:56:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","file":"./IStrategy.sol","id":6719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":7613,"src":"120:25:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardsCoordinator","contractDependencies":[],"contractKind":"interface","documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"147:507:25","text":" @title Interface for the `IRewardsCoordinator` contract.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice Allows AVSs to make \"Rewards Submissions\", which get distributed amongst the AVSs' confirmed\n Operators and the Stakers delegated to those Operators.\n Calculations are performed based on the completed RewardsSubmission, with the results posted in\n a Merkle root against which Stakers & Operators can make claims."},"fullyImplemented":false,"id":7242,"linearizedBaseContracts":[7242],"name":"IRewardsCoordinator","nameLocation":"665:19:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRewardsCoordinator.StrategyAndMultiplier","documentation":{"id":6721,"nodeType":"StructuredDocumentation","src":"711:288:25","text":" @notice A linear combination of strategies and multipliers for AVSs to weigh\n EigenLayer strategies.\n @param strategy The EigenLayer strategy to be used for the rewards submission\n @param multiplier The weight of the strategy in the rewards submission"},"id":6727,"members":[{"constant":false,"id":6724,"mutability":"mutable","name":"strategy","nameLocation":"1053:8:25","nodeType":"VariableDeclaration","scope":6727,"src":"1043:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":6723,"nodeType":"UserDefinedTypeName","pathNode":{"id":6722,"name":"IStrategy","nameLocations":["1043:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"1043:9:25"},"referencedDeclaration":7612,"src":"1043:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":6726,"mutability":"mutable","name":"multiplier","nameLocation":"1078:10:25","nodeType":"VariableDeclaration","scope":6727,"src":"1071:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6725,"name":"uint96","nodeType":"ElementaryTypeName","src":"1071:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"StrategyAndMultiplier","nameLocation":"1011:21:25","nodeType":"StructDefinition","scope":7242,"src":"1004:91:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.OperatorReward","documentation":{"id":6728,"nodeType":"StructuredDocumentation","src":"1101:165:25","text":" @notice A reward struct for an operator\n @param operator The operator to be rewarded\n @param amount The reward amount for the operator"},"id":6733,"members":[{"constant":false,"id":6730,"mutability":"mutable","name":"operator","nameLocation":"1311:8:25","nodeType":"VariableDeclaration","scope":6733,"src":"1303:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6729,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"amount","nameLocation":"1337:6:25","nodeType":"VariableDeclaration","scope":6733,"src":"1329:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"OperatorReward","nameLocation":"1278:14:25","nodeType":"StructDefinition","scope":7242,"src":"1271:79:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.OperatorSplit","documentation":{"id":6734,"nodeType":"StructuredDocumentation","src":"1356:387:25","text":" @notice A split struct for an Operator\n @param oldSplitBips The old split in basis points. This is the split that is active if `block.timestamp < activatedAt`\n @param newSplitBips The new split in basis points. This is the split that is active if `block.timestamp >= activatedAt`\n @param activatedAt The timestamp at which the split will be activated"},"id":6741,"members":[{"constant":false,"id":6736,"mutability":"mutable","name":"oldSplitBips","nameLocation":"1786:12:25","nodeType":"VariableDeclaration","scope":6741,"src":"1779:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6735,"name":"uint16","nodeType":"ElementaryTypeName","src":"1779:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6738,"mutability":"mutable","name":"newSplitBips","nameLocation":"1815:12:25","nodeType":"VariableDeclaration","scope":6741,"src":"1808:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6737,"name":"uint16","nodeType":"ElementaryTypeName","src":"1808:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6740,"mutability":"mutable","name":"activatedAt","nameLocation":"1844:11:25","nodeType":"VariableDeclaration","scope":6741,"src":"1837:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6739,"name":"uint32","nodeType":"ElementaryTypeName","src":"1837:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"OperatorSplit","nameLocation":"1755:13:25","nodeType":"StructDefinition","scope":7242,"src":"1748:114:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.RewardsSubmission","documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"1868:1613:25","text":" Sliding Window for valid RewardsSubmission startTimestamp\n Scenario A: GENESIS_REWARDS_TIMESTAMP IS WITHIN RANGE\n         <-----MAX_RETROACTIVE_LENGTH-----> t (block.timestamp) <---MAX_FUTURE_LENGTH--->\n             <--------------------valid range for startTimestamp------------------------>\n             ^\n         GENESIS_REWARDS_TIMESTAMP\n Scenario B: GENESIS_REWARDS_TIMESTAMP IS OUT OF RANGE\n         <-----MAX_RETROACTIVE_LENGTH-----> t (block.timestamp) <---MAX_FUTURE_LENGTH--->\n         <------------------------valid range for startTimestamp------------------------>\n     ^\n GENESIS_REWARDS_TIMESTAMP\n @notice RewardsSubmission struct submitted by AVSs when making rewards for their operators and stakers\n RewardsSubmission can be for a time range within the valid window for startTimestamp and must be within max duration.\n See `createAVSRewardsSubmission()` for more details.\n @param strategiesAndMultipliers The strategies and their relative weights\n cannot have duplicate strategies and need to be sorted in ascending address order\n @param token The rewards token to be distributed\n @param amount The total amount of tokens to be distributed\n @param startTimestamp The timestamp (seconds) at which the submission range is considered for distribution\n could start in the past or in the future but within a valid range. See the diagram above.\n @param duration The duration of the submission range in seconds. Must be <= MAX_REWARDS_DURATION"},"id":6756,"members":[{"constant":false,"id":6746,"mutability":"mutable","name":"strategiesAndMultipliers","nameLocation":"3545:24:25","nodeType":"VariableDeclaration","scope":6756,"src":"3521:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StrategyAndMultiplier_$6727_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.StrategyAndMultiplier[]"},"typeName":{"baseType":{"id":6744,"nodeType":"UserDefinedTypeName","pathNode":{"id":6743,"name":"StrategyAndMultiplier","nameLocations":["3521:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"3521:21:25"},"referencedDeclaration":6727,"src":"3521:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyAndMultiplier_$6727_storage_ptr","typeString":"struct IRewardsCoordinator.StrategyAndMultiplier"}},"id":6745,"nodeType":"ArrayTypeName","src":"3521:23:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StrategyAndMultiplier_$6727_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.StrategyAndMultiplier[]"}},"visibility":"internal"},{"constant":false,"id":6749,"mutability":"mutable","name":"token","nameLocation":"3586:5:25","nodeType":"VariableDeclaration","scope":6756,"src":"3579:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":6748,"nodeType":"UserDefinedTypeName","pathNode":{"id":6747,"name":"IERC20","nameLocations":["3579:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"3579:6:25"},"referencedDeclaration":1077,"src":"3579:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6751,"mutability":"mutable","name":"amount","nameLocation":"3609:6:25","nodeType":"VariableDeclaration","scope":6756,"src":"3601:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6753,"mutability":"mutable","name":"startTimestamp","nameLocation":"3632:14:25","nodeType":"VariableDeclaration","scope":6756,"src":"3625:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6752,"name":"uint32","nodeType":"ElementaryTypeName","src":"3625:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"duration","nameLocation":"3663:8:25","nodeType":"VariableDeclaration","scope":6756,"src":"3656:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6754,"name":"uint32","nodeType":"ElementaryTypeName","src":"3656:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"RewardsSubmission","nameLocation":"3493:17:25","nodeType":"StructDefinition","scope":7242,"src":"3486:192:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.OperatorDirectedRewardsSubmission","documentation":{"id":6757,"nodeType":"StructuredDocumentation","src":"3684:615:25","text":" @notice OperatorDirectedRewardsSubmission struct submitted by AVSs when making operator-directed rewards for their operators and stakers.\n @param strategiesAndMultipliers The strategies and their relative weights.\n @param token The rewards token to be distributed.\n @param operatorRewards The rewards for the operators.\n @param startTimestamp The timestamp (seconds) at which the submission range is considered for distribution.\n @param duration The duration of the submission range in seconds.\n @param description Describes what the rewards submission is for."},"id":6775,"members":[{"constant":false,"id":6761,"mutability":"mutable","name":"strategiesAndMultipliers","nameLocation":"4379:24:25","nodeType":"VariableDeclaration","scope":6775,"src":"4355:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StrategyAndMultiplier_$6727_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.StrategyAndMultiplier[]"},"typeName":{"baseType":{"id":6759,"nodeType":"UserDefinedTypeName","pathNode":{"id":6758,"name":"StrategyAndMultiplier","nameLocations":["4355:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":6727,"src":"4355:21:25"},"referencedDeclaration":6727,"src":"4355:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyAndMultiplier_$6727_storage_ptr","typeString":"struct IRewardsCoordinator.StrategyAndMultiplier"}},"id":6760,"nodeType":"ArrayTypeName","src":"4355:23:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StrategyAndMultiplier_$6727_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.StrategyAndMultiplier[]"}},"visibility":"internal"},{"constant":false,"id":6764,"mutability":"mutable","name":"token","nameLocation":"4420:5:25","nodeType":"VariableDeclaration","scope":6775,"src":"4413:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":6763,"nodeType":"UserDefinedTypeName","pathNode":{"id":6762,"name":"IERC20","nameLocations":["4413:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"4413:6:25"},"referencedDeclaration":1077,"src":"4413:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6768,"mutability":"mutable","name":"operatorRewards","nameLocation":"4452:15:25","nodeType":"VariableDeclaration","scope":6775,"src":"4435:32:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorReward_$6733_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorReward[]"},"typeName":{"baseType":{"id":6766,"nodeType":"UserDefinedTypeName","pathNode":{"id":6765,"name":"OperatorReward","nameLocations":["4435:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":6733,"src":"4435:14:25"},"referencedDeclaration":6733,"src":"4435:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorReward_$6733_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorReward"}},"id":6767,"nodeType":"ArrayTypeName","src":"4435:16:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorReward_$6733_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorReward[]"}},"visibility":"internal"},{"constant":false,"id":6770,"mutability":"mutable","name":"startTimestamp","nameLocation":"4484:14:25","nodeType":"VariableDeclaration","scope":6775,"src":"4477:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6769,"name":"uint32","nodeType":"ElementaryTypeName","src":"4477:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6772,"mutability":"mutable","name":"duration","nameLocation":"4515:8:25","nodeType":"VariableDeclaration","scope":6775,"src":"4508:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6771,"name":"uint32","nodeType":"ElementaryTypeName","src":"4508:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"description","nameLocation":"4540:11:25","nodeType":"VariableDeclaration","scope":6775,"src":"4533:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6773,"name":"string","nodeType":"ElementaryTypeName","src":"4533:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"OperatorDirectedRewardsSubmission","nameLocation":"4311:33:25","nodeType":"StructDefinition","scope":7242,"src":"4304:254:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.DistributionRoot","documentation":{"id":6776,"nodeType":"StructuredDocumentation","src":"4564:742:25","text":" @notice A distribution root is a merkle root of the distribution of earnings for a given period.\n The RewardsCoordinator stores all historical distribution roots so that earners can claim their earnings against older roots\n if they wish but the merkle tree contains the cumulative earnings of all earners and tokens for a given period so earners (or their claimers if set)\n only need to claim against the latest root to claim all available earnings.\n @param root The merkle root of the distribution\n @param rewardsCalculationEndTimestamp The timestamp (seconds) until which rewards have been calculated\n @param activatedAt The timestamp (seconds) at which the root can be claimed against"},"id":6785,"members":[{"constant":false,"id":6778,"mutability":"mutable","name":"root","nameLocation":"5353:4:25","nodeType":"VariableDeclaration","scope":6785,"src":"5345:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5345:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6780,"mutability":"mutable","name":"rewardsCalculationEndTimestamp","nameLocation":"5374:30:25","nodeType":"VariableDeclaration","scope":6785,"src":"5367:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6779,"name":"uint32","nodeType":"ElementaryTypeName","src":"5367:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6782,"mutability":"mutable","name":"activatedAt","nameLocation":"5421:11:25","nodeType":"VariableDeclaration","scope":6785,"src":"5414:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6781,"name":"uint32","nodeType":"ElementaryTypeName","src":"5414:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6784,"mutability":"mutable","name":"disabled","nameLocation":"5447:8:25","nodeType":"VariableDeclaration","scope":6785,"src":"5442:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6783,"name":"bool","nodeType":"ElementaryTypeName","src":"5442:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DistributionRoot","nameLocation":"5318:16:25","nodeType":"StructDefinition","scope":7242,"src":"5311:151:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.EarnerTreeMerkleLeaf","documentation":{"id":6786,"nodeType":"StructuredDocumentation","src":"5468:284:25","text":" @notice Internal leaf in the merkle tree for the earner's account leaf\n @param earner The address of the earner\n @param earnerTokenRoot The merkle root of the earner's token subtree\n Each leaf in the earner's token subtree is a TokenTreeMerkleLeaf"},"id":6791,"members":[{"constant":false,"id":6788,"mutability":"mutable","name":"earner","nameLocation":"5803:6:25","nodeType":"VariableDeclaration","scope":6791,"src":"5795:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6787,"name":"address","nodeType":"ElementaryTypeName","src":"5795:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6790,"mutability":"mutable","name":"earnerTokenRoot","nameLocation":"5827:15:25","nodeType":"VariableDeclaration","scope":6791,"src":"5819:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5819:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"EarnerTreeMerkleLeaf","nameLocation":"5764:20:25","nodeType":"StructDefinition","scope":7242,"src":"5757:92:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.TokenTreeMerkleLeaf","documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"5855:364:25","text":" @notice The actual leaves in the distribution merkle tree specifying the token earnings\n for the respective earner's subtree. Each leaf is a claimable amount of a token for an earner.\n @param token The token for which the earnings are being claimed\n @param cumulativeEarnings The cumulative earnings of the earner for the token"},"id":6798,"members":[{"constant":false,"id":6795,"mutability":"mutable","name":"token","nameLocation":"6268:5:25","nodeType":"VariableDeclaration","scope":6798,"src":"6261:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":6794,"nodeType":"UserDefinedTypeName","pathNode":{"id":6793,"name":"IERC20","nameLocations":["6261:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"6261:6:25"},"referencedDeclaration":1077,"src":"6261:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6797,"mutability":"mutable","name":"cumulativeEarnings","nameLocation":"6291:18:25","nodeType":"VariableDeclaration","scope":6798,"src":"6283:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"6283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenTreeMerkleLeaf","nameLocation":"6231:19:25","nodeType":"StructDefinition","scope":7242,"src":"6224:92:25","visibility":"public"},{"canonicalName":"IRewardsCoordinator.RewardsMerkleClaim","documentation":{"id":6799,"nodeType":"StructuredDocumentation","src":"6322:1602:25","text":" @notice A claim against a distribution root called by an\n earners claimer (could be the earner themselves). Each token claim will claim the difference\n between the cumulativeEarnings of the earner and the cumulativeClaimed of the claimer.\n Each claim can specify which of the earner's earned tokens they want to claim.\n See `processClaim()` for more details.\n @param rootIndex The index of the root in the list of DistributionRoots\n @param earnerIndex The index of the earner's account root in the merkle tree\n @param earnerTreeProof The proof of the earner's EarnerTreeMerkleLeaf against the merkle root\n @param earnerLeaf The earner's EarnerTreeMerkleLeaf struct, providing the earner address and earnerTokenRoot\n @param tokenIndices The indices of the token leaves in the earner's subtree\n @param tokenTreeProofs The proofs of the token leaves against the earner's earnerTokenRoot\n @param tokenLeaves The token leaves to be claimed\n @dev The merkle tree is structured with the merkle root at the top and EarnerTreeMerkleLeaf as internal leaves\n in the tree. Each earner leaf has its own subtree with TokenTreeMerkleLeaf as leaves in the subtree.\n To prove a claim against a specified rootIndex(which specifies the distributionRoot being used),\n the claim will first verify inclusion of the earner leaf in the tree against _distributionRoots[rootIndex].root.\n Then for each token, it will verify inclusion of the token leaf in the earner's subtree against the earner's earnerTokenRoot."},"id":6819,"members":[{"constant":false,"id":6801,"mutability":"mutable","name":"rootIndex","nameLocation":"7972:9:25","nodeType":"VariableDeclaration","scope":6819,"src":"7965:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6800,"name":"uint32","nodeType":"ElementaryTypeName","src":"7965:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6803,"mutability":"mutable","name":"earnerIndex","nameLocation":"7998:11:25","nodeType":"VariableDeclaration","scope":6819,"src":"7991:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6802,"name":"uint32","nodeType":"ElementaryTypeName","src":"7991:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6805,"mutability":"mutable","name":"earnerTreeProof","nameLocation":"8025:15:25","nodeType":"VariableDeclaration","scope":6819,"src":"8019:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6804,"name":"bytes","nodeType":"ElementaryTypeName","src":"8019:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6808,"mutability":"mutable","name":"earnerLeaf","nameLocation":"8071:10:25","nodeType":"VariableDeclaration","scope":6819,"src":"8050:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_EarnerTreeMerkleLeaf_$6791_storage_ptr","typeString":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf"},"typeName":{"id":6807,"nodeType":"UserDefinedTypeName","pathNode":{"id":6806,"name":"EarnerTreeMerkleLeaf","nameLocations":["8050:20:25"],"nodeType":"IdentifierPath","referencedDeclaration":6791,"src":"8050:20:25"},"referencedDeclaration":6791,"src":"8050:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_EarnerTreeMerkleLeaf_$6791_storage_ptr","typeString":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf"}},"visibility":"internal"},{"constant":false,"id":6811,"mutability":"mutable","name":"tokenIndices","nameLocation":"8100:12:25","nodeType":"VariableDeclaration","scope":6819,"src":"8091:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":6809,"name":"uint32","nodeType":"ElementaryTypeName","src":"8091:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6810,"nodeType":"ArrayTypeName","src":"8091:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"},{"constant":false,"id":6814,"mutability":"mutable","name":"tokenTreeProofs","nameLocation":"8130:15:25","nodeType":"VariableDeclaration","scope":6819,"src":"8122:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6812,"name":"bytes","nodeType":"ElementaryTypeName","src":"8122:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6813,"nodeType":"ArrayTypeName","src":"8122:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":6818,"mutability":"mutable","name":"tokenLeaves","nameLocation":"8177:11:25","nodeType":"VariableDeclaration","scope":6819,"src":"8155:33:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTreeMerkleLeaf_$6798_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]"},"typeName":{"baseType":{"id":6816,"nodeType":"UserDefinedTypeName","pathNode":{"id":6815,"name":"TokenTreeMerkleLeaf","nameLocations":["8155:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"8155:19:25"},"referencedDeclaration":6798,"src":"8155:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTreeMerkleLeaf_$6798_storage_ptr","typeString":"struct IRewardsCoordinator.TokenTreeMerkleLeaf"}},"id":6817,"nodeType":"ArrayTypeName","src":"8155:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenTreeMerkleLeaf_$6798_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]"}},"visibility":"internal"}],"name":"RewardsMerkleClaim","nameLocation":"7936:18:25","nodeType":"StructDefinition","scope":7242,"src":"7929:266:25","visibility":"public"},{"anonymous":false,"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"8221:65:25","text":"@notice emitted when an AVS creates a valid RewardsSubmission"},"eventSelector":"450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e6281","id":6831,"name":"AVSRewardsSubmissionCreated","nameLocation":"8297:27:25","nodeType":"EventDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"indexed":true,"mutability":"mutable","name":"avs","nameLocation":"8350:3:25","nodeType":"VariableDeclaration","scope":6831,"src":"8334:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6821,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6824,"indexed":true,"mutability":"mutable","name":"submissionNonce","nameLocation":"8379:15:25","nodeType":"VariableDeclaration","scope":6831,"src":"8363:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"8363:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6826,"indexed":true,"mutability":"mutable","name":"rewardsSubmissionHash","nameLocation":"8420:21:25","nodeType":"VariableDeclaration","scope":6831,"src":"8404:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8404:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6829,"indexed":false,"mutability":"mutable","name":"rewardsSubmission","nameLocation":"8469:17:25","nodeType":"VariableDeclaration","scope":6831,"src":"8451:35:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_memory_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"},"typeName":{"id":6828,"nodeType":"UserDefinedTypeName","pathNode":{"id":6827,"name":"RewardsSubmission","nameLocations":["8451:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":6756,"src":"8451:17:25"},"referencedDeclaration":6756,"src":"8451:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"}},"visibility":"internal"}],"src":"8324:168:25"},"src":"8291:202:25"},{"anonymous":false,"documentation":{"id":6832,"nodeType":"StructuredDocumentation","src":"8498:98:25","text":"@notice emitted when a valid RewardsSubmission is created for all stakers by a valid submitter"},"eventSelector":"51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf270482","id":6843,"name":"RewardsSubmissionForAllCreated","nameLocation":"8607:30:25","nodeType":"EventDefinition","parameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"8663:9:25","nodeType":"VariableDeclaration","scope":6843,"src":"8647:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6833,"name":"address","nodeType":"ElementaryTypeName","src":"8647:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6836,"indexed":true,"mutability":"mutable","name":"submissionNonce","nameLocation":"8698:15:25","nodeType":"VariableDeclaration","scope":6843,"src":"8682:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6835,"name":"uint256","nodeType":"ElementaryTypeName","src":"8682:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6838,"indexed":true,"mutability":"mutable","name":"rewardsSubmissionHash","nameLocation":"8739:21:25","nodeType":"VariableDeclaration","scope":6843,"src":"8723:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8723:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6841,"indexed":false,"mutability":"mutable","name":"rewardsSubmission","nameLocation":"8788:17:25","nodeType":"VariableDeclaration","scope":6843,"src":"8770:35:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_memory_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"},"typeName":{"id":6840,"nodeType":"UserDefinedTypeName","pathNode":{"id":6839,"name":"RewardsSubmission","nameLocations":["8770:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":6756,"src":"8770:17:25"},"referencedDeclaration":6756,"src":"8770:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"}},"visibility":"internal"}],"src":"8637:174:25"},"src":"8601:211:25"},{"anonymous":false,"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"8817:105:25","text":"@notice emitted when a valid RewardsSubmission is created when rewardAllStakersAndOperators is called"},"eventSelector":"5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b","id":6855,"name":"RewardsSubmissionForAllEarnersCreated","nameLocation":"8933:37:25","nodeType":"EventDefinition","parameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"indexed":true,"mutability":"mutable","name":"tokenHopper","nameLocation":"8996:11:25","nodeType":"VariableDeclaration","scope":6855,"src":"8980:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6845,"name":"address","nodeType":"ElementaryTypeName","src":"8980:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6848,"indexed":true,"mutability":"mutable","name":"submissionNonce","nameLocation":"9033:15:25","nodeType":"VariableDeclaration","scope":6855,"src":"9017:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"9017:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6850,"indexed":true,"mutability":"mutable","name":"rewardsSubmissionHash","nameLocation":"9074:21:25","nodeType":"VariableDeclaration","scope":6855,"src":"9058:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9058:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6853,"indexed":false,"mutability":"mutable","name":"rewardsSubmission","nameLocation":"9123:17:25","nodeType":"VariableDeclaration","scope":6855,"src":"9105:35:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_memory_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"},"typeName":{"id":6852,"nodeType":"UserDefinedTypeName","pathNode":{"id":6851,"name":"RewardsSubmission","nameLocations":["9105:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":6756,"src":"9105:17:25"},"referencedDeclaration":6756,"src":"9105:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"}},"visibility":"internal"}],"src":"8970:176:25"},"src":"8927:220:25"},{"anonymous":false,"documentation":{"id":6856,"nodeType":"StructuredDocumentation","src":"9153:716:25","text":" @notice Emitted when an AVS creates a valid `OperatorDirectedRewardsSubmission`\n @param caller The address calling `createOperatorDirectedAVSRewardsSubmission`.\n @param avs The avs on behalf of which the operator-directed rewards are being submitted.\n @param operatorDirectedRewardsSubmissionHash Keccak256 hash of (`avs`, `submissionNonce` and `operatorDirectedRewardsSubmission`).\n @param submissionNonce Current nonce of the avs. Used to generate a unique submission hash.\n @param operatorDirectedRewardsSubmission The Operator-Directed Rewards Submission. Contains the token, start timestamp, duration, operator rewards, description and, strategy and multipliers."},"eventSelector":"fc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e0","id":6869,"name":"OperatorDirectedAVSRewardsSubmissionCreated","nameLocation":"9880:43:25","nodeType":"EventDefinition","parameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"9949:6:25","nodeType":"VariableDeclaration","scope":6869,"src":"9933:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6857,"name":"address","nodeType":"ElementaryTypeName","src":"9933:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6860,"indexed":true,"mutability":"mutable","name":"avs","nameLocation":"9981:3:25","nodeType":"VariableDeclaration","scope":6869,"src":"9965:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6859,"name":"address","nodeType":"ElementaryTypeName","src":"9965:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6862,"indexed":true,"mutability":"mutable","name":"operatorDirectedRewardsSubmissionHash","nameLocation":"10010:37:25","nodeType":"VariableDeclaration","scope":6869,"src":"9994:53:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9994:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6864,"indexed":false,"mutability":"mutable","name":"submissionNonce","nameLocation":"10065:15:25","nodeType":"VariableDeclaration","scope":6869,"src":"10057:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6863,"name":"uint256","nodeType":"ElementaryTypeName","src":"10057:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6867,"indexed":false,"mutability":"mutable","name":"operatorDirectedRewardsSubmission","nameLocation":"10124:33:25","nodeType":"VariableDeclaration","scope":6869,"src":"10090:67:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_memory_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"},"typeName":{"id":6866,"nodeType":"UserDefinedTypeName","pathNode":{"id":6865,"name":"OperatorDirectedRewardsSubmission","nameLocations":["10090:33:25"],"nodeType":"IdentifierPath","referencedDeclaration":6775,"src":"10090:33:25"},"referencedDeclaration":6775,"src":"10090:33:25","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"}},"visibility":"internal"}],"src":"9923:240:25"},"src":"9874:290:25"},{"anonymous":false,"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"10170:108:25","text":"@notice rewardsUpdater is responsible for submiting DistributionRoots, only owner can set rewardsUpdater"},"eventSelector":"237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb","id":6876,"name":"RewardsUpdaterSet","nameLocation":"10289:17:25","nodeType":"EventDefinition","parameters":{"id":6875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"indexed":true,"mutability":"mutable","name":"oldRewardsUpdater","nameLocation":"10323:17:25","nodeType":"VariableDeclaration","scope":6876,"src":"10307:33:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6871,"name":"address","nodeType":"ElementaryTypeName","src":"10307:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6874,"indexed":true,"mutability":"mutable","name":"newRewardsUpdater","nameLocation":"10358:17:25","nodeType":"VariableDeclaration","scope":6876,"src":"10342:33:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6873,"name":"address","nodeType":"ElementaryTypeName","src":"10342:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10306:70:25"},"src":"10283:94:25"},{"anonymous":false,"eventSelector":"4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c","id":6884,"name":"RewardsForAllSubmitterSet","nameLocation":"10388:25:25","nodeType":"EventDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"indexed":true,"mutability":"mutable","name":"rewardsForAllSubmitter","nameLocation":"10439:22:25","nodeType":"VariableDeclaration","scope":6884,"src":"10423:38:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6877,"name":"address","nodeType":"ElementaryTypeName","src":"10423:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6880,"indexed":true,"mutability":"mutable","name":"oldValue","nameLocation":"10484:8:25","nodeType":"VariableDeclaration","scope":6884,"src":"10471:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6879,"name":"bool","nodeType":"ElementaryTypeName","src":"10471:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6882,"indexed":true,"mutability":"mutable","name":"newValue","nameLocation":"10515:8:25","nodeType":"VariableDeclaration","scope":6884,"src":"10502:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6881,"name":"bool","nodeType":"ElementaryTypeName","src":"10502:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10413:116:25"},"src":"10382:148:25"},{"anonymous":false,"eventSelector":"af557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b3","id":6890,"name":"ActivationDelaySet","nameLocation":"10541:18:25","nodeType":"EventDefinition","parameters":{"id":6889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"indexed":false,"mutability":"mutable","name":"oldActivationDelay","nameLocation":"10567:18:25","nodeType":"VariableDeclaration","scope":6890,"src":"10560:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6885,"name":"uint32","nodeType":"ElementaryTypeName","src":"10560:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6888,"indexed":false,"mutability":"mutable","name":"newActivationDelay","nameLocation":"10594:18:25","nodeType":"VariableDeclaration","scope":6890,"src":"10587:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6887,"name":"uint32","nodeType":"ElementaryTypeName","src":"10587:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10559:54:25"},"src":"10535:79:25"},{"anonymous":false,"eventSelector":"e6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e","id":6896,"name":"DefaultOperatorSplitBipsSet","nameLocation":"10625:27:25","nodeType":"EventDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"indexed":false,"mutability":"mutable","name":"oldDefaultOperatorSplitBips","nameLocation":"10660:27:25","nodeType":"VariableDeclaration","scope":6896,"src":"10653:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6891,"name":"uint16","nodeType":"ElementaryTypeName","src":"10653:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6894,"indexed":false,"mutability":"mutable","name":"newDefaultOperatorSplitBips","nameLocation":"10696:27:25","nodeType":"VariableDeclaration","scope":6896,"src":"10689:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6893,"name":"uint16","nodeType":"ElementaryTypeName","src":"10689:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"10652:72:25"},"src":"10619:106:25"},{"anonymous":false,"documentation":{"id":6897,"nodeType":"StructuredDocumentation","src":"10731:538:25","text":" @notice Emitted when the operator split for an AVS is set.\n @param caller The address calling `setOperatorAVSSplit`.\n @param operator The operator on behalf of which the split is being set.\n @param avs The avs for which the split is being set by the operator.\n @param activatedAt The timestamp at which the split will be activated.\n @param oldOperatorAVSSplitBips The old split for the operator for the AVS.\n @param newOperatorAVSSplitBips The new split for the operator for the AVS."},"eventSelector":"48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934","id":6911,"name":"OperatorAVSSplitBipsSet","nameLocation":"11280:23:25","nodeType":"EventDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6899,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"11329:6:25","nodeType":"VariableDeclaration","scope":6911,"src":"11313:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6898,"name":"address","nodeType":"ElementaryTypeName","src":"11313:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6901,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"11361:8:25","nodeType":"VariableDeclaration","scope":6911,"src":"11345:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6900,"name":"address","nodeType":"ElementaryTypeName","src":"11345:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6903,"indexed":true,"mutability":"mutable","name":"avs","nameLocation":"11395:3:25","nodeType":"VariableDeclaration","scope":6911,"src":"11379:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6902,"name":"address","nodeType":"ElementaryTypeName","src":"11379:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6905,"indexed":false,"mutability":"mutable","name":"activatedAt","nameLocation":"11415:11:25","nodeType":"VariableDeclaration","scope":6911,"src":"11408:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6904,"name":"uint32","nodeType":"ElementaryTypeName","src":"11408:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6907,"indexed":false,"mutability":"mutable","name":"oldOperatorAVSSplitBips","nameLocation":"11443:23:25","nodeType":"VariableDeclaration","scope":6911,"src":"11436:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6906,"name":"uint16","nodeType":"ElementaryTypeName","src":"11436:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6909,"indexed":false,"mutability":"mutable","name":"newOperatorAVSSplitBips","nameLocation":"11483:23:25","nodeType":"VariableDeclaration","scope":6911,"src":"11476:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6908,"name":"uint16","nodeType":"ElementaryTypeName","src":"11476:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11303:209:25"},"src":"11274:239:25"},{"anonymous":false,"documentation":{"id":6912,"nodeType":"StructuredDocumentation","src":"11519:508:25","text":" @notice Emitted when the operator split for Programmatic Incentives is set.\n @param caller The address calling `setOperatorPISplit`.\n @param operator The operator on behalf of which the split is being set.\n @param activatedAt The timestamp at which the split will be activated.\n @param oldOperatorPISplitBips The old split for the operator for Programmatic Incentives.\n @param newOperatorPISplitBips The new split for the operator for Programmatic Incentives."},"eventSelector":"d1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f74","id":6924,"name":"OperatorPISplitBipsSet","nameLocation":"12038:22:25","nodeType":"EventDefinition","parameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6914,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"12086:6:25","nodeType":"VariableDeclaration","scope":6924,"src":"12070:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6913,"name":"address","nodeType":"ElementaryTypeName","src":"12070:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6916,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"12118:8:25","nodeType":"VariableDeclaration","scope":6924,"src":"12102:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6915,"name":"address","nodeType":"ElementaryTypeName","src":"12102:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6918,"indexed":false,"mutability":"mutable","name":"activatedAt","nameLocation":"12143:11:25","nodeType":"VariableDeclaration","scope":6924,"src":"12136:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6917,"name":"uint32","nodeType":"ElementaryTypeName","src":"12136:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6920,"indexed":false,"mutability":"mutable","name":"oldOperatorPISplitBips","nameLocation":"12171:22:25","nodeType":"VariableDeclaration","scope":6924,"src":"12164:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6919,"name":"uint16","nodeType":"ElementaryTypeName","src":"12164:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6922,"indexed":false,"mutability":"mutable","name":"newOperatorPISplitBips","nameLocation":"12210:22:25","nodeType":"VariableDeclaration","scope":6924,"src":"12203:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6921,"name":"uint16","nodeType":"ElementaryTypeName","src":"12203:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12060:178:25"},"src":"12032:207:25"},{"anonymous":false,"eventSelector":"bab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca312","id":6932,"name":"ClaimerForSet","nameLocation":"12251:13:25","nodeType":"EventDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"indexed":true,"mutability":"mutable","name":"earner","nameLocation":"12281:6:25","nodeType":"VariableDeclaration","scope":6932,"src":"12265:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6925,"name":"address","nodeType":"ElementaryTypeName","src":"12265:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6928,"indexed":true,"mutability":"mutable","name":"oldClaimer","nameLocation":"12305:10:25","nodeType":"VariableDeclaration","scope":6932,"src":"12289:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6927,"name":"address","nodeType":"ElementaryTypeName","src":"12289:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6930,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"12333:7:25","nodeType":"VariableDeclaration","scope":6932,"src":"12317:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6929,"name":"address","nodeType":"ElementaryTypeName","src":"12317:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12264:77:25"},"src":"12245:97:25"},{"anonymous":false,"documentation":{"id":6933,"nodeType":"StructuredDocumentation","src":"12347:96:25","text":"@notice rootIndex is the specific array index of the newly created root in the storage array"},"eventSelector":"ecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd08","id":6943,"name":"DistributionRootSubmitted","nameLocation":"12454:25:25","nodeType":"EventDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"indexed":true,"mutability":"mutable","name":"rootIndex","nameLocation":"12504:9:25","nodeType":"VariableDeclaration","scope":6943,"src":"12489:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6934,"name":"uint32","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6937,"indexed":true,"mutability":"mutable","name":"root","nameLocation":"12539:4:25","nodeType":"VariableDeclaration","scope":6943,"src":"12523:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12523:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6939,"indexed":true,"mutability":"mutable","name":"rewardsCalculationEndTimestamp","nameLocation":"12568:30:25","nodeType":"VariableDeclaration","scope":6943,"src":"12553:45:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6938,"name":"uint32","nodeType":"ElementaryTypeName","src":"12553:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6941,"indexed":false,"mutability":"mutable","name":"activatedAt","nameLocation":"12615:11:25","nodeType":"VariableDeclaration","scope":6943,"src":"12608:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6940,"name":"uint32","nodeType":"ElementaryTypeName","src":"12608:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12479:153:25"},"src":"12448:185:25"},{"anonymous":false,"eventSelector":"d850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e","id":6947,"name":"DistributionRootDisabled","nameLocation":"12644:24:25","nodeType":"EventDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"indexed":true,"mutability":"mutable","name":"rootIndex","nameLocation":"12684:9:25","nodeType":"VariableDeclaration","scope":6947,"src":"12669:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6944,"name":"uint32","nodeType":"ElementaryTypeName","src":"12669:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12668:26:25"},"src":"12638:57:25"},{"anonymous":false,"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"12700:84:25","text":"@notice root is one of the submitted distribution roots that was claimed against"},"eventSelector":"9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce31","id":6963,"name":"RewardsClaimed","nameLocation":"12795:14:25","nodeType":"EventDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"indexed":false,"mutability":"mutable","name":"root","nameLocation":"12827:4:25","nodeType":"VariableDeclaration","scope":6963,"src":"12819:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12819:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6952,"indexed":true,"mutability":"mutable","name":"earner","nameLocation":"12857:6:25","nodeType":"VariableDeclaration","scope":6963,"src":"12841:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6951,"name":"address","nodeType":"ElementaryTypeName","src":"12841:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6954,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"12889:7:25","nodeType":"VariableDeclaration","scope":6963,"src":"12873:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6953,"name":"address","nodeType":"ElementaryTypeName","src":"12873:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6956,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"12922:9:25","nodeType":"VariableDeclaration","scope":6963,"src":"12906:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6955,"name":"address","nodeType":"ElementaryTypeName","src":"12906:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6959,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"12948:5:25","nodeType":"VariableDeclaration","scope":6963,"src":"12941:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":6958,"nodeType":"UserDefinedTypeName","pathNode":{"id":6957,"name":"IERC20","nameLocations":["12941:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"12941:6:25"},"referencedDeclaration":1077,"src":"12941:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6961,"indexed":false,"mutability":"mutable","name":"claimedAmount","nameLocation":"12971:13:25","nodeType":"VariableDeclaration","scope":6963,"src":"12963:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6960,"name":"uint256","nodeType":"ElementaryTypeName","src":"12963:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12809:181:25"},"src":"12789:202:25"},{"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"13074:88:25","text":"@notice The address of the entity that can update the contract with new merkle roots"},"functionSelector":"fbf1e2c1","id":6969,"implemented":false,"kind":"function","modifiers":[],"name":"rewardsUpdater","nameLocation":"13176:14:25","nodeType":"FunctionDefinition","parameters":{"id":6965,"nodeType":"ParameterList","parameters":[],"src":"13190:2:25"},"returnParameters":{"id":6968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6969,"src":"13216:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6966,"name":"address","nodeType":"ElementaryTypeName","src":"13216:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13215:9:25"},"scope":7242,"src":"13167:58:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6970,"nodeType":"StructuredDocumentation","src":"13231:198:25","text":" @notice The interval in seconds at which the calculation for a RewardsSubmission distribution is done.\n @dev Rewards Submission durations must be multiples of this interval."},"functionSelector":"9d45c281","id":6975,"implemented":false,"kind":"function","modifiers":[],"name":"CALCULATION_INTERVAL_SECONDS","nameLocation":"13443:28:25","nodeType":"FunctionDefinition","parameters":{"id":6971,"nodeType":"ParameterList","parameters":[],"src":"13471:2:25"},"returnParameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6975,"src":"13497:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6972,"name":"uint32","nodeType":"ElementaryTypeName","src":"13497:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13496:8:25"},"scope":7242,"src":"13434:71:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6976,"nodeType":"StructuredDocumentation","src":"13511:87:25","text":"@notice The maximum amount of time (seconds) that a RewardsSubmission can span over"},"functionSelector":"bf21a8aa","id":6981,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_REWARDS_DURATION","nameLocation":"13612:20:25","nodeType":"FunctionDefinition","parameters":{"id":6977,"nodeType":"ParameterList","parameters":[],"src":"13632:2:25"},"returnParameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6981,"src":"13658:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6978,"name":"uint32","nodeType":"ElementaryTypeName","src":"13658:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13657:8:25"},"scope":7242,"src":"13603:63:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6982,"nodeType":"StructuredDocumentation","src":"13672:80:25","text":"@notice max amount of time (seconds) that a submission can start in the past"},"functionSelector":"37838ed0","id":6987,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_RETROACTIVE_LENGTH","nameLocation":"13766:22:25","nodeType":"FunctionDefinition","parameters":{"id":6983,"nodeType":"ParameterList","parameters":[],"src":"13788:2:25"},"returnParameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6987,"src":"13814:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6984,"name":"uint32","nodeType":"ElementaryTypeName","src":"13814:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13813:8:25"},"scope":7242,"src":"13757:65:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6988,"nodeType":"StructuredDocumentation","src":"13828:82:25","text":"@notice max amount of time (seconds) that a submission can start in the future"},"functionSelector":"04a0c502","id":6993,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_FUTURE_LENGTH","nameLocation":"13924:17:25","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[],"src":"13941:2:25"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6993,"src":"13967:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6990,"name":"uint32","nodeType":"ElementaryTypeName","src":"13967:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13966:8:25"},"scope":7242,"src":"13915:60:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6994,"nodeType":"StructuredDocumentation","src":"13981:75:25","text":"@notice absolute min timestamp (seconds) that a submission can start at"},"functionSelector":"131433b4","id":6999,"implemented":false,"kind":"function","modifiers":[],"name":"GENESIS_REWARDS_TIMESTAMP","nameLocation":"14070:25:25","nodeType":"FunctionDefinition","parameters":{"id":6995,"nodeType":"ParameterList","parameters":[],"src":"14095:2:25"},"returnParameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6999,"src":"14121:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6996,"name":"uint32","nodeType":"ElementaryTypeName","src":"14121:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14120:8:25"},"scope":7242,"src":"14061:68:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7000,"nodeType":"StructuredDocumentation","src":"14135:84:25","text":"@notice Delay in timestamp (seconds) before a posted root can be claimed against"},"functionSelector":"3a8c0786","id":7005,"implemented":false,"kind":"function","modifiers":[],"name":"activationDelay","nameLocation":"14233:15:25","nodeType":"FunctionDefinition","parameters":{"id":7001,"nodeType":"ParameterList","parameters":[],"src":"14248:2:25"},"returnParameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7005,"src":"14274:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7002,"name":"uint32","nodeType":"ElementaryTypeName","src":"14274:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14273:8:25"},"scope":7242,"src":"14224:58:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7006,"nodeType":"StructuredDocumentation","src":"14288:108:25","text":"@notice Mapping: earner => the address of the entity who can call `processClaim` on behalf of the earner"},"functionSelector":"2b9f64a4","id":7013,"implemented":false,"kind":"function","modifiers":[],"name":"claimerFor","nameLocation":"14410:10:25","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"earner","nameLocation":"14429:6:25","nodeType":"VariableDeclaration","scope":7013,"src":"14421:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7007,"name":"address","nodeType":"ElementaryTypeName","src":"14421:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14420:16:25"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7013,"src":"14460:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7010,"name":"address","nodeType":"ElementaryTypeName","src":"14460:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14459:9:25"},"scope":7242,"src":"14401:68:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7014,"nodeType":"StructuredDocumentation","src":"14475:61:25","text":"@notice Mapping: claimer => token => total amount claimed"},"functionSelector":"865c6953","id":7024,"implemented":false,"kind":"function","modifiers":[],"name":"cumulativeClaimed","nameLocation":"14550:17:25","nodeType":"FunctionDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"claimer","nameLocation":"14576:7:25","nodeType":"VariableDeclaration","scope":7024,"src":"14568:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7015,"name":"address","nodeType":"ElementaryTypeName","src":"14568:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7019,"mutability":"mutable","name":"token","nameLocation":"14592:5:25","nodeType":"VariableDeclaration","scope":7024,"src":"14585:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7018,"nodeType":"UserDefinedTypeName","pathNode":{"id":7017,"name":"IERC20","nameLocations":["14585:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"14585:6:25"},"referencedDeclaration":1077,"src":"14585:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"14567:31:25"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7024,"src":"14622:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"14622:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14621:9:25"},"scope":7242,"src":"14541:90:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7025,"nodeType":"StructuredDocumentation","src":"14637:63:25","text":"@notice the defautl split for all operators across all avss"},"functionSelector":"63f6a798","id":7030,"implemented":false,"kind":"function","modifiers":[],"name":"defaultOperatorSplitBips","nameLocation":"14714:24:25","nodeType":"FunctionDefinition","parameters":{"id":7026,"nodeType":"ParameterList","parameters":[],"src":"14738:2:25"},"returnParameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7030,"src":"14764:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7027,"name":"uint16","nodeType":"ElementaryTypeName","src":"14764:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"14763:8:25"},"scope":7242,"src":"14705:67:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"14778:68:25","text":"@notice the split for a specific `operator` for a specific `avs`"},"functionSelector":"e063f81f","id":7040,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorAVSSplit","nameLocation":"14860:19:25","nodeType":"FunctionDefinition","parameters":{"id":7036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"operator","nameLocation":"14888:8:25","nodeType":"VariableDeclaration","scope":7040,"src":"14880:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7032,"name":"address","nodeType":"ElementaryTypeName","src":"14880:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7035,"mutability":"mutable","name":"avs","nameLocation":"14906:3:25","nodeType":"VariableDeclaration","scope":7040,"src":"14898:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7034,"name":"address","nodeType":"ElementaryTypeName","src":"14898:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14879:31:25"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7040,"src":"14934:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7037,"name":"uint16","nodeType":"ElementaryTypeName","src":"14934:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"14933:8:25"},"scope":7242,"src":"14851:91:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7041,"nodeType":"StructuredDocumentation","src":"14948:75:25","text":"@notice the split for a specific `operator` for Programmatic Incentives"},"functionSelector":"4b943960","id":7048,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorPISplit","nameLocation":"15037:18:25","nodeType":"FunctionDefinition","parameters":{"id":7044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7043,"mutability":"mutable","name":"operator","nameLocation":"15064:8:25","nodeType":"VariableDeclaration","scope":7048,"src":"15056:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7042,"name":"address","nodeType":"ElementaryTypeName","src":"15056:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15055:18:25"},"returnParameters":{"id":7047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7048,"src":"15097:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7045,"name":"uint16","nodeType":"ElementaryTypeName","src":"15097:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"15096:8:25"},"scope":7242,"src":"15028:77:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7049,"nodeType":"StructuredDocumentation","src":"15111:48:25","text":"@notice return the hash of the earner's leaf"},"functionSelector":"149bc872","id":7057,"implemented":false,"kind":"function","modifiers":[],"name":"calculateEarnerLeafHash","nameLocation":"15173:23:25","nodeType":"FunctionDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"leaf","nameLocation":"15227:4:25","nodeType":"VariableDeclaration","scope":7057,"src":"15197:34:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_EarnerTreeMerkleLeaf_$6791_calldata_ptr","typeString":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf"},"typeName":{"id":7051,"nodeType":"UserDefinedTypeName","pathNode":{"id":7050,"name":"EarnerTreeMerkleLeaf","nameLocations":["15197:20:25"],"nodeType":"IdentifierPath","referencedDeclaration":6791,"src":"15197:20:25"},"referencedDeclaration":6791,"src":"15197:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_EarnerTreeMerkleLeaf_$6791_storage_ptr","typeString":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf"}},"visibility":"internal"}],"src":"15196:36:25"},"returnParameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7057,"src":"15256:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15256:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15255:9:25"},"scope":7242,"src":"15164:101:25","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":7058,"nodeType":"StructuredDocumentation","src":"15271:55:25","text":"@notice returns the hash of the earner's token leaf"},"functionSelector":"f8cd8448","id":7066,"implemented":false,"kind":"function","modifiers":[],"name":"calculateTokenLeafHash","nameLocation":"15340:22:25","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"leaf","nameLocation":"15392:4:25","nodeType":"VariableDeclaration","scope":7066,"src":"15363:33:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTreeMerkleLeaf_$6798_calldata_ptr","typeString":"struct IRewardsCoordinator.TokenTreeMerkleLeaf"},"typeName":{"id":7060,"nodeType":"UserDefinedTypeName","pathNode":{"id":7059,"name":"TokenTreeMerkleLeaf","nameLocations":["15363:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":6798,"src":"15363:19:25"},"referencedDeclaration":6798,"src":"15363:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenTreeMerkleLeaf_$6798_storage_ptr","typeString":"struct IRewardsCoordinator.TokenTreeMerkleLeaf"}},"visibility":"internal"}],"src":"15362:35:25"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7066,"src":"15421:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15421:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15420:9:25"},"scope":7242,"src":"15331:99:25","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":7067,"nodeType":"StructuredDocumentation","src":"15436:126:25","text":"@notice returns 'true' if the claim would currently pass the check in `processClaims`\n but will revert if not valid"},"functionSelector":"5e9d8348","id":7075,"implemented":false,"kind":"function","modifiers":[],"name":"checkClaim","nameLocation":"15576:10:25","nodeType":"FunctionDefinition","parameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"claim","nameLocation":"15615:5:25","nodeType":"VariableDeclaration","scope":7075,"src":"15587:33:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsMerkleClaim_$6819_calldata_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim"},"typeName":{"id":7069,"nodeType":"UserDefinedTypeName","pathNode":{"id":7068,"name":"RewardsMerkleClaim","nameLocations":["15587:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":6819,"src":"15587:18:25"},"referencedDeclaration":6819,"src":"15587:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsMerkleClaim_$6819_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim"}},"visibility":"internal"}],"src":"15586:35:25"},"returnParameters":{"id":7074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"15645:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7072,"name":"bool","nodeType":"ElementaryTypeName","src":"15645:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15644:6:25"},"scope":7242,"src":"15567:84:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"15657:77:25","text":"@notice The timestamp until which RewardsSubmissions have been calculated"},"functionSelector":"4d18cc35","id":7081,"implemented":false,"kind":"function","modifiers":[],"name":"currRewardsCalculationEndTimestamp","nameLocation":"15748:34:25","nodeType":"FunctionDefinition","parameters":{"id":7077,"nodeType":"ParameterList","parameters":[],"src":"15782:2:25"},"returnParameters":{"id":7080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7081,"src":"15808:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7078,"name":"uint32","nodeType":"ElementaryTypeName","src":"15808:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15807:8:25"},"scope":7242,"src":"15739:77:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7082,"nodeType":"StructuredDocumentation","src":"15822:59:25","text":"@notice returns the number of distribution roots posted"},"functionSelector":"7b8f8b05","id":7087,"implemented":false,"kind":"function","modifiers":[],"name":"getDistributionRootsLength","nameLocation":"15895:26:25","nodeType":"FunctionDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[],"src":"15921:2:25"},"returnParameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7087,"src":"15947:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7084,"name":"uint256","nodeType":"ElementaryTypeName","src":"15947:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15946:9:25"},"scope":7242,"src":"15886:70:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7088,"nodeType":"StructuredDocumentation","src":"15962:63:25","text":"@notice returns the distributionRoot at the specified index"},"functionSelector":"de02e503","id":7096,"implemented":false,"kind":"function","modifiers":[],"name":"getDistributionRootAtIndex","nameLocation":"16039:26:25","nodeType":"FunctionDefinition","parameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"index","nameLocation":"16074:5:25","nodeType":"VariableDeclaration","scope":7096,"src":"16066:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"16066:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16065:15:25"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7096,"src":"16104:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DistributionRoot_$6785_memory_ptr","typeString":"struct IRewardsCoordinator.DistributionRoot"},"typeName":{"id":7093,"nodeType":"UserDefinedTypeName","pathNode":{"id":7092,"name":"DistributionRoot","nameLocations":["16104:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":6785,"src":"16104:16:25"},"referencedDeclaration":6785,"src":"16104:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_DistributionRoot_$6785_storage_ptr","typeString":"struct IRewardsCoordinator.DistributionRoot"}},"visibility":"internal"}],"src":"16103:25:25"},"scope":7242,"src":"16030:99:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7097,"nodeType":"StructuredDocumentation","src":"16135:48:25","text":"@notice returns the current distributionRoot"},"functionSelector":"9be3d4e4","id":7103,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentDistributionRoot","nameLocation":"16197:26:25","nodeType":"FunctionDefinition","parameters":{"id":7098,"nodeType":"ParameterList","parameters":[],"src":"16223:2:25"},"returnParameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7103,"src":"16249:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DistributionRoot_$6785_memory_ptr","typeString":"struct IRewardsCoordinator.DistributionRoot"},"typeName":{"id":7100,"nodeType":"UserDefinedTypeName","pathNode":{"id":7099,"name":"DistributionRoot","nameLocations":["16249:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":6785,"src":"16249:16:25"},"referencedDeclaration":6785,"src":"16249:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_DistributionRoot_$6785_storage_ptr","typeString":"struct IRewardsCoordinator.DistributionRoot"}},"visibility":"internal"}],"src":"16248:25:25"},"scope":7242,"src":"16188:86:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"16280:163:25","text":"@notice loop through the distribution roots from reverse and get latest root that is not disabled and activated\n i.e. a root that can be claimed against"},"functionSelector":"0e9a53cf","id":7110,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentClaimableDistributionRoot","nameLocation":"16457:35:25","nodeType":"FunctionDefinition","parameters":{"id":7105,"nodeType":"ParameterList","parameters":[],"src":"16492:2:25"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7110,"src":"16518:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DistributionRoot_$6785_memory_ptr","typeString":"struct IRewardsCoordinator.DistributionRoot"},"typeName":{"id":7107,"nodeType":"UserDefinedTypeName","pathNode":{"id":7106,"name":"DistributionRoot","nameLocations":["16518:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":6785,"src":"16518:16:25"},"referencedDeclaration":6785,"src":"16518:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_DistributionRoot_$6785_storage_ptr","typeString":"struct IRewardsCoordinator.DistributionRoot"}},"visibility":"internal"}],"src":"16517:25:25"},"scope":7242,"src":"16448:95:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"16549:83:25","text":"@notice loop through distribution roots from reverse and return index from hash"},"functionSelector":"e810ce21","id":7118,"implemented":false,"kind":"function","modifiers":[],"name":"getRootIndexFromHash","nameLocation":"16646:20:25","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"rootHash","nameLocation":"16675:8:25","nodeType":"VariableDeclaration","scope":7118,"src":"16667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16667:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16666:18:25"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7118,"src":"16708:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7115,"name":"uint32","nodeType":"ElementaryTypeName","src":"16708:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"16707:8:25"},"scope":7242,"src":"16637:79:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"16803:769:25","text":" @notice Creates a new rewards submission on behalf of an AVS, to be split amongst the\n set of stakers delegated to operators who are registered to the `avs`\n @param rewardsSubmissions The rewards submissions being created\n @dev Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being made\n @dev The duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`\n @dev The tokens are sent to the `RewardsCoordinator` contract\n @dev Strategies must be in ascending order of addresses to check for duplicates\n @dev This function will revert if the `rewardsSubmission` is malformed,\n e.g. if the `strategies` and `weights` arrays are of non-equal lengths"},"functionSelector":"fce36c7d","id":7126,"implemented":false,"kind":"function","modifiers":[],"name":"createAVSRewardsSubmission","nameLocation":"17586:26:25","nodeType":"FunctionDefinition","parameters":{"id":7124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"rewardsSubmissions","nameLocation":"17642:18:25","nodeType":"VariableDeclaration","scope":7126,"src":"17613:47:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsSubmission_$6756_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission[]"},"typeName":{"baseType":{"id":7121,"nodeType":"UserDefinedTypeName","pathNode":{"id":7120,"name":"RewardsSubmission","nameLocations":["17613:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":6756,"src":"17613:17:25"},"referencedDeclaration":6756,"src":"17613:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"}},"id":7122,"nodeType":"ArrayTypeName","src":"17613:19:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsSubmission_$6756_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission[]"}},"visibility":"internal"}],"src":"17612:49:25"},"returnParameters":{"id":7125,"nodeType":"ParameterList","parameters":[],"src":"17670:0:25"},"scope":7242,"src":"17577:94:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7127,"nodeType":"StructuredDocumentation","src":"17677:351:25","text":" @notice similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers\n rather than just those delegated to operators who are registered to a single avs and is\n a permissioned call based on isRewardsForAllSubmitter mapping.\n @param rewardsSubmission The rewards submission being created"},"functionSelector":"36af41fa","id":7134,"implemented":false,"kind":"function","modifiers":[],"name":"createRewardsForAllSubmission","nameLocation":"18042:29:25","nodeType":"FunctionDefinition","parameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"rewardsSubmission","nameLocation":"18101:17:25","nodeType":"VariableDeclaration","scope":7134,"src":"18072:46:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsSubmission_$6756_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission[]"},"typeName":{"baseType":{"id":7129,"nodeType":"UserDefinedTypeName","pathNode":{"id":7128,"name":"RewardsSubmission","nameLocations":["18072:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":6756,"src":"18072:17:25"},"referencedDeclaration":6756,"src":"18072:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"}},"id":7130,"nodeType":"ArrayTypeName","src":"18072:19:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsSubmission_$6756_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission[]"}},"visibility":"internal"}],"src":"18071:48:25"},"returnParameters":{"id":7133,"nodeType":"ParameterList","parameters":[],"src":"18128:0:25"},"scope":7242,"src":"18033:96:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7135,"nodeType":"StructuredDocumentation","src":"18135:409:25","text":" @notice Creates a new rewards submission for all earners across all AVSs.\n Earners in this case indicating all operators and their delegated stakers. Undelegated stake\n is not rewarded from this RewardsSubmission. This interface is only callable\n by the token hopper contract from the Eigen Foundation\n @param rewardsSubmissions The rewards submissions being created"},"functionSelector":"ff9f6cce","id":7142,"implemented":false,"kind":"function","modifiers":[],"name":"createRewardsForAllEarners","nameLocation":"18558:26:25","nodeType":"FunctionDefinition","parameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"rewardsSubmissions","nameLocation":"18614:18:25","nodeType":"VariableDeclaration","scope":7142,"src":"18585:47:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsSubmission_$6756_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission[]"},"typeName":{"baseType":{"id":7137,"nodeType":"UserDefinedTypeName","pathNode":{"id":7136,"name":"RewardsSubmission","nameLocations":["18585:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":6756,"src":"18585:17:25"},"referencedDeclaration":6756,"src":"18585:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsSubmission_$6756_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission"}},"id":7138,"nodeType":"ArrayTypeName","src":"18585:19:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsSubmission_$6756_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsSubmission[]"}},"visibility":"internal"}],"src":"18584:49:25"},"returnParameters":{"id":7141,"nodeType":"ParameterList","parameters":[],"src":"18642:0:25"},"scope":7242,"src":"18549:94:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7143,"nodeType":"StructuredDocumentation","src":"18649:1113:25","text":" @notice Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and\n set of stakers delegated to operators who are registered to the `avs`.\n @param avs The AVS on behalf of which the reward is being submitted\n @param operatorDirectedRewardsSubmissions The operator-directed rewards submissions being created\n @dev Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being made\n @dev The duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`\n @dev The tokens are sent to the `RewardsCoordinator` contract\n @dev The `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.\n @dev Strategies must be in ascending order of addresses to check for duplicates\n @dev Operators must be in ascending order of addresses to check for duplicates.\n @dev This function will revert if the `operatorDirectedRewardsSubmissions` is malformed."},"functionSelector":"9cb9a5fa","id":7152,"implemented":false,"kind":"function","modifiers":[],"name":"createOperatorDirectedAVSRewardsSubmission","nameLocation":"19776:42:25","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"avs","nameLocation":"19836:3:25","nodeType":"VariableDeclaration","scope":7152,"src":"19828:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7144,"name":"address","nodeType":"ElementaryTypeName","src":"19828:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7149,"mutability":"mutable","name":"operatorDirectedRewardsSubmissions","nameLocation":"19894:34:25","nodeType":"VariableDeclaration","scope":7152,"src":"19849:79:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]"},"typeName":{"baseType":{"id":7147,"nodeType":"UserDefinedTypeName","pathNode":{"id":7146,"name":"OperatorDirectedRewardsSubmission","nameLocations":["19849:33:25"],"nodeType":"IdentifierPath","referencedDeclaration":6775,"src":"19849:33:25"},"referencedDeclaration":6775,"src":"19849:33:25","typeDescriptions":{"typeIdentifier":"t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission"}},"id":7148,"nodeType":"ArrayTypeName","src":"19849:35:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OperatorDirectedRewardsSubmission_$6775_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]"}},"visibility":"internal"}],"src":"19818:116:25"},"returnParameters":{"id":7151,"nodeType":"ParameterList","parameters":[],"src":"19943:0:25"},"scope":7242,"src":"19767:177:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7153,"nodeType":"StructuredDocumentation","src":"19950:867:25","text":" @notice Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]).\n Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for,\n they can simply claim against the latest root and the contract will calculate the difference between\n their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\n @param claim The RewardsMerkleClaim to be processed.\n Contains the root index, earner, token leaves, and required proofs\n @param recipient The address recipient that receives the ERC20 rewards\n @dev only callable by the valid claimer, that is\n if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only\n claimerFor[claim.earner] can claim the rewards."},"functionSelector":"3ccc861d","id":7161,"implemented":false,"kind":"function","modifiers":[],"name":"processClaim","nameLocation":"20831:12:25","nodeType":"FunctionDefinition","parameters":{"id":7159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"claim","nameLocation":"20872:5:25","nodeType":"VariableDeclaration","scope":7161,"src":"20844:33:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsMerkleClaim_$6819_calldata_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim"},"typeName":{"id":7155,"nodeType":"UserDefinedTypeName","pathNode":{"id":7154,"name":"RewardsMerkleClaim","nameLocations":["20844:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":6819,"src":"20844:18:25"},"referencedDeclaration":6819,"src":"20844:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsMerkleClaim_$6819_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim"}},"visibility":"internal"},{"constant":false,"id":7158,"mutability":"mutable","name":"recipient","nameLocation":"20887:9:25","nodeType":"VariableDeclaration","scope":7161,"src":"20879:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7157,"name":"address","nodeType":"ElementaryTypeName","src":"20879:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20843:54:25"},"returnParameters":{"id":7160,"nodeType":"ParameterList","parameters":[],"src":"20906:0:25"},"scope":7242,"src":"20822:85:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"20913:1014:25","text":" @notice Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]).\n Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for,\n they can simply claim against the latest root and the contract will calculate the difference between\n their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\n @param claims The RewardsMerkleClaims to be processed.\n Contains the root index, earner, token leaves, and required proofs\n @param recipient The address recipient that receives the ERC20 rewards\n @dev only callable by the valid claimer, that is\n if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only\n claimerFor[claim.earner] can claim the rewards.\n @dev This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary."},"functionSelector":"4596021c","id":7171,"implemented":false,"kind":"function","modifiers":[],"name":"processClaims","nameLocation":"21941:13:25","nodeType":"FunctionDefinition","parameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"claims","nameLocation":"21985:6:25","nodeType":"VariableDeclaration","scope":7171,"src":"21955:36:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsMerkleClaim_$6819_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim[]"},"typeName":{"baseType":{"id":7164,"nodeType":"UserDefinedTypeName","pathNode":{"id":7163,"name":"RewardsMerkleClaim","nameLocations":["21955:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":6819,"src":"21955:18:25"},"referencedDeclaration":6819,"src":"21955:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_RewardsMerkleClaim_$6819_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim"}},"id":7165,"nodeType":"ArrayTypeName","src":"21955:20:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardsMerkleClaim_$6819_storage_$dyn_storage_ptr","typeString":"struct IRewardsCoordinator.RewardsMerkleClaim[]"}},"visibility":"internal"},{"constant":false,"id":7168,"mutability":"mutable","name":"recipient","nameLocation":"22001:9:25","nodeType":"VariableDeclaration","scope":7171,"src":"21993:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7167,"name":"address","nodeType":"ElementaryTypeName","src":"21993:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21954:57:25"},"returnParameters":{"id":7170,"nodeType":"ParameterList","parameters":[],"src":"22020:0:25"},"scope":7242,"src":"21932:89:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7172,"nodeType":"StructuredDocumentation","src":"22027:318:25","text":" @notice Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\n @param root The merkle root of the distribution\n @param rewardsCalculationEndTimestamp The timestamp until which rewards have been calculated\n @dev Only callable by the rewardsUpdater"},"functionSelector":"3efe1db6","id":7179,"implemented":false,"kind":"function","modifiers":[],"name":"submitRoot","nameLocation":"22359:10:25","nodeType":"FunctionDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"root","nameLocation":"22378:4:25","nodeType":"VariableDeclaration","scope":7179,"src":"22370:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22370:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7176,"mutability":"mutable","name":"rewardsCalculationEndTimestamp","nameLocation":"22391:30:25","nodeType":"VariableDeclaration","scope":7179,"src":"22384:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7175,"name":"uint32","nodeType":"ElementaryTypeName","src":"22384:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"22369:53:25"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[],"src":"22431:0:25"},"scope":7242,"src":"22350:82:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7180,"nodeType":"StructuredDocumentation","src":"22438:176:25","text":" @notice allow the rewardsUpdater to disable/cancel a pending root submission in case of an error\n @param rootIndex The index of the root to be disabled"},"functionSelector":"f96abf2e","id":7185,"implemented":false,"kind":"function","modifiers":[],"name":"disableRoot","nameLocation":"22628:11:25","nodeType":"FunctionDefinition","parameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"rootIndex","nameLocation":"22647:9:25","nodeType":"VariableDeclaration","scope":7185,"src":"22640:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7181,"name":"uint32","nodeType":"ElementaryTypeName","src":"22640:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"22639:18:25"},"returnParameters":{"id":7184,"nodeType":"ParameterList","parameters":[],"src":"22666:0:25"},"scope":7242,"src":"22619:48:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7186,"nodeType":"StructuredDocumentation","src":"22673:266:25","text":" @notice Sets the address of the entity that can call `processClaim` on behalf of the earner (msg.sender)\n @param claimer The address of the entity that can call `processClaim` on behalf of the earner\n @dev Only callable by the `earner`"},"functionSelector":"a0169ddd","id":7191,"implemented":false,"kind":"function","modifiers":[],"name":"setClaimerFor","nameLocation":"22953:13:25","nodeType":"FunctionDefinition","parameters":{"id":7189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7188,"mutability":"mutable","name":"claimer","nameLocation":"22975:7:25","nodeType":"VariableDeclaration","scope":7191,"src":"22967:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7187,"name":"address","nodeType":"ElementaryTypeName","src":"22967:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22966:17:25"},"returnParameters":{"id":7190,"nodeType":"ParameterList","parameters":[],"src":"22992:0:25"},"scope":7242,"src":"22944:49:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7192,"nodeType":"StructuredDocumentation","src":"22999:211:25","text":" @notice Sets the delay in timestamp before a posted root can be claimed against\n @dev Only callable by the contract owner\n @param _activationDelay The new value for activationDelay"},"functionSelector":"58baaa3e","id":7197,"implemented":false,"kind":"function","modifiers":[],"name":"setActivationDelay","nameLocation":"23224:18:25","nodeType":"FunctionDefinition","parameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"_activationDelay","nameLocation":"23250:16:25","nodeType":"VariableDeclaration","scope":7197,"src":"23243:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7193,"name":"uint32","nodeType":"ElementaryTypeName","src":"23243:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"23242:25:25"},"returnParameters":{"id":7196,"nodeType":"ParameterList","parameters":[],"src":"23276:0:25"},"scope":7242,"src":"23215:62:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7198,"nodeType":"StructuredDocumentation","src":"23283:214:25","text":" @notice Sets the default split for all operators across all avss.\n @param split The default split for all operators across all avss in bips.\n @dev Only callable by the contract owner."},"functionSelector":"a50a1d9c","id":7203,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultOperatorSplit","nameLocation":"23511:23:25","nodeType":"FunctionDefinition","parameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"split","nameLocation":"23542:5:25","nodeType":"VariableDeclaration","scope":7203,"src":"23535:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7199,"name":"uint16","nodeType":"ElementaryTypeName","src":"23535:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"23534:14:25"},"returnParameters":{"id":7202,"nodeType":"ParameterList","parameters":[],"src":"23557:0:25"},"scope":7242,"src":"23502:56:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7204,"nodeType":"StructuredDocumentation","src":"23564:471:25","text":" @notice Sets the split for a specific operator for a specific avs\n @param operator The operator who is setting the split\n @param avs The avs for which the split is being set by the operator\n @param split The split for the operator for the specific avs in bips.\n @dev Only callable by the operator\n @dev Split has to be between 0 and 10000 bips (inclusive)\n @dev The split will be activated after the activation delay"},"functionSelector":"dcbb03b3","id":7213,"implemented":false,"kind":"function","modifiers":[],"name":"setOperatorAVSSplit","nameLocation":"24049:19:25","nodeType":"FunctionDefinition","parameters":{"id":7211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"operator","nameLocation":"24077:8:25","nodeType":"VariableDeclaration","scope":7213,"src":"24069:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7205,"name":"address","nodeType":"ElementaryTypeName","src":"24069:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7208,"mutability":"mutable","name":"avs","nameLocation":"24095:3:25","nodeType":"VariableDeclaration","scope":7213,"src":"24087:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7207,"name":"address","nodeType":"ElementaryTypeName","src":"24087:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7210,"mutability":"mutable","name":"split","nameLocation":"24107:5:25","nodeType":"VariableDeclaration","scope":7213,"src":"24100:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7209,"name":"uint16","nodeType":"ElementaryTypeName","src":"24100:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"24068:45:25"},"returnParameters":{"id":7212,"nodeType":"ParameterList","parameters":[],"src":"24122:0:25"},"scope":7242,"src":"24040:83:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7214,"nodeType":"StructuredDocumentation","src":"24129:431:25","text":" @notice Sets the split for a specific operator for Programmatic Incentives.\n @param operator The operator on behalf of which the split is being set.\n @param split The split for the operator for Programmatic Incentives in bips.\n @dev Only callable by the operator\n @dev Split has to be between 0 and 10000 bips (inclusive)\n @dev The split will be activated after the activation delay"},"functionSelector":"b3dbb0e0","id":7221,"implemented":false,"kind":"function","modifiers":[],"name":"setOperatorPISplit","nameLocation":"24574:18:25","nodeType":"FunctionDefinition","parameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"operator","nameLocation":"24601:8:25","nodeType":"VariableDeclaration","scope":7221,"src":"24593:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7215,"name":"address","nodeType":"ElementaryTypeName","src":"24593:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7218,"mutability":"mutable","name":"split","nameLocation":"24618:5:25","nodeType":"VariableDeclaration","scope":7221,"src":"24611:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7217,"name":"uint16","nodeType":"ElementaryTypeName","src":"24611:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"24592:32:25"},"returnParameters":{"id":7220,"nodeType":"ParameterList","parameters":[],"src":"24633:0:25"},"scope":7242,"src":"24565:69:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7222,"nodeType":"StructuredDocumentation","src":"24640:214:25","text":" @notice Sets the permissioned `rewardsUpdater` address which can post new roots\n @dev Only callable by the contract owner\n @param _rewardsUpdater The address of the new rewardsUpdater"},"functionSelector":"863cb9a9","id":7227,"implemented":false,"kind":"function","modifiers":[],"name":"setRewardsUpdater","nameLocation":"24868:17:25","nodeType":"FunctionDefinition","parameters":{"id":7225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7224,"mutability":"mutable","name":"_rewardsUpdater","nameLocation":"24894:15:25","nodeType":"VariableDeclaration","scope":7227,"src":"24886:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7223,"name":"address","nodeType":"ElementaryTypeName","src":"24886:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24885:25:25"},"returnParameters":{"id":7226,"nodeType":"ParameterList","parameters":[],"src":"24919:0:25"},"scope":7242,"src":"24859:61:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7228,"nodeType":"StructuredDocumentation","src":"24926:310:25","text":" @notice Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission\n @dev Only callable by the contract owner\n @param _submitter The address of the rewardsForAllSubmitter\n @param _newValue The new value for isRewardsForAllSubmitter"},"functionSelector":"0eb38345","id":7235,"implemented":false,"kind":"function","modifiers":[],"name":"setRewardsForAllSubmitter","nameLocation":"25250:25:25","nodeType":"FunctionDefinition","parameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"_submitter","nameLocation":"25284:10:25","nodeType":"VariableDeclaration","scope":7235,"src":"25276:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7229,"name":"address","nodeType":"ElementaryTypeName","src":"25276:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"_newValue","nameLocation":"25301:9:25","nodeType":"VariableDeclaration","scope":7235,"src":"25296:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7231,"name":"bool","nodeType":"ElementaryTypeName","src":"25296:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25275:36:25"},"returnParameters":{"id":7234,"nodeType":"ParameterList","parameters":[],"src":"25320:0:25"},"scope":7242,"src":"25241:80:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7236,"nodeType":"StructuredDocumentation","src":"25327:384:25","text":" @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID.\n @dev By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision.\n for more detailed information please read EIP-712."},"functionSelector":"f698da25","id":7241,"implemented":false,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"25725:15:25","nodeType":"FunctionDefinition","parameters":{"id":7237,"nodeType":"ParameterList","parameters":[],"src":"25740:2:25"},"returnParameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7241,"src":"25766:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25766:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25765:9:25"},"scope":7242,"src":"25716:59:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7243,"src":"655:25122:25","usedErrors":[],"usedEvents":[6831,6843,6855,6869,6876,6884,6890,6896,6911,6924,6932,6943,6947,6963]}],"src":"37:25741:25"},"id":25},"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol","exportedSymbols":{"ISignatureUtils":[7258]},"id":7259,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7244,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignatureUtils","contractDependencies":[],"contractKind":"interface","documentation":{"id":7245,"nodeType":"StructuredDocumentation","src":"63:173:26","text":" @title The interface for common signature utilities.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service"},"fullyImplemented":true,"id":7258,"linearizedBaseContracts":[7258],"name":"ISignatureUtils","nameLocation":"247:15:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISignatureUtils.SignatureWithExpiry","id":7250,"members":[{"constant":false,"id":7247,"mutability":"mutable","name":"signature","nameLocation":"515:9:26","nodeType":"VariableDeclaration","scope":7250,"src":"509:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7246,"name":"bytes","nodeType":"ElementaryTypeName","src":"509:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7249,"mutability":"mutable","name":"expiry","nameLocation":"601:6:26","nodeType":"VariableDeclaration","scope":7250,"src":"593:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SignatureWithExpiry","nameLocation":"411:19:26","nodeType":"StructDefinition","scope":7258,"src":"404:210:26","visibility":"public"},{"canonicalName":"ISignatureUtils.SignatureWithSaltAndExpiry","id":7257,"members":[{"constant":false,"id":7252,"mutability":"mutable","name":"signature","nameLocation":"897:9:26","nodeType":"VariableDeclaration","scope":7257,"src":"891:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7251,"name":"bytes","nodeType":"ElementaryTypeName","src":"891:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7254,"mutability":"mutable","name":"salt","nameLocation":"975:4:26","nodeType":"VariableDeclaration","scope":7257,"src":"967:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"967:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7256,"mutability":"mutable","name":"expiry","nameLocation":"1056:6:26","nodeType":"VariableDeclaration","scope":7257,"src":"1048:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SignatureWithSaltAndExpiry","nameLocation":"786:26:26","nodeType":"StructDefinition","scope":7258,"src":"779:290:26","visibility":"public"}],"scope":7259,"src":"237:834:26","usedErrors":[],"usedEvents":[]}],"src":"37:1035:26"},"id":26},"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol","exportedSymbols":{"IDelegationManager":[6097],"IERC20":[1077],"ISignatureUtils":[7258],"ISlasher":[7497],"IStrategy":[7612],"IStrategyManager":[7850]},"id":7498,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7260,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:27"},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol","file":"./IStrategyManager.sol","id":7261,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7498,"sourceUnit":7851,"src":"63:32:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","file":"./IDelegationManager.sol","id":7262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7498,"sourceUnit":6098,"src":"96:34:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISlasher","contractDependencies":[],"contractKind":"interface","documentation":{"id":7263,"nodeType":"StructuredDocumentation","src":"132:262:27","text":" @title Interface for the primary 'slashing' contract for EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice See the `Slasher` contract itself for implementation details."},"fullyImplemented":false,"id":7497,"linearizedBaseContracts":[7497],"name":"ISlasher","nameLocation":"405:8:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISlasher.MiddlewareTimes","id":7268,"members":[{"constant":false,"id":7265,"mutability":"mutable","name":"stalestUpdateBlock","nameLocation":"744:18:27","nodeType":"VariableDeclaration","scope":7268,"src":"737:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7264,"name":"uint32","nodeType":"ElementaryTypeName","src":"737:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7267,"mutability":"mutable","name":"latestServeUntilBlock","nameLocation":"875:21:27","nodeType":"VariableDeclaration","scope":7268,"src":"868:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7266,"name":"uint32","nodeType":"ElementaryTypeName","src":"868:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"MiddlewareTimes","nameLocation":"552:15:27","nodeType":"StructDefinition","scope":7497,"src":"545:358:27","visibility":"public"},{"canonicalName":"ISlasher.MiddlewareDetails","id":7275,"members":[{"constant":false,"id":7270,"mutability":"mutable","name":"registrationMayBeginAtBlock","nameLocation":"1215:27:27","nodeType":"VariableDeclaration","scope":7275,"src":"1208:34:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7269,"name":"uint32","nodeType":"ElementaryTypeName","src":"1208:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7272,"mutability":"mutable","name":"contractCanSlashOperatorUntilBlock","nameLocation":"1335:34:27","nodeType":"VariableDeclaration","scope":7275,"src":"1328:41:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7271,"name":"uint32","nodeType":"ElementaryTypeName","src":"1328:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7274,"mutability":"mutable","name":"latestUpdateBlock","nameLocation":"1488:17:27","nodeType":"VariableDeclaration","scope":7275,"src":"1481:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7273,"name":"uint32","nodeType":"ElementaryTypeName","src":"1481:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"MiddlewareDetails","nameLocation":"1025:17:27","nodeType":"StructDefinition","scope":7497,"src":"1018:494:27","visibility":"public"},{"anonymous":false,"documentation":{"id":7276,"nodeType":"StructuredDocumentation","src":"1518:75:27","text":"@notice Emitted when a middleware times is added to `operator`'s array."},"eventSelector":"1b62ba64c72d01e41a2b8c46e6aeeff728ef3a4438cf1cac3d92ee12189d5649","id":7286,"name":"MiddlewareTimesAdded","nameLocation":"1604:20:27","nodeType":"EventDefinition","parameters":{"id":7285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"1642:8:27","nodeType":"VariableDeclaration","scope":7286,"src":"1634:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7277,"name":"address","nodeType":"ElementaryTypeName","src":"1634:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7280,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"1660:5:27","nodeType":"VariableDeclaration","scope":7286,"src":"1652:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7282,"indexed":false,"mutability":"mutable","name":"stalestUpdateBlock","nameLocation":"1674:18:27","nodeType":"VariableDeclaration","scope":7286,"src":"1667:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7281,"name":"uint32","nodeType":"ElementaryTypeName","src":"1667:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7284,"indexed":false,"mutability":"mutable","name":"latestServeUntilBlock","nameLocation":"1701:21:27","nodeType":"VariableDeclaration","scope":7286,"src":"1694:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7283,"name":"uint32","nodeType":"ElementaryTypeName","src":"1694:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1624:104:27"},"src":"1598:131:27"},{"anonymous":false,"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"1735:84:27","text":"@notice Emitted when `operator` begins to allow `contractAddress` to slash them."},"eventSelector":"efa9fb38e813d53c15edf501e03852843a3fed691960523391d71a092b3627d8","id":7293,"name":"OptedIntoSlashing","nameLocation":"1830:17:27","nodeType":"EventDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1864:8:27","nodeType":"VariableDeclaration","scope":7293,"src":"1848:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7288,"name":"address","nodeType":"ElementaryTypeName","src":"1848:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7291,"indexed":true,"mutability":"mutable","name":"contractAddress","nameLocation":"1890:15:27","nodeType":"VariableDeclaration","scope":7293,"src":"1874:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7290,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1847:59:27"},"src":"1824:83:27"},{"anonymous":false,"documentation":{"id":7294,"nodeType":"StructuredDocumentation","src":"1913:149:27","text":"@notice Emitted when `contractAddress` signals that it will no longer be able to slash `operator` after the `contractCanSlashOperatorUntilBlock`."},"eventSelector":"9aa1b1391f35c672ed1f3b7ece632f4513e618366bef7a2f67b7c6bc1f2d2b14","id":7302,"name":"SlashingAbilityRevoked","nameLocation":"2073:22:27","nodeType":"EventDefinition","parameters":{"id":7301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2121:8:27","nodeType":"VariableDeclaration","scope":7302,"src":"2105:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7295,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7298,"indexed":true,"mutability":"mutable","name":"contractAddress","nameLocation":"2147:15:27","nodeType":"VariableDeclaration","scope":7302,"src":"2131:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7297,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7300,"indexed":false,"mutability":"mutable","name":"contractCanSlashOperatorUntilBlock","nameLocation":"2171:34:27","nodeType":"VariableDeclaration","scope":7302,"src":"2164:41:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7299,"name":"uint32","nodeType":"ElementaryTypeName","src":"2164:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2095:116:27"},"src":"2067:145:27"},{"anonymous":false,"documentation":{"id":7303,"nodeType":"StructuredDocumentation","src":"2218:250:27","text":" @notice Emitted when `slashingContract` 'freezes' the `slashedOperator`.\n @dev The `slashingContract` must have permission to slash the `slashedOperator`, i.e. `canSlash(slasherOperator, slashingContract)` must return 'true'."},"eventSelector":"444a84f512816ae7be8ed8a66aa88e362eb54d0988e83acc9d81746622b3ba51","id":7309,"name":"OperatorFrozen","nameLocation":"2479:14:27","nodeType":"EventDefinition","parameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7305,"indexed":true,"mutability":"mutable","name":"slashedOperator","nameLocation":"2510:15:27","nodeType":"VariableDeclaration","scope":7309,"src":"2494:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7304,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7307,"indexed":true,"mutability":"mutable","name":"slashingContract","nameLocation":"2543:16:27","nodeType":"VariableDeclaration","scope":7309,"src":"2527:32:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7306,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:67:27"},"src":"2473:88:27"},{"anonymous":false,"documentation":{"id":7310,"nodeType":"StructuredDocumentation","src":"2567:129:27","text":"@notice Emitted when `previouslySlashedAddress` is 'unfrozen', allowing them to again move deposited funds within EigenLayer."},"eventSelector":"d4cef0af27800d466fcacd85779857378b85cb61569005ff1464fa6e5ced69d8","id":7314,"name":"FrozenStatusReset","nameLocation":"2707:17:27","nodeType":"EventDefinition","parameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"indexed":true,"mutability":"mutable","name":"previouslySlashedAddress","nameLocation":"2741:24:27","nodeType":"VariableDeclaration","scope":7314,"src":"2725:40:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7311,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:42:27"},"src":"2701:66:27"},{"documentation":{"id":7315,"nodeType":"StructuredDocumentation","src":"2773:190:27","text":" @notice Gives the `contractAddress` permission to slash the funds of the caller.\n @dev Typically, this function must be called prior to registering for a middleware."},"functionSelector":"f73b7519","id":7320,"implemented":false,"kind":"function","modifiers":[],"name":"optIntoSlashing","nameLocation":"2977:15:27","nodeType":"FunctionDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"contractAddress","nameLocation":"3001:15:27","nodeType":"VariableDeclaration","scope":7320,"src":"2993:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7316,"name":"address","nodeType":"ElementaryTypeName","src":"2993:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2992:25:27"},"returnParameters":{"id":7319,"nodeType":"ParameterList","parameters":[],"src":"3026:0:27"},"scope":7497,"src":"2968:59:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7321,"nodeType":"StructuredDocumentation","src":"3033:430:27","text":" @notice Used for 'slashing' a certain operator.\n @param toBeFrozen The operator to be frozen.\n @dev Technically the operator is 'frozen' (hence the name of this function), and then subject to slashing pending a decision by a human-in-the-loop.\n @dev The operator must have previously given the caller (which should be a contract) the ability to slash them, through a call to `optIntoSlashing`."},"functionSelector":"38c8ee64","id":7326,"implemented":false,"kind":"function","modifiers":[],"name":"freezeOperator","nameLocation":"3477:14:27","nodeType":"FunctionDefinition","parameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"toBeFrozen","nameLocation":"3500:10:27","nodeType":"VariableDeclaration","scope":7326,"src":"3492:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7322,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3491:20:27"},"returnParameters":{"id":7325,"nodeType":"ParameterList","parameters":[],"src":"3520:0:27"},"scope":7497,"src":"3468:53:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7327,"nodeType":"StructuredDocumentation","src":"3527:156:27","text":" @notice Removes the 'frozen' status from each of the `frozenAddresses`\n @dev Callable only by the contract owner (i.e. governance)."},"functionSelector":"7cf72bba","id":7333,"implemented":false,"kind":"function","modifiers":[],"name":"resetFrozenStatus","nameLocation":"3697:17:27","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"frozenAddresses","nameLocation":"3734:15:27","nodeType":"VariableDeclaration","scope":7333,"src":"3715:34:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7328,"name":"address","nodeType":"ElementaryTypeName","src":"3715:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7329,"nodeType":"ArrayTypeName","src":"3715:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3714:36:27"},"returnParameters":{"id":7332,"nodeType":"ParameterList","parameters":[],"src":"3759:0:27"},"scope":7497,"src":"3688:72:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7334,"nodeType":"StructuredDocumentation","src":"3766:458:27","text":" @notice this function is a called by middlewares during an operator's registration to make sure the operator's stake at registration\n         is slashable until serveUntil\n @param operator the operator whose stake update is being recorded\n @param serveUntilBlock the block until which the operator's stake at the current block is slashable\n @dev adds the middleware's slashing contract to the operator's linked list"},"functionSelector":"175d3205","id":7341,"implemented":false,"kind":"function","modifiers":[],"name":"recordFirstStakeUpdate","nameLocation":"4238:22:27","nodeType":"FunctionDefinition","parameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7336,"mutability":"mutable","name":"operator","nameLocation":"4269:8:27","nodeType":"VariableDeclaration","scope":7341,"src":"4261:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"4261:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7338,"mutability":"mutable","name":"serveUntilBlock","nameLocation":"4286:15:27","nodeType":"VariableDeclaration","scope":7341,"src":"4279:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7337,"name":"uint32","nodeType":"ElementaryTypeName","src":"4279:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4260:42:27"},"returnParameters":{"id":7340,"nodeType":"ParameterList","parameters":[],"src":"4311:0:27"},"scope":7497,"src":"4229:83:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7342,"nodeType":"StructuredDocumentation","src":"4318:826:27","text":" @notice this function is a called by middlewares during a stake update for an operator (perhaps to free pending withdrawals)\n         to make sure the operator's stake at updateBlock is slashable until serveUntil\n @param operator the operator whose stake update is being recorded\n @param updateBlock the block for which the stake update is being recorded\n @param serveUntilBlock the block until which the operator's stake at updateBlock is slashable\n @param insertAfter the element of the operators linked list that the currently updating middleware should be inserted after\n @dev insertAfter should be calculated offchain before making the transaction that calls this. this is subject to race conditions,\n      but it is anticipated to be rare and not detrimental."},"functionSelector":"c747075b","id":7353,"implemented":false,"kind":"function","modifiers":[],"name":"recordStakeUpdate","nameLocation":"5158:17:27","nodeType":"FunctionDefinition","parameters":{"id":7351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"operator","nameLocation":"5193:8:27","nodeType":"VariableDeclaration","scope":7353,"src":"5185:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7343,"name":"address","nodeType":"ElementaryTypeName","src":"5185:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7346,"mutability":"mutable","name":"updateBlock","nameLocation":"5218:11:27","nodeType":"VariableDeclaration","scope":7353,"src":"5211:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7345,"name":"uint32","nodeType":"ElementaryTypeName","src":"5211:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7348,"mutability":"mutable","name":"serveUntilBlock","nameLocation":"5246:15:27","nodeType":"VariableDeclaration","scope":7353,"src":"5239:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7347,"name":"uint32","nodeType":"ElementaryTypeName","src":"5239:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7350,"mutability":"mutable","name":"insertAfter","nameLocation":"5279:11:27","nodeType":"VariableDeclaration","scope":7353,"src":"5271:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7349,"name":"uint256","nodeType":"ElementaryTypeName","src":"5271:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:121:27"},"returnParameters":{"id":7352,"nodeType":"ParameterList","parameters":[],"src":"5305:0:27"},"scope":7497,"src":"5149:157:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7354,"nodeType":"StructuredDocumentation","src":"5312:574:27","text":" @notice this function is a called by middlewares during an operator's deregistration to make sure the operator's stake at deregistration\n         is slashable until serveUntil\n @param operator the operator whose stake update is being recorded\n @param serveUntilBlock the block until which the operator's stake at the current block is slashable\n @dev removes the middleware's slashing contract to the operator's linked list and revokes the middleware's (i.e. caller's) ability to\n slash `operator` once `serveUntil` is reached"},"functionSelector":"0ffabbce","id":7361,"implemented":false,"kind":"function","modifiers":[],"name":"recordLastStakeUpdateAndRevokeSlashingAbility","nameLocation":"5900:45:27","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"operator","nameLocation":"5954:8:27","nodeType":"VariableDeclaration","scope":7361,"src":"5946:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7355,"name":"address","nodeType":"ElementaryTypeName","src":"5946:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7358,"mutability":"mutable","name":"serveUntilBlock","nameLocation":"5971:15:27","nodeType":"VariableDeclaration","scope":7361,"src":"5964:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7357,"name":"uint32","nodeType":"ElementaryTypeName","src":"5964:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5945:42:27"},"returnParameters":{"id":7360,"nodeType":"ParameterList","parameters":[],"src":"5996:0:27"},"scope":7497,"src":"5891:106:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7362,"nodeType":"StructuredDocumentation","src":"6003:54:27","text":"@notice The StrategyManager contract of EigenLayer"},"functionSelector":"39b70e38","id":7368,"implemented":false,"kind":"function","modifiers":[],"name":"strategyManager","nameLocation":"6071:15:27","nodeType":"FunctionDefinition","parameters":{"id":7363,"nodeType":"ParameterList","parameters":[],"src":"6086:2:27"},"returnParameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7368,"src":"6112:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategyManager_$7850","typeString":"contract IStrategyManager"},"typeName":{"id":7365,"nodeType":"UserDefinedTypeName","pathNode":{"id":7364,"name":"IStrategyManager","nameLocations":["6112:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":7850,"src":"6112:16:27"},"referencedDeclaration":7850,"src":"6112:16:27","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategyManager_$7850","typeString":"contract IStrategyManager"}},"visibility":"internal"}],"src":"6111:18:27"},"scope":7497,"src":"6062:68:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7369,"nodeType":"StructuredDocumentation","src":"6136:56:27","text":"@notice The DelegationManager contract of EigenLayer"},"functionSelector":"df5cf723","id":7375,"implemented":false,"kind":"function","modifiers":[],"name":"delegation","nameLocation":"6206:10:27","nodeType":"FunctionDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[],"src":"6216:2:27"},"returnParameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7375,"src":"6242:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"},"typeName":{"id":7372,"nodeType":"UserDefinedTypeName","pathNode":{"id":7371,"name":"IDelegationManager","nameLocations":["6242:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":6097,"src":"6242:18:27"},"referencedDeclaration":6097,"src":"6242:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"visibility":"internal"}],"src":"6241:20:27"},"scope":7497,"src":"6197:65:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7376,"nodeType":"StructuredDocumentation","src":"6268:580:27","text":" @notice Used to determine whether `staker` is actively 'frozen'. If a staker is frozen, then they are potentially subject to\n slashing of their funds, and cannot cannot deposit or withdraw from the strategyManager until the slashing process is completed\n and the staker's status is reset (to 'unfrozen').\n @param staker The staker of interest.\n @return Returns 'true' if `staker` themselves has their status set to frozen, OR if the staker is delegated\n to an operator who has their status set to frozen. Otherwise returns 'false'."},"functionSelector":"e5839836","id":7383,"implemented":false,"kind":"function","modifiers":[],"name":"isFrozen","nameLocation":"6862:8:27","nodeType":"FunctionDefinition","parameters":{"id":7379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7378,"mutability":"mutable","name":"staker","nameLocation":"6879:6:27","nodeType":"VariableDeclaration","scope":7383,"src":"6871:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7377,"name":"address","nodeType":"ElementaryTypeName","src":"6871:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6870:16:27"},"returnParameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7383,"src":"6910:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7380,"name":"bool","nodeType":"ElementaryTypeName","src":"6910:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6909:6:27"},"scope":7497,"src":"6853:63:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7384,"nodeType":"StructuredDocumentation","src":"6922:91:27","text":"@notice Returns true if `slashingContract` is currently allowed to slash `toBeSlashed`."},"functionSelector":"d98128c0","id":7393,"implemented":false,"kind":"function","modifiers":[],"name":"canSlash","nameLocation":"7027:8:27","nodeType":"FunctionDefinition","parameters":{"id":7389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"toBeSlashed","nameLocation":"7044:11:27","nodeType":"VariableDeclaration","scope":7393,"src":"7036:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7385,"name":"address","nodeType":"ElementaryTypeName","src":"7036:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7388,"mutability":"mutable","name":"slashingContract","nameLocation":"7065:16:27","nodeType":"VariableDeclaration","scope":7393,"src":"7057:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7387,"name":"address","nodeType":"ElementaryTypeName","src":"7057:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7035:47:27"},"returnParameters":{"id":7392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7393,"src":"7106:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7390,"name":"bool","nodeType":"ElementaryTypeName","src":"7106:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7105:6:27"},"scope":7497,"src":"7018:94:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7394,"nodeType":"StructuredDocumentation","src":"7118:95:27","text":"@notice Returns the block until which `serviceContract` is allowed to slash the `operator`."},"functionSelector":"6f0c2f74","id":7403,"implemented":false,"kind":"function","modifiers":[],"name":"contractCanSlashOperatorUntilBlock","nameLocation":"7227:34:27","nodeType":"FunctionDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"operator","nameLocation":"7279:8:27","nodeType":"VariableDeclaration","scope":7403,"src":"7271:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7395,"name":"address","nodeType":"ElementaryTypeName","src":"7271:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7398,"mutability":"mutable","name":"serviceContract","nameLocation":"7305:15:27","nodeType":"VariableDeclaration","scope":7403,"src":"7297:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7397,"name":"address","nodeType":"ElementaryTypeName","src":"7297:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7261:65:27"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7403,"src":"7350:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7400,"name":"uint32","nodeType":"ElementaryTypeName","src":"7350:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7349:8:27"},"scope":7497,"src":"7218:140:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7404,"nodeType":"StructuredDocumentation","src":"7364:108:27","text":"@notice Returns the block at which the `serviceContract` last updated its view of the `operator`'s stake"},"functionSelector":"da16e29b","id":7413,"implemented":false,"kind":"function","modifiers":[],"name":"latestUpdateBlock","nameLocation":"7486:17:27","nodeType":"FunctionDefinition","parameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7406,"mutability":"mutable","name":"operator","nameLocation":"7512:8:27","nodeType":"VariableDeclaration","scope":7413,"src":"7504:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7405,"name":"address","nodeType":"ElementaryTypeName","src":"7504:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7408,"mutability":"mutable","name":"serviceContract","nameLocation":"7530:15:27","nodeType":"VariableDeclaration","scope":7413,"src":"7522:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"7522:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7503:43:27"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7413,"src":"7570:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7410,"name":"uint32","nodeType":"ElementaryTypeName","src":"7570:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7569:8:27"},"scope":7497,"src":"7477:101:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7414,"nodeType":"StructuredDocumentation","src":"7584:131:27","text":"@notice A search routine for finding the correct input value of `insertAfter` to `recordStakeUpdate` / `_updateMiddlewareList`."},"functionSelector":"723e59c7","id":7423,"implemented":false,"kind":"function","modifiers":[],"name":"getCorrectValueForInsertAfter","nameLocation":"7729:29:27","nodeType":"FunctionDefinition","parameters":{"id":7419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"operator","nameLocation":"7767:8:27","nodeType":"VariableDeclaration","scope":7423,"src":"7759:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7415,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7418,"mutability":"mutable","name":"updateBlock","nameLocation":"7784:11:27","nodeType":"VariableDeclaration","scope":7423,"src":"7777:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7417,"name":"uint32","nodeType":"ElementaryTypeName","src":"7777:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"7758:38:27"},"returnParameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"7820:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7420,"name":"uint256","nodeType":"ElementaryTypeName","src":"7820:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7819:9:27"},"scope":7497,"src":"7720:109:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7424,"nodeType":"StructuredDocumentation","src":"7835:1277:27","text":" @notice Returns 'true' if `operator` can currently complete a withdrawal started at the `withdrawalStartBlock`, with `middlewareTimesIndex` used\n to specify the index of a `MiddlewareTimes` struct in the operator's list (i.e. an index in `operatorToMiddlewareTimes[operator]`). The specified\n struct is consulted as proof of the `operator`'s ability (or lack thereof) to complete the withdrawal.\n This function will return 'false' if the operator cannot currently complete a withdrawal started at the `withdrawalStartBlock`, *or* in the event\n that an incorrect `middlewareTimesIndex` is supplied, even if one or more correct inputs exist.\n @param operator Either the operator who queued the withdrawal themselves, or if the withdrawing party is a staker who delegated to an operator,\n this address is the operator *who the staker was delegated to* at the time of the `withdrawalStartBlock`.\n @param withdrawalStartBlock The block number at which the withdrawal was initiated.\n @param middlewareTimesIndex Indicates an index in `operatorToMiddlewareTimes[operator]` to consult as proof of the `operator`'s ability to withdraw\n @dev The correct `middlewareTimesIndex` input should be computable off-chain."},"functionSelector":"8105e043","id":7435,"implemented":false,"kind":"function","modifiers":[],"name":"canWithdraw","nameLocation":"9126:11:27","nodeType":"FunctionDefinition","parameters":{"id":7431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7426,"mutability":"mutable","name":"operator","nameLocation":"9155:8:27","nodeType":"VariableDeclaration","scope":7435,"src":"9147:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7425,"name":"address","nodeType":"ElementaryTypeName","src":"9147:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7428,"mutability":"mutable","name":"withdrawalStartBlock","nameLocation":"9180:20:27","nodeType":"VariableDeclaration","scope":7435,"src":"9173:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7427,"name":"uint32","nodeType":"ElementaryTypeName","src":"9173:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7430,"mutability":"mutable","name":"middlewareTimesIndex","nameLocation":"9218:20:27","nodeType":"VariableDeclaration","scope":7435,"src":"9210:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9137:107:27"},"returnParameters":{"id":7434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7435,"src":"9263:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7432,"name":"bool","nodeType":"ElementaryTypeName","src":"9263:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9262:6:27"},"scope":7497,"src":"9117:152:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7436,"nodeType":"StructuredDocumentation","src":"9275:258:27","text":" operator =>\n  [\n      (\n          the least recent update block of all of the middlewares it's serving/served,\n          latest time that the stake bonded at that update needed to serve until\n      )\n  ]"},"functionSelector":"282670fc","id":7446,"implemented":false,"kind":"function","modifiers":[],"name":"operatorToMiddlewareTimes","nameLocation":"9547:25:27","nodeType":"FunctionDefinition","parameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"operator","nameLocation":"9590:8:27","nodeType":"VariableDeclaration","scope":7446,"src":"9582:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7437,"name":"address","nodeType":"ElementaryTypeName","src":"9582:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7440,"mutability":"mutable","name":"arrayIndex","nameLocation":"9616:10:27","nodeType":"VariableDeclaration","scope":7446,"src":"9608:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7439,"name":"uint256","nodeType":"ElementaryTypeName","src":"9608:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9572:60:27"},"returnParameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7446,"src":"9656:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MiddlewareTimes_$7268_memory_ptr","typeString":"struct ISlasher.MiddlewareTimes"},"typeName":{"id":7443,"nodeType":"UserDefinedTypeName","pathNode":{"id":7442,"name":"MiddlewareTimes","nameLocations":["9656:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":7268,"src":"9656:15:27"},"referencedDeclaration":7268,"src":"9656:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_MiddlewareTimes_$7268_storage_ptr","typeString":"struct ISlasher.MiddlewareTimes"}},"visibility":"internal"}],"src":"9655:24:27"},"scope":7497,"src":"9538:142:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7447,"nodeType":"StructuredDocumentation","src":"9686:85:27","text":"@notice Getter function for fetching `operatorToMiddlewareTimes[operator].length`"},"functionSelector":"a49db732","id":7454,"implemented":false,"kind":"function","modifiers":[],"name":"middlewareTimesLength","nameLocation":"9785:21:27","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"operator","nameLocation":"9815:8:27","nodeType":"VariableDeclaration","scope":7454,"src":"9807:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7448,"name":"address","nodeType":"ElementaryTypeName","src":"9807:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9806:18:27"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7454,"src":"9848:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7451,"name":"uint256","nodeType":"ElementaryTypeName","src":"9848:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9847:9:27"},"scope":7497,"src":"9776:81:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"9863:105:27","text":"@notice Getter function for fetching `operatorToMiddlewareTimes[operator][index].stalestUpdateBlock`."},"functionSelector":"1874e5ae","id":7464,"implemented":false,"kind":"function","modifiers":[],"name":"getMiddlewareTimesIndexStalestUpdateBlock","nameLocation":"9982:41:27","nodeType":"FunctionDefinition","parameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"operator","nameLocation":"10032:8:27","nodeType":"VariableDeclaration","scope":7464,"src":"10024:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7456,"name":"address","nodeType":"ElementaryTypeName","src":"10024:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7459,"mutability":"mutable","name":"index","nameLocation":"10049:5:27","nodeType":"VariableDeclaration","scope":7464,"src":"10042:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7458,"name":"uint32","nodeType":"ElementaryTypeName","src":"10042:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10023:32:27"},"returnParameters":{"id":7463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7464,"src":"10079:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7461,"name":"uint32","nodeType":"ElementaryTypeName","src":"10079:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10078:8:27"},"scope":7497,"src":"9973:114:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7465,"nodeType":"StructuredDocumentation","src":"10093:103:27","text":"@notice Getter function for fetching `operatorToMiddlewareTimes[operator][index].latestServeUntil`."},"functionSelector":"7259a45c","id":7474,"implemented":false,"kind":"function","modifiers":[],"name":"getMiddlewareTimesIndexServeUntilBlock","nameLocation":"10210:38:27","nodeType":"FunctionDefinition","parameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7467,"mutability":"mutable","name":"operator","nameLocation":"10257:8:27","nodeType":"VariableDeclaration","scope":7474,"src":"10249:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7466,"name":"address","nodeType":"ElementaryTypeName","src":"10249:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7469,"mutability":"mutable","name":"index","nameLocation":"10274:5:27","nodeType":"VariableDeclaration","scope":7474,"src":"10267:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7468,"name":"uint32","nodeType":"ElementaryTypeName","src":"10267:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10248:32:27"},"returnParameters":{"id":7473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7474,"src":"10304:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7471,"name":"uint32","nodeType":"ElementaryTypeName","src":"10304:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10303:8:27"},"scope":7497,"src":"10201:111:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7475,"nodeType":"StructuredDocumentation","src":"10318:98:27","text":"@notice Getter function for fetching `_operatorToWhitelistedContractsByUpdate[operator].size`."},"functionSelector":"e921d4fa","id":7482,"implemented":false,"kind":"function","modifiers":[],"name":"operatorWhitelistedContractsLinkedListSize","nameLocation":"10430:42:27","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"operator","nameLocation":"10481:8:27","nodeType":"VariableDeclaration","scope":7482,"src":"10473:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7476,"name":"address","nodeType":"ElementaryTypeName","src":"10473:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10472:18:27"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7482,"src":"10514:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10513:9:27"},"scope":7497,"src":"10421:102:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7483,"nodeType":"StructuredDocumentation","src":"10529:139:27","text":"@notice Getter function for fetching a single node in the operator's linked list (`_operatorToWhitelistedContractsByUpdate[operator]`)."},"functionSelector":"855fcc4a","id":7496,"implemented":false,"kind":"function","modifiers":[],"name":"operatorWhitelistedContractsLinkedListEntry","nameLocation":"10682:43:27","nodeType":"FunctionDefinition","parameters":{"id":7488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7485,"mutability":"mutable","name":"operator","nameLocation":"10743:8:27","nodeType":"VariableDeclaration","scope":7496,"src":"10735:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7484,"name":"address","nodeType":"ElementaryTypeName","src":"10735:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7487,"mutability":"mutable","name":"node","nameLocation":"10769:4:27","nodeType":"VariableDeclaration","scope":7496,"src":"10761:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7486,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10725:54:27"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7496,"src":"10803:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7489,"name":"bool","nodeType":"ElementaryTypeName","src":"10803:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7496,"src":"10809:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7491,"name":"uint256","nodeType":"ElementaryTypeName","src":"10809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7496,"src":"10818:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7493,"name":"uint256","nodeType":"ElementaryTypeName","src":"10818:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10802:24:27"},"scope":7497,"src":"10673:154:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7498,"src":"395:10434:27","usedErrors":[],"usedEvents":[7286,7293,7302,7309,7314]}],"src":"37:10793:27"},"id":27},"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","exportedSymbols":{"IERC20":[1077],"IStrategy":[7612]},"id":7613,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7499,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7613,"sourceUnit":1078,"src":"63:56:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IStrategy","contractDependencies":[],"contractKind":"interface","documentation":{"id":7501,"nodeType":"StructuredDocumentation","src":"121:260:28","text":" @title Minimal interface for an `Strategy` contract.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice Custom `Strategy` implementations may expand extensively on this interface."},"fullyImplemented":false,"id":7612,"linearizedBaseContracts":[7612],"name":"IStrategy","nameLocation":"392:9:28","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":7502,"nodeType":"StructuredDocumentation","src":"408:313:28","text":" @notice Used to emit an event for the exchange rate between 1 share and underlying token in a strategy contract\n @param rate is the exchange rate in wad 18 decimals\n @dev Tokens that do not have 18 decimals must have offchain services scale the exchange rate by the proper magnitude"},"eventSelector":"d2494f3479e5da49d386657c292c610b5b01df313d07c62eb0cfa49924a31be8","id":7506,"name":"ExchangeRateEmitted","nameLocation":"732:19:28","nodeType":"EventDefinition","parameters":{"id":7505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7504,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"760:4:28","nodeType":"VariableDeclaration","scope":7506,"src":"752:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7503,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"751:14:28"},"src":"726:40:28"},{"anonymous":false,"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"772:241:28","text":" Used to emit the underlying token and its decimals on strategy creation\n @notice token\n @param token is the ERC20 token of the strategy\n @param decimals are the decimals of the ERC20 token in the strategy"},"eventSelector":"1c540707b00eb5427b6b774fc799d756516a54aee108b64b327acc55af557507","id":7514,"name":"StrategyTokenSet","nameLocation":"1024:16:28","nodeType":"EventDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7510,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1048:5:28","nodeType":"VariableDeclaration","scope":7514,"src":"1041:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7509,"nodeType":"UserDefinedTypeName","pathNode":{"id":7508,"name":"IERC20","nameLocations":["1041:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"1041:6:28"},"referencedDeclaration":1077,"src":"1041:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7512,"indexed":false,"mutability":"mutable","name":"decimals","nameLocation":"1061:8:28","nodeType":"VariableDeclaration","scope":7514,"src":"1055:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7511,"name":"uint8","nodeType":"ElementaryTypeName","src":"1055:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1040:30:28"},"src":"1018:53:28"},{"documentation":{"id":7515,"nodeType":"StructuredDocumentation","src":"1077:510:28","text":" @notice Used to deposit tokens into this Strategy\n @param token is the ERC20 token being deposited\n @param amount is the amount of token being deposited\n @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.\n @return newShares is the number of new shares issued at the current exchange ratio."},"functionSelector":"47e7ef24","id":7525,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1601:7:28","nodeType":"FunctionDefinition","parameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7518,"mutability":"mutable","name":"token","nameLocation":"1616:5:28","nodeType":"VariableDeclaration","scope":7525,"src":"1609:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7517,"nodeType":"UserDefinedTypeName","pathNode":{"id":7516,"name":"IERC20","nameLocations":["1609:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"1609:6:28"},"referencedDeclaration":1077,"src":"1609:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7520,"mutability":"mutable","name":"amount","nameLocation":"1631:6:28","nodeType":"VariableDeclaration","scope":7525,"src":"1623:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:30:28"},"returnParameters":{"id":7524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7525,"src":"1657:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1656:9:28"},"scope":7612,"src":"1592:74:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7526,"nodeType":"StructuredDocumentation","src":"1672:518:28","text":" @notice Used to withdraw tokens from this Strategy, to the `recipient`'s address\n @param recipient is the address to receive the withdrawn funds\n @param token is the ERC20 token being transferred out\n @param amountShares is the amount of shares being withdrawn\n @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n other functions, and individual share balances are recorded in the strategyManager as well."},"functionSelector":"d9caed12","id":7536,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2204:8:28","nodeType":"FunctionDefinition","parameters":{"id":7534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"recipient","nameLocation":"2221:9:28","nodeType":"VariableDeclaration","scope":7536,"src":"2213:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7527,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7531,"mutability":"mutable","name":"token","nameLocation":"2239:5:28","nodeType":"VariableDeclaration","scope":7536,"src":"2232:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7530,"nodeType":"UserDefinedTypeName","pathNode":{"id":7529,"name":"IERC20","nameLocations":["2232:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"2232:6:28"},"referencedDeclaration":1077,"src":"2232:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7533,"mutability":"mutable","name":"amountShares","nameLocation":"2254:12:28","nodeType":"VariableDeclaration","scope":7536,"src":"2246:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2212:55:28"},"returnParameters":{"id":7535,"nodeType":"ParameterList","parameters":[],"src":"2276:0:28"},"scope":7612,"src":"2195:82:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7537,"nodeType":"StructuredDocumentation","src":"2283:532:28","text":" @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @return The amount of underlying tokens corresponding to the input `amountShares`\n @dev Implementation for these functions in particular may vary significantly for different strategies"},"functionSelector":"f3e73875","id":7544,"implemented":false,"kind":"function","modifiers":[],"name":"sharesToUnderlying","nameLocation":"2829:18:28","nodeType":"FunctionDefinition","parameters":{"id":7540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"amountShares","nameLocation":"2856:12:28","nodeType":"VariableDeclaration","scope":7544,"src":"2848:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2847:22:28"},"returnParameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7544,"src":"2888:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2888:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2887:9:28"},"scope":7612,"src":"2820:77:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7545,"nodeType":"StructuredDocumentation","src":"2903:542:28","text":" @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @return The amount of underlying tokens corresponding to the input `amountShares`\n @dev Implementation for these functions in particular may vary significantly for different strategies"},"functionSelector":"8c871019","id":7552,"implemented":false,"kind":"function","modifiers":[],"name":"underlyingToShares","nameLocation":"3459:18:28","nodeType":"FunctionDefinition","parameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"amountUnderlying","nameLocation":"3486:16:28","nodeType":"VariableDeclaration","scope":7552,"src":"3478:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:26:28"},"returnParameters":{"id":7551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7552,"src":"3522:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3522:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3521:9:28"},"scope":7612,"src":"3450:81:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7553,"nodeType":"StructuredDocumentation","src":"3537:228:28","text":" @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"},"functionSelector":"8f6a6240","id":7560,"implemented":false,"kind":"function","modifiers":[],"name":"userUnderlying","nameLocation":"3779:14:28","nodeType":"FunctionDefinition","parameters":{"id":7556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"user","nameLocation":"3802:4:28","nodeType":"VariableDeclaration","scope":7560,"src":"3794:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7554,"name":"address","nodeType":"ElementaryTypeName","src":"3794:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3793:14:28"},"returnParameters":{"id":7559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7560,"src":"3826:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3826:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3825:9:28"},"scope":7612,"src":"3770:65:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7561,"nodeType":"StructuredDocumentation","src":"3841:163:28","text":" @notice convenience function for fetching the current total shares of `user` in this strategy, by\n querying the `strategyManager` contract"},"functionSelector":"ce7c2ac2","id":7568,"implemented":false,"kind":"function","modifiers":[],"name":"shares","nameLocation":"4018:6:28","nodeType":"FunctionDefinition","parameters":{"id":7564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7563,"mutability":"mutable","name":"user","nameLocation":"4033:4:28","nodeType":"VariableDeclaration","scope":7568,"src":"4025:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7562,"name":"address","nodeType":"ElementaryTypeName","src":"4025:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4024:14:28"},"returnParameters":{"id":7567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7568,"src":"4062:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4062:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4061:9:28"},"scope":7612,"src":"4009:62:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7569,"nodeType":"StructuredDocumentation","src":"4077:522:28","text":" @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @return The amount of shares corresponding to the input `amountUnderlying`\n @dev Implementation for these functions in particular may vary significantly for different strategies"},"functionSelector":"7a8b2637","id":7576,"implemented":false,"kind":"function","modifiers":[],"name":"sharesToUnderlyingView","nameLocation":"4613:22:28","nodeType":"FunctionDefinition","parameters":{"id":7572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7571,"mutability":"mutable","name":"amountShares","nameLocation":"4644:12:28","nodeType":"VariableDeclaration","scope":7576,"src":"4636:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4636:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4635:22:28"},"returnParameters":{"id":7575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7576,"src":"4681:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7573,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4680:9:28"},"scope":7612,"src":"4604:86:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7577,"nodeType":"StructuredDocumentation","src":"4696:532:28","text":" @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @return The amount of shares corresponding to the input `amountUnderlying`\n @dev Implementation for these functions in particular may vary significantly for different strategies"},"functionSelector":"e3dae51c","id":7584,"implemented":false,"kind":"function","modifiers":[],"name":"underlyingToSharesView","nameLocation":"5242:22:28","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"amountUnderlying","nameLocation":"5273:16:28","nodeType":"VariableDeclaration","scope":7584,"src":"5265:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5264:26:28"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7584,"src":"5314:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5314:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5313:9:28"},"scope":7612,"src":"5233:90:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"5329:225:28","text":" @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"},"functionSelector":"553ca5f8","id":7592,"implemented":false,"kind":"function","modifiers":[],"name":"userUnderlyingView","nameLocation":"5568:18:28","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"user","nameLocation":"5595:4:28","nodeType":"VariableDeclaration","scope":7592,"src":"5587:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7586,"name":"address","nodeType":"ElementaryTypeName","src":"5587:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5586:14:28"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7592,"src":"5624:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7589,"name":"uint256","nodeType":"ElementaryTypeName","src":"5624:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5623:9:28"},"scope":7612,"src":"5559:74:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7593,"nodeType":"StructuredDocumentation","src":"5639:60:28","text":"@notice The underlying token for shares in this Strategy"},"functionSelector":"2495a599","id":7599,"implemented":false,"kind":"function","modifiers":[],"name":"underlyingToken","nameLocation":"5713:15:28","nodeType":"FunctionDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[],"src":"5728:2:28"},"returnParameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7599,"src":"5754:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7596,"nodeType":"UserDefinedTypeName","pathNode":{"id":7595,"name":"IERC20","nameLocations":["5754:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"5754:6:28"},"referencedDeclaration":1077,"src":"5754:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"5753:8:28"},"scope":7612,"src":"5704:58:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7600,"nodeType":"StructuredDocumentation","src":"5768:62:28","text":"@notice The total number of extant shares in this Strategy"},"functionSelector":"3a98ef39","id":7605,"implemented":false,"kind":"function","modifiers":[],"name":"totalShares","nameLocation":"5844:11:28","nodeType":"FunctionDefinition","parameters":{"id":7601,"nodeType":"ParameterList","parameters":[],"src":"5855:2:28"},"returnParameters":{"id":7604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7605,"src":"5881:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7602,"name":"uint256","nodeType":"ElementaryTypeName","src":"5881:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:9:28"},"scope":7612,"src":"5835:55:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7606,"nodeType":"StructuredDocumentation","src":"5896:135:28","text":"@notice Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail."},"functionSelector":"ab5921e1","id":7611,"implemented":false,"kind":"function","modifiers":[],"name":"explanation","nameLocation":"6045:11:28","nodeType":"FunctionDefinition","parameters":{"id":7607,"nodeType":"ParameterList","parameters":[],"src":"6056:2:28"},"returnParameters":{"id":7610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7611,"src":"6082:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7608,"name":"string","nodeType":"ElementaryTypeName","src":"6082:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6081:15:28"},"scope":7612,"src":"6036:61:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7613,"src":"382:5717:28","usedErrors":[],"usedEvents":[7506,7514]}],"src":"37:6063:28"},"id":28},"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol","exportedSymbols":{"IDelegationManager":[6097],"IERC20":[1077],"IEigenPodManager":[6613],"ISignatureUtils":[7258],"ISlasher":[7497],"IStrategy":[7612],"IStrategyManager":[7850]},"id":7851,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7614,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"37:24:29"},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol","file":"./IStrategy.sol","id":7615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7851,"sourceUnit":7613,"src":"63:25:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol","file":"./ISlasher.sol","id":7616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7851,"sourceUnit":7498,"src":"89:24:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol","file":"./IDelegationManager.sol","id":7617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7851,"sourceUnit":6098,"src":"114:34:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol","file":"./IEigenPodManager.sol","id":7618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7851,"sourceUnit":6614,"src":"149:32:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IStrategyManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":7619,"nodeType":"StructuredDocumentation","src":"183:272:29","text":" @title Interface for the primary entrypoint for funds into EigenLayer.\n @author Layr Labs, Inc.\n @notice Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\n @notice See the `StrategyManager` contract itself for implementation details."},"fullyImplemented":false,"id":7850,"linearizedBaseContracts":[7850],"name":"IStrategyManager","nameLocation":"466:16:29","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":7620,"nodeType":"StructuredDocumentation","src":"489:380:29","text":" @notice Emitted when a new deposit occurs on behalf of `staker`.\n @param staker Is the staker who is depositing funds into EigenLayer.\n @param strategy Is the strategy that `staker` has deposited into.\n @param token Is the token that `staker` deposited.\n @param shares Is the number of new shares `staker` has been granted in `strategy`."},"eventSelector":"7cfff908a4b583f36430b25d75964c458d8ede8a99bd61be750e97ee1b2f3a96","id":7632,"name":"Deposit","nameLocation":"880:7:29","nodeType":"EventDefinition","parameters":{"id":7631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"indexed":false,"mutability":"mutable","name":"staker","nameLocation":"896:6:29","nodeType":"VariableDeclaration","scope":7632,"src":"888:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7621,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7625,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"911:5:29","nodeType":"VariableDeclaration","scope":7632,"src":"904:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7624,"nodeType":"UserDefinedTypeName","pathNode":{"id":7623,"name":"IERC20","nameLocations":["904:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"904:6:29"},"referencedDeclaration":1077,"src":"904:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7628,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"928:8:29","nodeType":"VariableDeclaration","scope":7632,"src":"918:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7627,"nodeType":"UserDefinedTypeName","pathNode":{"id":7626,"name":"IStrategy","nameLocations":["918:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"918:9:29"},"referencedDeclaration":7612,"src":"918:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7630,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"946:6:29","nodeType":"VariableDeclaration","scope":7632,"src":"938:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7629,"name":"uint256","nodeType":"ElementaryTypeName","src":"938:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"887:66:29"},"src":"874:80:29"},{"anonymous":false,"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"960:104:29","text":"@notice Emitted when `thirdPartyTransfersForbidden` is updated for a strategy and value by the owner"},"eventSelector":"77d930df4937793473a95024d87a98fd2ccb9e92d3c2463b3dacd65d3e6a5786","id":7640,"name":"UpdatedThirdPartyTransfersForbidden","nameLocation":"1075:35:29","nodeType":"EventDefinition","parameters":{"id":7639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"1121:8:29","nodeType":"VariableDeclaration","scope":7640,"src":"1111:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7635,"nodeType":"UserDefinedTypeName","pathNode":{"id":7634,"name":"IStrategy","nameLocations":["1111:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"1111:9:29"},"referencedDeclaration":7612,"src":"1111:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7638,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1136:5:29","nodeType":"VariableDeclaration","scope":7640,"src":"1131:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7637,"name":"bool","nodeType":"ElementaryTypeName","src":"1131:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:32:29"},"src":"1069:74:29"},{"anonymous":false,"documentation":{"id":7641,"nodeType":"StructuredDocumentation","src":"1149:61:29","text":"@notice Emitted when the `strategyWhitelister` is changed"},"eventSelector":"4264275e593955ff9d6146a51a4525f6ddace2e81db9391abcc9d1ca48047d29","id":7647,"name":"StrategyWhitelisterChanged","nameLocation":"1221:26:29","nodeType":"EventDefinition","parameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7643,"indexed":false,"mutability":"mutable","name":"previousAddress","nameLocation":"1256:15:29","nodeType":"VariableDeclaration","scope":7647,"src":"1248:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7642,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7645,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"1281:10:29","nodeType":"VariableDeclaration","scope":7647,"src":"1273:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7644,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1247:45:29"},"src":"1215:78:29"},{"anonymous":false,"documentation":{"id":7648,"nodeType":"StructuredDocumentation","src":"1299:91:29","text":"@notice Emitted when a strategy is added to the approved list of strategies for deposit"},"eventSelector":"0c35b17d91c96eb2751cd456e1252f42a386e524ef9ff26ecc9950859fdc04fe","id":7653,"name":"StrategyAddedToDepositWhitelist","nameLocation":"1401:31:29","nodeType":"EventDefinition","parameters":{"id":7652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7651,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"1443:8:29","nodeType":"VariableDeclaration","scope":7653,"src":"1433:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7650,"nodeType":"UserDefinedTypeName","pathNode":{"id":7649,"name":"IStrategy","nameLocations":["1433:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"1433:9:29"},"referencedDeclaration":7612,"src":"1433:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"1432:20:29"},"src":"1395:58:29"},{"anonymous":false,"documentation":{"id":7654,"nodeType":"StructuredDocumentation","src":"1459:95:29","text":"@notice Emitted when a strategy is removed from the approved list of strategies for deposit"},"eventSelector":"4074413b4b443e4e58019f2855a8765113358c7c72e39509c6af45fc0f5ba030","id":7659,"name":"StrategyRemovedFromDepositWhitelist","nameLocation":"1565:35:29","nodeType":"EventDefinition","parameters":{"id":7658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7657,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"1611:8:29","nodeType":"VariableDeclaration","scope":7659,"src":"1601:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7656,"nodeType":"UserDefinedTypeName","pathNode":{"id":7655,"name":"IStrategy","nameLocations":["1601:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"1601:9:29"},"referencedDeclaration":7612,"src":"1601:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"1600:20:29"},"src":"1559:62:29"},{"documentation":{"id":7660,"nodeType":"StructuredDocumentation","src":"1627:980:29","text":" @notice Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the staker\n @return shares The amount of new shares in the `strategy` created as part of the action.\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen).\n WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in sync upon reentrancy."},"functionSelector":"e7a050aa","id":7673,"implemented":false,"kind":"function","modifiers":[],"name":"depositIntoStrategy","nameLocation":"2621:19:29","nodeType":"FunctionDefinition","parameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"strategy","nameLocation":"2651:8:29","nodeType":"VariableDeclaration","scope":7673,"src":"2641:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7662,"nodeType":"UserDefinedTypeName","pathNode":{"id":7661,"name":"IStrategy","nameLocations":["2641:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"2641:9:29"},"referencedDeclaration":7612,"src":"2641:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7666,"mutability":"mutable","name":"token","nameLocation":"2668:5:29","nodeType":"VariableDeclaration","scope":7673,"src":"2661:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7665,"nodeType":"UserDefinedTypeName","pathNode":{"id":7664,"name":"IERC20","nameLocations":["2661:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"2661:6:29"},"referencedDeclaration":1077,"src":"2661:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7668,"mutability":"mutable","name":"amount","nameLocation":"2683:6:29","nodeType":"VariableDeclaration","scope":7673,"src":"2675:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2675:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2640:50:29"},"returnParameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"shares","nameLocation":"2717:6:29","nodeType":"VariableDeclaration","scope":7673,"src":"2709:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:16:29"},"scope":7850,"src":"2612:113:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7674,"nodeType":"StructuredDocumentation","src":"2731:1698:29","text":" @notice Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`,\n who must sign off on the action.\n Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed\n purely to help one address deposit 'for' another.\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the staker\n @param staker the staker that the deposited assets will be credited to\n @param expiry the timestamp at which the signature expires\n @param signature is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward\n following EIP-1271 if the `staker` is a contract\n @return shares The amount of new shares in the `strategy` created as part of the action.\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev A signature is required for this function to eliminate the possibility of griefing attacks, specifically those\n targeting stakers who may be attempting to undelegate.\n @dev Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy\n  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in sync upon reentrancy"},"functionSelector":"32e89ace","id":7693,"implemented":false,"kind":"function","modifiers":[],"name":"depositIntoStrategyWithSignature","nameLocation":"4443:32:29","nodeType":"FunctionDefinition","parameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"strategy","nameLocation":"4495:8:29","nodeType":"VariableDeclaration","scope":7693,"src":"4485:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7676,"nodeType":"UserDefinedTypeName","pathNode":{"id":7675,"name":"IStrategy","nameLocations":["4485:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"4485:9:29"},"referencedDeclaration":7612,"src":"4485:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7680,"mutability":"mutable","name":"token","nameLocation":"4520:5:29","nodeType":"VariableDeclaration","scope":7693,"src":"4513:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7679,"nodeType":"UserDefinedTypeName","pathNode":{"id":7678,"name":"IERC20","nameLocations":["4513:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"4513:6:29"},"referencedDeclaration":1077,"src":"4513:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7682,"mutability":"mutable","name":"amount","nameLocation":"4543:6:29","nodeType":"VariableDeclaration","scope":7693,"src":"4535:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7681,"name":"uint256","nodeType":"ElementaryTypeName","src":"4535:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7684,"mutability":"mutable","name":"staker","nameLocation":"4567:6:29","nodeType":"VariableDeclaration","scope":7693,"src":"4559:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7683,"name":"address","nodeType":"ElementaryTypeName","src":"4559:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7686,"mutability":"mutable","name":"expiry","nameLocation":"4591:6:29","nodeType":"VariableDeclaration","scope":7693,"src":"4583:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4583:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7688,"mutability":"mutable","name":"signature","nameLocation":"4620:9:29","nodeType":"VariableDeclaration","scope":7693,"src":"4607:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7687,"name":"bytes","nodeType":"ElementaryTypeName","src":"4607:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4475:160:29"},"returnParameters":{"id":7692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7691,"mutability":"mutable","name":"shares","nameLocation":"4662:6:29","nodeType":"VariableDeclaration","scope":7693,"src":"4654:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4654:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4653:16:29"},"scope":7850,"src":"4434:236:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7694,"nodeType":"StructuredDocumentation","src":"4676:131:29","text":"@notice Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue"},"functionSelector":"8c80d4e5","id":7704,"implemented":false,"kind":"function","modifiers":[],"name":"removeShares","nameLocation":"4821:12:29","nodeType":"FunctionDefinition","parameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7696,"mutability":"mutable","name":"staker","nameLocation":"4842:6:29","nodeType":"VariableDeclaration","scope":7704,"src":"4834:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7695,"name":"address","nodeType":"ElementaryTypeName","src":"4834:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7699,"mutability":"mutable","name":"strategy","nameLocation":"4860:8:29","nodeType":"VariableDeclaration","scope":7704,"src":"4850:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7698,"nodeType":"UserDefinedTypeName","pathNode":{"id":7697,"name":"IStrategy","nameLocations":["4850:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"4850:9:29"},"referencedDeclaration":7612,"src":"4850:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7701,"mutability":"mutable","name":"shares","nameLocation":"4878:6:29","nodeType":"VariableDeclaration","scope":7704,"src":"4870:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7700,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4833:52:29"},"returnParameters":{"id":7703,"nodeType":"ParameterList","parameters":[],"src":"4894:0:29"},"scope":7850,"src":"4812:83:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7705,"nodeType":"StructuredDocumentation","src":"4901:117:29","text":"@notice Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue"},"functionSelector":"c4623ea1","id":7718,"implemented":false,"kind":"function","modifiers":[],"name":"addShares","nameLocation":"5032:9:29","nodeType":"FunctionDefinition","parameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7707,"mutability":"mutable","name":"staker","nameLocation":"5050:6:29","nodeType":"VariableDeclaration","scope":7718,"src":"5042:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7706,"name":"address","nodeType":"ElementaryTypeName","src":"5042:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7710,"mutability":"mutable","name":"token","nameLocation":"5065:5:29","nodeType":"VariableDeclaration","scope":7718,"src":"5058:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7709,"nodeType":"UserDefinedTypeName","pathNode":{"id":7708,"name":"IERC20","nameLocations":["5058:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"5058:6:29"},"referencedDeclaration":1077,"src":"5058:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7713,"mutability":"mutable","name":"strategy","nameLocation":"5082:8:29","nodeType":"VariableDeclaration","scope":7718,"src":"5072:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7712,"nodeType":"UserDefinedTypeName","pathNode":{"id":7711,"name":"IStrategy","nameLocations":["5072:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"5072:9:29"},"referencedDeclaration":7612,"src":"5072:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7715,"mutability":"mutable","name":"shares","nameLocation":"5100:6:29","nodeType":"VariableDeclaration","scope":7718,"src":"5092:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5092:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5041:66:29"},"returnParameters":{"id":7717,"nodeType":"ParameterList","parameters":[],"src":"5116:0:29"},"scope":7850,"src":"5023:94:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7719,"nodeType":"StructuredDocumentation","src":"5123:108:29","text":"@notice Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient"},"functionSelector":"c608c7f3","id":7732,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawSharesAsTokens","nameLocation":"5245:22:29","nodeType":"FunctionDefinition","parameters":{"id":7730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7721,"mutability":"mutable","name":"recipient","nameLocation":"5276:9:29","nodeType":"VariableDeclaration","scope":7732,"src":"5268:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7720,"name":"address","nodeType":"ElementaryTypeName","src":"5268:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7724,"mutability":"mutable","name":"strategy","nameLocation":"5297:8:29","nodeType":"VariableDeclaration","scope":7732,"src":"5287:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7723,"nodeType":"UserDefinedTypeName","pathNode":{"id":7722,"name":"IStrategy","nameLocations":["5287:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"5287:9:29"},"referencedDeclaration":7612,"src":"5287:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7726,"mutability":"mutable","name":"shares","nameLocation":"5315:6:29","nodeType":"VariableDeclaration","scope":7732,"src":"5307:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5307:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7729,"mutability":"mutable","name":"token","nameLocation":"5330:5:29","nodeType":"VariableDeclaration","scope":7732,"src":"5323:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"},"typeName":{"id":7728,"nodeType":"UserDefinedTypeName","pathNode":{"id":7727,"name":"IERC20","nameLocations":["5323:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"5323:6:29"},"referencedDeclaration":1077,"src":"5323:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1077","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"5267:69:29"},"returnParameters":{"id":7731,"nodeType":"ParameterList","parameters":[],"src":"5345:0:29"},"scope":7850,"src":"5236:110:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7733,"nodeType":"StructuredDocumentation","src":"5352:62:29","text":"@notice Returns the current shares of `user` in `strategy`"},"functionSelector":"7a7e0d92","id":7743,"implemented":false,"kind":"function","modifiers":[],"name":"stakerStrategyShares","nameLocation":"5428:20:29","nodeType":"FunctionDefinition","parameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"user","nameLocation":"5457:4:29","nodeType":"VariableDeclaration","scope":7743,"src":"5449:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7734,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7738,"mutability":"mutable","name":"strategy","nameLocation":"5473:8:29","nodeType":"VariableDeclaration","scope":7743,"src":"5463:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7737,"nodeType":"UserDefinedTypeName","pathNode":{"id":7736,"name":"IStrategy","nameLocations":["5463:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"5463:9:29"},"referencedDeclaration":7612,"src":"5463:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"5448:34:29"},"returnParameters":{"id":7742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7741,"mutability":"mutable","name":"shares","nameLocation":"5514:6:29","nodeType":"VariableDeclaration","scope":7743,"src":"5506:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5506:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5505:16:29"},"scope":7850,"src":"5419:103:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7744,"nodeType":"StructuredDocumentation","src":"5528:242:29","text":" @notice Get all details on the staker's deposits and corresponding shares\n @param staker The staker of interest, whose deposits this function will fetch\n @return (staker's strategies, shares in these strategies)"},"functionSelector":"94f649dd","id":7756,"implemented":false,"kind":"function","modifiers":[],"name":"getDeposits","nameLocation":"5784:11:29","nodeType":"FunctionDefinition","parameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"staker","nameLocation":"5804:6:29","nodeType":"VariableDeclaration","scope":7756,"src":"5796:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7745,"name":"address","nodeType":"ElementaryTypeName","src":"5796:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5795:16:29"},"returnParameters":{"id":7755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7756,"src":"5835:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_memory_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":7749,"nodeType":"UserDefinedTypeName","pathNode":{"id":7748,"name":"IStrategy","nameLocations":["5835:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"5835:9:29"},"referencedDeclaration":7612,"src":"5835:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":7750,"nodeType":"ArrayTypeName","src":"5835:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"},{"constant":false,"id":7754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7756,"src":"5855:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7752,"name":"uint256","nodeType":"ElementaryTypeName","src":"5855:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7753,"nodeType":"ArrayTypeName","src":"5855:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5834:38:29"},"scope":7850,"src":"5775:98:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7757,"nodeType":"StructuredDocumentation","src":"5879:84:29","text":"@notice Simple getter function that returns `stakerStrategyList[staker].length`."},"functionSelector":"8b8aac3c","id":7764,"implemented":false,"kind":"function","modifiers":[],"name":"stakerStrategyListLength","nameLocation":"5977:24:29","nodeType":"FunctionDefinition","parameters":{"id":7760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7759,"mutability":"mutable","name":"staker","nameLocation":"6010:6:29","nodeType":"VariableDeclaration","scope":7764,"src":"6002:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7758,"name":"address","nodeType":"ElementaryTypeName","src":"6002:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6001:16:29"},"returnParameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7764,"src":"6041:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint256","nodeType":"ElementaryTypeName","src":"6041:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6040:9:29"},"scope":7850,"src":"5968:82:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7765,"nodeType":"StructuredDocumentation","src":"6056:409:29","text":" @notice Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\n @param strategiesToWhitelist Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\n @param thirdPartyTransfersForbiddenValues bool values to set `thirdPartyTransfersForbidden` to for each strategy"},"functionSelector":"df5b3547","id":7775,"implemented":false,"kind":"function","modifiers":[],"name":"addStrategiesToDepositWhitelist","nameLocation":"6479:31:29","nodeType":"FunctionDefinition","parameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"strategiesToWhitelist","nameLocation":"6541:21:29","nodeType":"VariableDeclaration","scope":7775,"src":"6520:42:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_calldata_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":7767,"nodeType":"UserDefinedTypeName","pathNode":{"id":7766,"name":"IStrategy","nameLocations":["6520:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"6520:9:29"},"referencedDeclaration":7612,"src":"6520:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":7768,"nodeType":"ArrayTypeName","src":"6520:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"},{"constant":false,"id":7772,"mutability":"mutable","name":"thirdPartyTransfersForbiddenValues","nameLocation":"6588:34:29","nodeType":"VariableDeclaration","scope":7775,"src":"6572:50:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":7770,"name":"bool","nodeType":"ElementaryTypeName","src":"6572:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7771,"nodeType":"ArrayTypeName","src":"6572:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"6510:118:29"},"returnParameters":{"id":7774,"nodeType":"ParameterList","parameters":[],"src":"6637:0:29"},"scope":7850,"src":"6470:168:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7776,"nodeType":"StructuredDocumentation","src":"6644:295:29","text":" @notice Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\n @param strategiesToRemoveFromWhitelist Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)"},"functionSelector":"b5d8b5b8","id":7783,"implemented":false,"kind":"function","modifiers":[],"name":"removeStrategiesFromDepositWhitelist","nameLocation":"6953:36:29","nodeType":"FunctionDefinition","parameters":{"id":7781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7780,"mutability":"mutable","name":"strategiesToRemoveFromWhitelist","nameLocation":"7011:31:29","nodeType":"VariableDeclaration","scope":7783,"src":"6990:52:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_calldata_ptr","typeString":"contract IStrategy[]"},"typeName":{"baseType":{"id":7778,"nodeType":"UserDefinedTypeName","pathNode":{"id":7777,"name":"IStrategy","nameLocations":["6990:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"6990:9:29"},"referencedDeclaration":7612,"src":"6990:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"id":7779,"nodeType":"ArrayTypeName","src":"6990:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IStrategy_$7612_$dyn_storage_ptr","typeString":"contract IStrategy[]"}},"visibility":"internal"}],"src":"6989:54:29"},"returnParameters":{"id":7782,"nodeType":"ParameterList","parameters":[],"src":"7052:0:29"},"scope":7850,"src":"6944:109:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7784,"nodeType":"StructuredDocumentation","src":"7059:447:29","text":" If true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker\n and also when performing DelegationManager.queueWithdrawals, a staker can only withdraw to themselves.\n Defaulted to false for all existing strategies.\n @param strategy The strategy to set `thirdPartyTransfersForbidden` value to\n @param value bool value to set `thirdPartyTransfersForbidden` to"},"functionSelector":"4e5a4263","id":7792,"implemented":false,"kind":"function","modifiers":[],"name":"setThirdPartyTransfersForbidden","nameLocation":"7520:31:29","nodeType":"FunctionDefinition","parameters":{"id":7790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"strategy","nameLocation":"7562:8:29","nodeType":"VariableDeclaration","scope":7792,"src":"7552:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7786,"nodeType":"UserDefinedTypeName","pathNode":{"id":7785,"name":"IStrategy","nameLocations":["7552:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"7552:9:29"},"referencedDeclaration":7612,"src":"7552:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":7789,"mutability":"mutable","name":"value","nameLocation":"7577:5:29","nodeType":"VariableDeclaration","scope":7792,"src":"7572:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7788,"name":"bool","nodeType":"ElementaryTypeName","src":"7572:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7551:32:29"},"returnParameters":{"id":7791,"nodeType":"ParameterList","parameters":[],"src":"7592:0:29"},"scope":7850,"src":"7511:82:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7793,"nodeType":"StructuredDocumentation","src":"7599:73:29","text":"@notice Returns the single, central Delegation contract of EigenLayer"},"functionSelector":"df5cf723","id":7799,"implemented":false,"kind":"function","modifiers":[],"name":"delegation","nameLocation":"7686:10:29","nodeType":"FunctionDefinition","parameters":{"id":7794,"nodeType":"ParameterList","parameters":[],"src":"7696:2:29"},"returnParameters":{"id":7798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7799,"src":"7722:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"},"typeName":{"id":7796,"nodeType":"UserDefinedTypeName","pathNode":{"id":7795,"name":"IDelegationManager","nameLocations":["7722:18:29"],"nodeType":"IdentifierPath","referencedDeclaration":6097,"src":"7722:18:29"},"referencedDeclaration":6097,"src":"7722:18:29","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegationManager_$6097","typeString":"contract IDelegationManager"}},"visibility":"internal"}],"src":"7721:20:29"},"scope":7850,"src":"7677:65:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7800,"nodeType":"StructuredDocumentation","src":"7748:70:29","text":"@notice Returns the single, central Slasher contract of EigenLayer"},"functionSelector":"b1344271","id":7806,"implemented":false,"kind":"function","modifiers":[],"name":"slasher","nameLocation":"7832:7:29","nodeType":"FunctionDefinition","parameters":{"id":7801,"nodeType":"ParameterList","parameters":[],"src":"7839:2:29"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7806,"src":"7865:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISlasher_$7497","typeString":"contract ISlasher"},"typeName":{"id":7803,"nodeType":"UserDefinedTypeName","pathNode":{"id":7802,"name":"ISlasher","nameLocations":["7865:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":7497,"src":"7865:8:29"},"referencedDeclaration":7497,"src":"7865:8:29","typeDescriptions":{"typeIdentifier":"t_contract$_ISlasher_$7497","typeString":"contract ISlasher"}},"visibility":"internal"}],"src":"7864:10:29"},"scope":7850,"src":"7823:52:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7807,"nodeType":"StructuredDocumentation","src":"7881:62:29","text":"@notice Returns the EigenPodManager contract of EigenLayer"},"functionSelector":"4665bcda","id":7813,"implemented":false,"kind":"function","modifiers":[],"name":"eigenPodManager","nameLocation":"7957:15:29","nodeType":"FunctionDefinition","parameters":{"id":7808,"nodeType":"ParameterList","parameters":[],"src":"7972:2:29"},"returnParameters":{"id":7812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7813,"src":"7998:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"},"typeName":{"id":7810,"nodeType":"UserDefinedTypeName","pathNode":{"id":7809,"name":"IEigenPodManager","nameLocations":["7998:16:29"],"nodeType":"IdentifierPath","referencedDeclaration":6613,"src":"7998:16:29"},"referencedDeclaration":6613,"src":"7998:16:29","typeDescriptions":{"typeIdentifier":"t_contract$_IEigenPodManager_$6613","typeString":"contract IEigenPodManager"}},"visibility":"internal"}],"src":"7997:18:29"},"scope":7850,"src":"7948:68:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7814,"nodeType":"StructuredDocumentation","src":"8022:60:29","text":"@notice Returns the address of the `strategyWhitelister`"},"functionSelector":"967fc0d2","id":7819,"implemented":false,"kind":"function","modifiers":[],"name":"strategyWhitelister","nameLocation":"8096:19:29","nodeType":"FunctionDefinition","parameters":{"id":7815,"nodeType":"ParameterList","parameters":[],"src":"8115:2:29"},"returnParameters":{"id":7818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7819,"src":"8141:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7816,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8140:9:29"},"scope":7850,"src":"8087:63:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7820,"nodeType":"StructuredDocumentation","src":"8156:81:29","text":"@notice Returns bool for whether or not `strategy` is whitelisted for deposit"},"functionSelector":"663c1de4","id":7828,"implemented":false,"kind":"function","modifiers":[],"name":"strategyIsWhitelistedForDeposit","nameLocation":"8251:31:29","nodeType":"FunctionDefinition","parameters":{"id":7824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"strategy","nameLocation":"8293:8:29","nodeType":"VariableDeclaration","scope":7828,"src":"8283:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7822,"nodeType":"UserDefinedTypeName","pathNode":{"id":7821,"name":"IStrategy","nameLocations":["8283:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"8283:9:29"},"referencedDeclaration":7612,"src":"8283:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"8282:20:29"},"returnParameters":{"id":7827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7828,"src":"8326:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7825,"name":"bool","nodeType":"ElementaryTypeName","src":"8326:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8325:6:29"},"scope":7850,"src":"8242:90:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7829,"nodeType":"StructuredDocumentation","src":"8338:171:29","text":" @notice Owner-only function to change the `strategyWhitelister` address.\n @param newStrategyWhitelister new address for the `strategyWhitelister`."},"functionSelector":"c6656702","id":7834,"implemented":false,"kind":"function","modifiers":[],"name":"setStrategyWhitelister","nameLocation":"8523:22:29","nodeType":"FunctionDefinition","parameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7831,"mutability":"mutable","name":"newStrategyWhitelister","nameLocation":"8554:22:29","nodeType":"VariableDeclaration","scope":7834,"src":"8546:30:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7830,"name":"address","nodeType":"ElementaryTypeName","src":"8546:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8545:32:29"},"returnParameters":{"id":7833,"nodeType":"ParameterList","parameters":[],"src":"8586:0:29"},"scope":7850,"src":"8514:73:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7835,"nodeType":"StructuredDocumentation","src":"8593:218:29","text":" @notice Returns bool for whether or not `strategy` enables credit transfers. i.e enabling\n depositIntoStrategyWithSignature calls or queueing withdrawals to a different address than the staker."},"functionSelector":"9b4da03d","id":7843,"implemented":false,"kind":"function","modifiers":[],"name":"thirdPartyTransfersForbidden","nameLocation":"8825:28:29","nodeType":"FunctionDefinition","parameters":{"id":7839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7838,"mutability":"mutable","name":"strategy","nameLocation":"8864:8:29","nodeType":"VariableDeclaration","scope":7843,"src":"8854:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"},"typeName":{"id":7837,"nodeType":"UserDefinedTypeName","pathNode":{"id":7836,"name":"IStrategy","nameLocations":["8854:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"8854:9:29"},"referencedDeclaration":7612,"src":"8854:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$7612","typeString":"contract IStrategy"}},"visibility":"internal"}],"src":"8853:20:29"},"returnParameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7843,"src":"8897:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7840,"name":"bool","nodeType":"ElementaryTypeName","src":"8897:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8896:6:29"},"scope":7850,"src":"8816:87:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7844,"nodeType":"StructuredDocumentation","src":"8909:196:29","text":" @notice Getter function for the current EIP-712 domain separator for this contract.\n @dev The domain separator will change in the event of a fork that changes the ChainID."},"functionSelector":"f698da25","id":7849,"implemented":false,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"9119:15:29","nodeType":"FunctionDefinition","parameters":{"id":7845,"nodeType":"ParameterList","parameters":[],"src":"9134:2:29"},"returnParameters":{"id":7848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7849,"src":"9160:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9160:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9159:9:29"},"scope":7850,"src":"9110:59:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7851,"src":"456:8715:29","usedErrors":[],"usedEvents":[7632,7640,7647,7653,7659]}],"src":"37:9135:29"},"id":29},"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol","exportedSymbols":{"BeaconChainProofs":[8293],"Endian":[8378],"Merkle":[8659]},"id":8294,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7852,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:30"},{"absolutePath":"eigenlayer-contracts/src/contracts/libraries/Merkle.sol","file":"./Merkle.sol","id":7853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8294,"sourceUnit":8660,"src":"63:22:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"eigenlayer-contracts/src/contracts/libraries/Endian.sol","file":"../libraries/Endian.sol","id":7854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8294,"sourceUnit":8379,"src":"86:33:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"BeaconChainProofs","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8293,"linearizedBaseContracts":[8293],"name":"BeaconChainProofs","nameLocation":"540:17:30","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":7855,"nodeType":"StructuredDocumentation","src":"564:598:30","text":"@notice Heights of various merkle trees in the beacon chain\n - beaconBlockRoot\n |                                             HEIGHT: BEACON_BLOCK_HEADER_TREE_HEIGHT\n -- beaconStateRoot\n |                                             HEIGHT: BEACON_STATE_TREE_HEIGHT\n validatorContainerRoot, balanceContainerRoot\n |                       |                     HEIGHT: BALANCE_TREE_HEIGHT\n |                       individual balances\n |                                             HEIGHT: VALIDATOR_TREE_HEIGHT\n individual validators"},"id":7858,"mutability":"constant","name":"BEACON_BLOCK_HEADER_TREE_HEIGHT","nameLocation":"1193:31:30","nodeType":"VariableDeclaration","scope":8293,"src":"1167:61:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1227:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":7861,"mutability":"constant","name":"BEACON_STATE_TREE_HEIGHT","nameLocation":"1260:24:30","nodeType":"VariableDeclaration","scope":8293,"src":"1234:54:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":7860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1287:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"internal"},{"constant":true,"id":7864,"mutability":"constant","name":"BALANCE_TREE_HEIGHT","nameLocation":"1320:19:30","nodeType":"VariableDeclaration","scope":8293,"src":"1294:50:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3338","id":7863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1342:2:30","typeDescriptions":{"typeIdentifier":"t_rational_38_by_1","typeString":"int_const 38"},"value":"38"},"visibility":"internal"},{"constant":true,"id":7867,"mutability":"constant","name":"VALIDATOR_TREE_HEIGHT","nameLocation":"1376:21:30","nodeType":"VariableDeclaration","scope":8293,"src":"1350:52:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3430","id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1400:2:30","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"visibility":"internal"},{"constant":true,"documentation":{"id":7868,"nodeType":"StructuredDocumentation","src":"1409:299:30","text":"@notice Index of the beaconStateRoot in the `BeaconBlockHeader` container\n BeaconBlockHeader = [..., state_root, ...]\n                      0...      3\n (See https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#beaconblockheader)"},"id":7871,"mutability":"constant","name":"STATE_ROOT_INDEX","nameLocation":"1739:16:30","nodeType":"VariableDeclaration","scope":8293,"src":"1713:46:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1758:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"documentation":{"id":7872,"nodeType":"StructuredDocumentation","src":"1766:287:30","text":"@notice Indices for fields in the `BeaconState` container\n BeaconState = [..., validators, balances, ...]\n                0...     11         12\n (See https://github.com/ethereum/consensus-specs/blob/dev/specs/capella/beacon-chain.md#beaconstate)"},"id":7875,"mutability":"constant","name":"VALIDATOR_CONTAINER_INDEX","nameLocation":"2084:25:30","nodeType":"VariableDeclaration","scope":8293,"src":"2058:56:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131","id":7874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:2:30","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"visibility":"internal"},{"constant":true,"id":7878,"mutability":"constant","name":"BALANCE_CONTAINER_INDEX","nameLocation":"2146:23:30","nodeType":"VariableDeclaration","scope":8293,"src":"2120:54:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3132","id":7877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2172:2:30","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"visibility":"internal"},{"constant":true,"documentation":{"id":7879,"nodeType":"StructuredDocumentation","src":"2181:163:30","text":"@notice Number of fields in the `Validator` container\n (See https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator)"},"id":7882,"mutability":"constant","name":"VALIDATOR_FIELDS_LENGTH","nameLocation":"2375:23:30","nodeType":"VariableDeclaration","scope":8293,"src":"2349:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2349:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38","id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"constant":true,"documentation":{"id":7883,"nodeType":"StructuredDocumentation","src":"2409:59:30","text":"@notice Indices for fields in the `Validator` container"},"id":7886,"mutability":"constant","name":"VALIDATOR_PUBKEY_INDEX","nameLocation":"2499:22:30","nodeType":"VariableDeclaration","scope":8293,"src":"2473:52:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7884,"name":"uint256","nodeType":"ElementaryTypeName","src":"2473:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2524:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":7889,"mutability":"constant","name":"VALIDATOR_WITHDRAWAL_CREDENTIALS_INDEX","nameLocation":"2557:38:30","nodeType":"VariableDeclaration","scope":8293,"src":"2531:68:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2531:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2598:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":7892,"mutability":"constant","name":"VALIDATOR_BALANCE_INDEX","nameLocation":"2631:23:30","nodeType":"VariableDeclaration","scope":8293,"src":"2605:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2657:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":7895,"mutability":"constant","name":"VALIDATOR_SLASHED_INDEX","nameLocation":"2690:23:30","nodeType":"VariableDeclaration","scope":8293,"src":"2664:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2664:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2716:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":7898,"mutability":"constant","name":"VALIDATOR_ACTIVATION_EPOCH_INDEX","nameLocation":"2749:32:30","nodeType":"VariableDeclaration","scope":8293,"src":"2723:62:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2723:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":7897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2784:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"internal"},{"constant":true,"id":7901,"mutability":"constant","name":"VALIDATOR_EXIT_EPOCH_INDEX","nameLocation":"2817:26:30","nodeType":"VariableDeclaration","scope":8293,"src":"2791:56:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"36","id":7900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:1:30","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"internal"},{"constant":true,"documentation":{"id":7902,"nodeType":"StructuredDocumentation","src":"2854:30:30","text":"@notice Slot/Epoch timings"},"id":7905,"mutability":"constant","name":"SECONDS_PER_SLOT","nameLocation":"2914:16:30","nodeType":"VariableDeclaration","scope":8293,"src":"2889:46:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7903,"name":"uint64","nodeType":"ElementaryTypeName","src":"2889:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3132","id":7904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2933:2:30","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"visibility":"internal"},{"constant":true,"id":7908,"mutability":"constant","name":"SLOTS_PER_EPOCH","nameLocation":"2966:15:30","nodeType":"VariableDeclaration","scope":8293,"src":"2941:45:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7906,"name":"uint64","nodeType":"ElementaryTypeName","src":"2941:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3332","id":7907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2984:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"constant":true,"id":7913,"mutability":"constant","name":"SECONDS_PER_EPOCH","nameLocation":"3017:17:30","nodeType":"VariableDeclaration","scope":8293,"src":"2992:79:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7909,"name":"uint64","nodeType":"ElementaryTypeName","src":"2992:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":7912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7910,"name":"SLOTS_PER_EPOCH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"3037:15:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7911,"name":"SECONDS_PER_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"3055:16:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3037:34:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":true,"documentation":{"id":7914,"nodeType":"StructuredDocumentation","src":"3078:154:30","text":"@notice `FAR_FUTURE_EPOCH` is used as the default value for certain `Validator`\n fields when a `Validator` is first created on the beacon chain"},"id":7921,"mutability":"constant","name":"FAR_FUTURE_EPOCH","nameLocation":"3262:16:30","nodeType":"VariableDeclaration","scope":8293,"src":"3237:60:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7915,"name":"uint64","nodeType":"ElementaryTypeName","src":"3237:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"expression":{"arguments":[{"id":7918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3286:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7917,"name":"uint64","nodeType":"ElementaryTypeName","src":"3286:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3281:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3294:3:30","memberName":"max","nodeType":"MemberAccess","src":"3281:16:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":true,"id":7924,"mutability":"constant","name":"UINT64_MASK","nameLocation":"3328:11:30","nodeType":"VariableDeclaration","scope":8293,"src":"3303:57:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":7922,"name":"bytes8","nodeType":"ElementaryTypeName","src":"3303:6:30","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":{"hexValue":"307866666666666666666666666666666666","id":7923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3342:18:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"visibility":"internal"},{"canonicalName":"BeaconChainProofs.StateRootProof","documentation":{"id":7925,"nodeType":"StructuredDocumentation","src":"3367:109:30","text":"@notice Contains a beacon state root and a merkle proof verifying its inclusion under a beacon block root"},"id":7930,"members":[{"constant":false,"id":7927,"mutability":"mutable","name":"beaconStateRoot","nameLocation":"3521:15:30","nodeType":"VariableDeclaration","scope":7930,"src":"3513:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3513:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7929,"mutability":"mutable","name":"proof","nameLocation":"3552:5:30","nodeType":"VariableDeclaration","scope":7930,"src":"3546:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7928,"name":"bytes","nodeType":"ElementaryTypeName","src":"3546:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"StateRootProof","nameLocation":"3488:14:30","nodeType":"StructDefinition","scope":8293,"src":"3481:83:30","visibility":"public"},{"canonicalName":"BeaconChainProofs.ValidatorProof","documentation":{"id":7931,"nodeType":"StructuredDocumentation","src":"3570:105:30","text":"@notice Contains a validator's fields and a merkle proof of their inclusion under a beacon state root"},"id":7937,"members":[{"constant":false,"id":7934,"mutability":"mutable","name":"validatorFields","nameLocation":"3722:15:30","nodeType":"VariableDeclaration","scope":7937,"src":"3712:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3712:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7933,"nodeType":"ArrayTypeName","src":"3712:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":7936,"mutability":"mutable","name":"proof","nameLocation":"3753:5:30","nodeType":"VariableDeclaration","scope":7937,"src":"3747:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7935,"name":"bytes","nodeType":"ElementaryTypeName","src":"3747:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ValidatorProof","nameLocation":"3687:14:30","nodeType":"StructDefinition","scope":8293,"src":"3680:85:30","visibility":"public"},{"canonicalName":"BeaconChainProofs.BalanceContainerProof","documentation":{"id":7938,"nodeType":"StructuredDocumentation","src":"3771:103:30","text":"@notice Contains a beacon balance container root and a proof of this root under a beacon block root"},"id":7943,"members":[{"constant":false,"id":7940,"mutability":"mutable","name":"balanceContainerRoot","nameLocation":"3926:20:30","nodeType":"VariableDeclaration","scope":7943,"src":"3918:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3918:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7942,"mutability":"mutable","name":"proof","nameLocation":"3962:5:30","nodeType":"VariableDeclaration","scope":7943,"src":"3956:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7941,"name":"bytes","nodeType":"ElementaryTypeName","src":"3956:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BalanceContainerProof","nameLocation":"3886:21:30","nodeType":"StructDefinition","scope":8293,"src":"3879:95:30","visibility":"public"},{"canonicalName":"BeaconChainProofs.BalanceProof","documentation":{"id":7944,"nodeType":"StructuredDocumentation","src":"3980:105:30","text":"@notice Contains a validator balance root and a proof of its inclusion under a balance container root"},"id":7951,"members":[{"constant":false,"id":7946,"mutability":"mutable","name":"pubkeyHash","nameLocation":"4128:10:30","nodeType":"VariableDeclaration","scope":7951,"src":"4120:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4120:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7948,"mutability":"mutable","name":"balanceRoot","nameLocation":"4156:11:30","nodeType":"VariableDeclaration","scope":7951,"src":"4148:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4148:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7950,"mutability":"mutable","name":"proof","nameLocation":"4183:5:30","nodeType":"VariableDeclaration","scope":7951,"src":"4177:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7949,"name":"bytes","nodeType":"ElementaryTypeName","src":"4177:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BalanceProof","nameLocation":"4097:12:30","nodeType":"StructDefinition","scope":8293,"src":"4090:105:30","visibility":"public"},{"body":{"id":7985,"nodeType":"Block","src":"4661:745:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7961,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"4692:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_calldata_ptr","typeString":"struct BeaconChainProofs.StateRootProof calldata"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4698:5:30","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7929,"src":"4692:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4704:6:30","memberName":"length","nodeType":"MemberAccess","src":"4692:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":7964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4714:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":7965,"name":"BEACON_BLOCK_HEADER_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"4720:31:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4719:33:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4714:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4692:60:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e7665726966795374617465526f6f743a2050726f6f662068617320696e636f7272656374206c656e677468","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4766:63:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe54b50b585807c3e83a0dd7ef110ade24f33f2f5dfa32e05816ff039fa89606","typeString":"literal_string \"BeaconChainProofs.verifyStateRoot: Proof has incorrect length\""},"value":"BeaconChainProofs.verifyStateRoot: Proof has incorrect length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe54b50b585807c3e83a0dd7ef110ade24f33f2f5dfa32e05816ff039fa89606","typeString":"literal_string \"BeaconChainProofs.verifyStateRoot: Proof has incorrect length\""}],"id":7960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4671:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:168:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7971,"nodeType":"ExpressionStatement","src":"4671:168:30"},{"documentation":"This merkle proof verifies the `beaconStateRoot` under the `beaconBlockRoot`\n - beaconBlockRoot\n |                            HEIGHT: BEACON_BLOCK_HEADER_TREE_HEIGHT\n -- beaconStateRoot","expression":{"arguments":[{"arguments":[{"expression":{"id":7975,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"5156:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_calldata_ptr","typeString":"struct BeaconChainProofs.StateRootProof calldata"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5162:5:30","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7929,"src":"5156:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7977,"name":"beaconBlockRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"5191:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7978,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"5230:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_calldata_ptr","typeString":"struct BeaconChainProofs.StateRootProof calldata"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:15:30","memberName":"beaconStateRoot","nodeType":"MemberAccess","referencedDeclaration":7927,"src":"5230:21:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7980,"name":"STATE_ROOT_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"5276:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7973,"name":"Merkle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"5102:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Merkle_$8659_$","typeString":"type(library Merkle)"}},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5109:21:30","memberName":"verifyInclusionSha256","nodeType":"MemberAccess","referencedDeclaration":8480,"src":"5102:28:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes memory,bytes32,bytes32,uint256) view returns (bool)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["5149:5:30","5185:4:30","5224:4:30","5269:5:30"],"names":["proof","root","leaf","index"],"nodeType":"FunctionCall","src":"5102:205:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e7665726966795374617465526f6f743a20496e76616c696420737461746520726f6f74206d65726b6c652070726f6f66","id":7982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5321:68:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_251b0a82b4eb96f9d246c262a8c3c724c94024c01ddfdf9d6ad4643f1beef177","typeString":"literal_string \"BeaconChainProofs.verifyStateRoot: Invalid state root merkle proof\""},"value":"BeaconChainProofs.verifyStateRoot: Invalid state root merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_251b0a82b4eb96f9d246c262a8c3c724c94024c01ddfdf9d6ad4643f1beef177","typeString":"literal_string \"BeaconChainProofs.verifyStateRoot: Invalid state root merkle proof\""}],"id":7972,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5081:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5081:318:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7984,"nodeType":"ExpressionStatement","src":"5081:318:30"}]},"documentation":{"id":7952,"nodeType":"StructuredDocumentation","src":"4311:250:30","text":"@notice Verify a merkle proof of the beacon state root against a beacon block root\n @param beaconBlockRoot merkle root of the beacon block\n @param proof the beacon state root and merkle proof of its inclusion under `beaconBlockRoot`"},"id":7986,"implemented":true,"kind":"function","modifiers":[],"name":"verifyStateRoot","nameLocation":"4575:15:30","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"beaconBlockRoot","nameLocation":"4599:15:30","nodeType":"VariableDeclaration","scope":7986,"src":"4591:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4591:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7957,"mutability":"mutable","name":"proof","nameLocation":"4640:5:30","nodeType":"VariableDeclaration","scope":7986,"src":"4616:29:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_calldata_ptr","typeString":"struct BeaconChainProofs.StateRootProof"},"typeName":{"id":7956,"nodeType":"UserDefinedTypeName","pathNode":{"id":7955,"name":"StateRootProof","nameLocations":["4616:14:30"],"nodeType":"IdentifierPath","referencedDeclaration":7930,"src":"4616:14:30"},"referencedDeclaration":7930,"src":"4616:14:30","typeDescriptions":{"typeIdentifier":"t_struct$_StateRootProof_$7930_storage_ptr","typeString":"struct BeaconChainProofs.StateRootProof"}},"visibility":"internal"}],"src":"4590:56:30"},"returnParameters":{"id":7959,"nodeType":"ParameterList","parameters":[],"src":"4661:0:30"},"scope":8293,"src":"4566:840:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8057,"nodeType":"Block","src":"6545:1557:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8000,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"6576:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6592:6:30","memberName":"length","nodeType":"MemberAccess","src":"6576:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8002,"name":"VALIDATOR_FIELDS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"6602:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6576:49:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667956616c696461746f724669656c64733a2056616c696461746f72206669656c64732068617320696e636f7272656374206c656e677468","id":8004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6639:80:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e10cba9564842220da473863a63b6fb297607a04a36a1251a53202016a3032b6","typeString":"literal_string \"BeaconChainProofs.verifyValidatorFields: Validator fields has incorrect length\""},"value":"BeaconChainProofs.verifyValidatorFields: Validator fields has incorrect length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e10cba9564842220da473863a63b6fb297607a04a36a1251a53202016a3032b6","typeString":"literal_string \"BeaconChainProofs.verifyValidatorFields: Validator fields has incorrect length\""}],"id":7999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6555:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6555:174:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8006,"nodeType":"ExpressionStatement","src":"6555:174:30"},{"documentation":"Note: the reason we use `VALIDATOR_TREE_HEIGHT + 1` here is because the merklization process for\n this container includes hashing the root of the validator tree with the length of the validator list","expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8008,"name":"validatorFieldsProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"6983:20:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7004:6:30","memberName":"length","nodeType":"MemberAccess","src":"6983:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7014:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8011,"name":"VALIDATOR_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"7021:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7045:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7021:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7020:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8015,"name":"BEACON_STATE_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"7050:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7020:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7019:56:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7014:61:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6983:92:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667956616c696461746f724669656c64733a2050726f6f662068617320696e636f7272656374206c656e677468","id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7089:69:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbb8e14d34b33d3871acd8df2a2961aba50d42f9f444513196c37f272de56830","typeString":"literal_string \"BeaconChainProofs.verifyValidatorFields: Proof has incorrect length\""},"value":"BeaconChainProofs.verifyValidatorFields: Proof has incorrect length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbb8e14d34b33d3871acd8df2a2961aba50d42f9f444513196c37f272de56830","typeString":"literal_string \"BeaconChainProofs.verifyValidatorFields: Proof has incorrect length\""}],"id":8007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6962:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6962:206:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8022,"nodeType":"ExpressionStatement","src":"6962:206:30"},{"assignments":[8024],"declarations":[{"constant":false,"id":8024,"mutability":"mutable","name":"validatorRoot","nameLocation":"7251:13:30","nodeType":"VariableDeclaration","scope":8057,"src":"7243:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7243:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8029,"initialValue":{"arguments":[{"id":8027,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"7290:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"expression":{"id":8025,"name":"Merkle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"7267:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Merkle_$8659_$","typeString":"type(library Merkle)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7274:15:30","memberName":"merkleizeSha256","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"7267:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory) pure returns (bytes32)"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7267:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7243:63:30"},{"assignments":[8032],"declarations":[{"constant":false,"id":8032,"mutability":"mutable","name":"index","nameLocation":"7689:5:30","nodeType":"VariableDeclaration","scope":8057,"src":"7681:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8031,"name":"uint256","nodeType":"ElementaryTypeName","src":"7681:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"This proof combines two proofs, so its index accounts for the relative position of leaves in two trees:\n - beaconStateRoot\n |                            HEIGHT: BEACON_STATE_TREE_HEIGHT\n -- validatorContainerRoot\n |                            HEIGHT: VALIDATOR_TREE_HEIGHT + 1\n ---- validatorRoot","id":8045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8033,"name":"VALIDATOR_CONTAINER_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7875,"src":"7698:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8034,"name":"VALIDATOR_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"7728:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7752:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7728:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7727:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:56:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7697:58:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":8042,"name":"validatorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"7766:14:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7758:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8040,"name":"uint256","nodeType":"ElementaryTypeName","src":"7758:7:30","typeDescriptions":{}}},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7758:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7697:84:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7681:100:30"},{"expression":{"arguments":[{"arguments":[{"id":8049,"name":"validatorFieldsProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"7867:20:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":8050,"name":"beaconStateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"7911:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8051,"name":"validatorRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"7950:13:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8052,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"7988:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8047,"name":"Merkle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"7813:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Merkle_$8659_$","typeString":"type(library Merkle)"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7820:21:30","memberName":"verifyInclusionSha256","nodeType":"MemberAccess","referencedDeclaration":8480,"src":"7813:28:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes memory,bytes32,bytes32,uint256) view returns (bool)"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["7860:5:30","7905:4:30","7944:4:30","7981:5:30"],"names":["proof","root","leaf","index"],"nodeType":"FunctionCall","src":"7813:195:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667956616c696461746f724669656c64733a20496e76616c6964206d65726b6c652070726f6f66","id":8054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8022:63:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9709dd9f2542cc0247eb9dbd7fb02945a39323b19fe6d4bb634aeba14b4c9c4b","typeString":"literal_string \"BeaconChainProofs.verifyValidatorFields: Invalid merkle proof\""},"value":"BeaconChainProofs.verifyValidatorFields: Invalid merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9709dd9f2542cc0247eb9dbd7fb02945a39323b19fe6d4bb634aeba14b4c9c4b","typeString":"literal_string \"BeaconChainProofs.verifyValidatorFields: Invalid merkle proof\""}],"id":8046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7792:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7792:303:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8056,"nodeType":"ExpressionStatement","src":"7792:303:30"}]},"documentation":{"id":7987,"nodeType":"StructuredDocumentation","src":"5412:924:30","text":"@notice Verify a merkle proof of a validator container against a `beaconStateRoot`\n @dev This proof starts at a validator's container root, proves through the validator container root,\n and continues proving to the root of the `BeaconState`\n @dev See https://eth2book.info/capella/part3/containers/dependencies/#validator for info on `Validator` containers\n @dev See https://eth2book.info/capella/part3/containers/state/#beaconstate for info on `BeaconState` containers\n @param beaconStateRoot merkle root of the `BeaconState` container\n @param validatorFields an individual validator's fields. These are merklized to form a `validatorRoot`,\n which is used as the leaf to prove against `beaconStateRoot`\n @param validatorFieldsProof a merkle proof of inclusion of `validatorFields` under `beaconStateRoot`\n @param validatorIndex the validator's unique index"},"id":8058,"implemented":true,"kind":"function","modifiers":[],"name":"verifyValidatorFields","nameLocation":"6350:21:30","nodeType":"FunctionDefinition","parameters":{"id":7997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"beaconStateRoot","nameLocation":"6389:15:30","nodeType":"VariableDeclaration","scope":8058,"src":"6381:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6381:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7992,"mutability":"mutable","name":"validatorFields","nameLocation":"6433:15:30","nodeType":"VariableDeclaration","scope":8058,"src":"6414:34:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6414:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7991,"nodeType":"ArrayTypeName","src":"6414:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":7994,"mutability":"mutable","name":"validatorFieldsProof","nameLocation":"6473:20:30","nodeType":"VariableDeclaration","scope":8058,"src":"6458:35:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7993,"name":"bytes","nodeType":"ElementaryTypeName","src":"6458:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7996,"mutability":"mutable","name":"validatorIndex","nameLocation":"6510:14:30","nodeType":"VariableDeclaration","scope":8058,"src":"6503:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7995,"name":"uint40","nodeType":"ElementaryTypeName","src":"6503:6:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"6371:159:30"},"returnParameters":{"id":7998,"nodeType":"ParameterList","parameters":[],"src":"6545:0:30"},"scope":8293,"src":"6341:1761:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8105,"nodeType":"Block","src":"9120:1021:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8068,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"9151:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof calldata"}},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9157:5:30","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7942,"src":"9151:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:30","memberName":"length","nodeType":"MemberAccess","src":"9151:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8072,"name":"BEACON_BLOCK_HEADER_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"9179:31:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8073,"name":"BEACON_STATE_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"9213:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9179:58:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9178:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:65:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9151:87:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667942616c616e6365436f6e7461696e65723a2050726f6f662068617320696e636f7272656374206c656e677468","id":8078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9252:70:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9f8fb70ca57a34c43fd1486795763c3ecf2cb7c12b0cc147f87c6e16d583f0d","typeString":"literal_string \"BeaconChainProofs.verifyBalanceContainer: Proof has incorrect length\""},"value":"BeaconChainProofs.verifyBalanceContainer: Proof has incorrect length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9f8fb70ca57a34c43fd1486795763c3ecf2cb7c12b0cc147f87c6e16d583f0d","typeString":"literal_string \"BeaconChainProofs.verifyBalanceContainer: Proof has incorrect length\""}],"id":8067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9130:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9130:202:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8080,"nodeType":"ExpressionStatement","src":"9130:202:30"},{"assignments":[8083],"declarations":[{"constant":false,"id":8083,"mutability":"mutable","name":"index","nameLocation":"9722:5:30","nodeType":"VariableDeclaration","scope":8105,"src":"9714:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8082,"name":"uint256","nodeType":"ElementaryTypeName","src":"9714:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"This proof combines two proofs, so its index accounts for the relative position of leaves in two trees:\n - beaconBlockRoot\n |                            HEIGHT: BEACON_BLOCK_HEADER_TREE_HEIGHT\n -- beaconStateRoot\n |                            HEIGHT: BEACON_STATE_TREE_HEIGHT\n ---- balancesContainerRoot","id":8091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8084,"name":"STATE_ROOT_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"9731:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"id":8085,"name":"BEACON_STATE_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"9752:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9751:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9731:46:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9730:48:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":8089,"name":"BALANCE_CONTAINER_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"9781:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9730:74:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9714:90:30"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8095,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"9890:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof calldata"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9896:5:30","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7942,"src":"9890:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":8097,"name":"beaconBlockRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"9925:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8098,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"9964:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof calldata"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9970:20:30","memberName":"balanceContainerRoot","nodeType":"MemberAccess","referencedDeclaration":7940,"src":"9964:26:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8100,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"10015:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8093,"name":"Merkle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"9836:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Merkle_$8659_$","typeString":"type(library Merkle)"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9843:21:30","memberName":"verifyInclusionSha256","nodeType":"MemberAccess","referencedDeclaration":8480,"src":"9836:28:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes memory,bytes32,bytes32,uint256) view returns (bool)"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["9883:5:30","9919:4:30","9958:4:30","10008:5:30"],"names":["proof","root","leaf","index"],"nodeType":"FunctionCall","src":"9836:199:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667942616c616e6365436f6e7461696e65723a20696e76616c69642062616c616e636520636f6e7461696e65722070726f6f66","id":8102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10049:75:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c7876a368e82f4402892d19f3830e1db51bf91a802f4f3d5a416581da785d72","typeString":"literal_string \"BeaconChainProofs.verifyBalanceContainer: invalid balance container proof\""},"value":"BeaconChainProofs.verifyBalanceContainer: invalid balance container proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c7876a368e82f4402892d19f3830e1db51bf91a802f4f3d5a416581da785d72","typeString":"literal_string \"BeaconChainProofs.verifyBalanceContainer: invalid balance container proof\""}],"id":8092,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9815:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:319:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8104,"nodeType":"ExpressionStatement","src":"9815:319:30"}]},"documentation":{"id":8059,"nodeType":"StructuredDocumentation","src":"8220:786:30","text":"@notice Verify a merkle proof of the beacon state's balances container against the beacon block root\n @dev This proof starts at the balance container root, proves through the beacon state root, and\n continues proving through the beacon block root. As a result, this proof will contain elements\n of a `StateRootProof` under the same block root, with the addition of proving the balances field\n within the beacon state.\n @dev This is used to make checkpoint proofs more efficient, as a checkpoint will verify multiple balances\n against the same balance container root.\n @param beaconBlockRoot merkle root of the beacon block\n @param proof a beacon balance container root and merkle proof of its inclusion under `beaconBlockRoot`"},"id":8106,"implemented":true,"kind":"function","modifiers":[],"name":"verifyBalanceContainer","nameLocation":"9020:22:30","nodeType":"FunctionDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"beaconBlockRoot","nameLocation":"9051:15:30","nodeType":"VariableDeclaration","scope":8106,"src":"9043:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9043:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8064,"mutability":"mutable","name":"proof","nameLocation":"9099:5:30","nodeType":"VariableDeclaration","scope":8106,"src":"9068:36:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof"},"typeName":{"id":8063,"nodeType":"UserDefinedTypeName","pathNode":{"id":8062,"name":"BalanceContainerProof","nameLocations":["9068:21:30"],"nodeType":"IdentifierPath","referencedDeclaration":7943,"src":"9068:21:30"},"referencedDeclaration":7943,"src":"9068:21:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceContainerProof_$7943_storage_ptr","typeString":"struct BeaconChainProofs.BalanceContainerProof"}},"visibility":"internal"}],"src":"9042:63:30"},"returnParameters":{"id":8066,"nodeType":"ParameterList","parameters":[],"src":"9120:0:30"},"scope":8293,"src":"9011:1130:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8162,"nodeType":"Block","src":"10831:1290:30","statements":[{"documentation":"Note: the reason we use `BALANCE_TREE_HEIGHT + 1` here is because the merklization process for\n this container includes hashing the root of the balances tree with the length of the balances list","expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8120,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"11080:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceProof calldata"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11086:5:30","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7950,"src":"11080:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11092:6:30","memberName":"length","nodeType":"MemberAccess","src":"11080:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":8123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11102:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8124,"name":"BALANCE_TREE_HEIGHT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"11108:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11130:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11108:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11102:30:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11080:52:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667956616c696461746f7242616c616e63653a2050726f6f662068617320696e636f7272656374206c656e677468","id":8130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11146:70:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee960e1d81c3bdb3a33f9bc90edf9ec2797bcabda2530a1627505ed5a19553e5","typeString":"literal_string \"BeaconChainProofs.verifyValidatorBalance: Proof has incorrect length\""},"value":"BeaconChainProofs.verifyValidatorBalance: Proof has incorrect length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee960e1d81c3bdb3a33f9bc90edf9ec2797bcabda2530a1627505ed5a19553e5","typeString":"literal_string \"BeaconChainProofs.verifyValidatorBalance: Proof has incorrect length\""}],"id":8119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11059:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:167:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8132,"nodeType":"ExpressionStatement","src":"11059:167:30"},{"assignments":[8135],"declarations":[{"constant":false,"id":8135,"mutability":"mutable","name":"balanceIndex","nameLocation":"11602:12:30","nodeType":"VariableDeclaration","scope":8162,"src":"11594:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11594:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":"When merkleized, beacon chain balances are combined into groups of 4 called a `balanceRoot`. The merkle\n proof here verifies that this validator's `balanceRoot` is included in the `balanceContainerRoot`\n - balanceContainerRoot\n |                            HEIGHT: BALANCE_TREE_HEIGHT\n -- balanceRoot","id":8142,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8138,"name":"validatorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"11625:14:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11642:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11625:18:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11617:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11617:7:30","typeDescriptions":{}}},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11594:50:30"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8146,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"11730:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceProof calldata"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11736:5:30","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7950,"src":"11730:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":8148,"name":"balanceContainerRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"11765:20:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8149,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"11809:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceProof calldata"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11815:11:30","memberName":"balanceRoot","nodeType":"MemberAccess","referencedDeclaration":7948,"src":"11809:17:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8151,"name":"balanceIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8135,"src":"11851:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8144,"name":"Merkle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"11676:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Merkle_$8659_$","typeString":"type(library Merkle)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11683:21:30","memberName":"verifyInclusionSha256","nodeType":"MemberAccess","referencedDeclaration":8480,"src":"11676:28:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes memory,bytes32,bytes32,uint256) view returns (bool)"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["11723:5:30","11759:4:30","11803:4:30","11844:5:30"],"names":["proof","root","leaf","index"],"nodeType":"FunctionCall","src":"11676:202:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426561636f6e436861696e50726f6f66732e76657269667956616c696461746f7242616c616e63653a20496e76616c6964206d65726b6c652070726f6f66","id":8153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11892:64:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc3017ac256ba88e24f82bdb86898305d083f02e03b52a00bbc846b9d673c43","typeString":"literal_string \"BeaconChainProofs.verifyValidatorBalance: Invalid merkle proof\""},"value":"BeaconChainProofs.verifyValidatorBalance: Invalid merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cc3017ac256ba88e24f82bdb86898305d083f02e03b52a00bbc846b9d673c43","typeString":"literal_string \"BeaconChainProofs.verifyValidatorBalance: Invalid merkle proof\""}],"id":8143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11655:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:311:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8155,"nodeType":"ExpressionStatement","src":"11655:311:30"},{"documentation":"Extract the individual validator's balance from the `balanceRoot`","expression":{"arguments":[{"expression":{"id":8157,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"12080:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceProof calldata"}},"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12086:11:30","memberName":"balanceRoot","nodeType":"MemberAccess","referencedDeclaration":7948,"src":"12080:17:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8159,"name":"validatorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"12099:14:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8156,"name":"getBalanceAtIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12062:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint40_$returns$_t_uint64_$","typeString":"function (bytes32,uint40) pure returns (uint64)"}},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12062:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8118,"id":8161,"nodeType":"Return","src":"12055:59:30"}]},"documentation":{"id":8107,"nodeType":"StructuredDocumentation","src":"10147:483:30","text":"@notice Verify a merkle proof of a validator's balance against the beacon state's `balanceContainerRoot`\n @param balanceContainerRoot the merkle root of all validators' current balances\n @param validatorIndex the index of the validator whose balance we are proving\n @param proof the validator's associated balance root and a merkle proof of inclusion under `balanceContainerRoot`\n @return validatorBalanceGwei the validator's current balance (in gwei)"},"id":8163,"implemented":true,"kind":"function","modifiers":[],"name":"verifyValidatorBalance","nameLocation":"10644:22:30","nodeType":"FunctionDefinition","parameters":{"id":8115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8109,"mutability":"mutable","name":"balanceContainerRoot","nameLocation":"10684:20:30","nodeType":"VariableDeclaration","scope":8163,"src":"10676:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10676:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8111,"mutability":"mutable","name":"validatorIndex","nameLocation":"10721:14:30","nodeType":"VariableDeclaration","scope":8163,"src":"10714:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8110,"name":"uint40","nodeType":"ElementaryTypeName","src":"10714:6:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":8114,"mutability":"mutable","name":"proof","nameLocation":"10767:5:30","nodeType":"VariableDeclaration","scope":8163,"src":"10745:27:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_calldata_ptr","typeString":"struct BeaconChainProofs.BalanceProof"},"typeName":{"id":8113,"nodeType":"UserDefinedTypeName","pathNode":{"id":8112,"name":"BalanceProof","nameLocations":["10745:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":7951,"src":"10745:12:30"},"referencedDeclaration":7951,"src":"10745:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceProof_$7951_storage_ptr","typeString":"struct BeaconChainProofs.BalanceProof"}},"visibility":"internal"}],"src":"10666:112:30"},"returnParameters":{"id":8118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8117,"mutability":"mutable","name":"validatorBalanceGwei","nameLocation":"10809:20:30","nodeType":"VariableDeclaration","scope":8163,"src":"10802:27:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8116,"name":"uint64","nodeType":"ElementaryTypeName","src":"10802:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10801:29:30"},"scope":8293,"src":"10635:1486:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8196,"nodeType":"Block","src":"12786:164:30","statements":[{"assignments":[8174],"declarations":[{"constant":false,"id":8174,"mutability":"mutable","name":"bitShiftAmount","nameLocation":"12804:14:30","nodeType":"VariableDeclaration","scope":8196,"src":"12796:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8173,"name":"uint256","nodeType":"ElementaryTypeName","src":"12796:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8181,"initialValue":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":8180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8175,"name":"validatorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"12822:14:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":8176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12839:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12822:18:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"id":8178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12821:20:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":8179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12844:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12821:25:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"12796:50:30"},{"expression":{"arguments":[{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8188,"name":"balanceRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"12910:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12902:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8186,"name":"uint256","nodeType":"ElementaryTypeName","src":"12902:7:30","typeDescriptions":{}}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12902:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8190,"name":"bitShiftAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"12926:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12902:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12901:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12893:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12893:7:30","typeDescriptions":{}}},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8182,"name":"Endian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"12863:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Endian_$8378_$","typeString":"type(library Endian)"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12870:22:30","memberName":"fromLittleEndianUint64","nodeType":"MemberAccess","referencedDeclaration":8377,"src":"12863:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint64_$","typeString":"function (bytes32) pure returns (uint64)"}},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12863:80:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8172,"id":8195,"nodeType":"Return","src":"12856:87:30"}]},"documentation":{"id":8164,"nodeType":"StructuredDocumentation","src":"12127:552:30","text":" @notice Parses a balanceRoot to get the uint64 balance of a validator.\n @dev During merkleization of the beacon state balance tree, four uint64 values are treated as a single\n leaf in the merkle tree. We use validatorIndex % 4 to determine which of the four uint64 values to\n extract from the balanceRoot.\n @param balanceRoot is the combination of 4 validator balances being proven for\n @param validatorIndex is the index of the validator being proven for\n @return The validator's balance, in Gwei"},"id":8197,"implemented":true,"kind":"function","modifiers":[],"name":"getBalanceAtIndex","nameLocation":"12693:17:30","nodeType":"FunctionDefinition","parameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8166,"mutability":"mutable","name":"balanceRoot","nameLocation":"12719:11:30","nodeType":"VariableDeclaration","scope":8197,"src":"12711:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12711:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8168,"mutability":"mutable","name":"validatorIndex","nameLocation":"12739:14:30","nodeType":"VariableDeclaration","scope":8197,"src":"12732:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8167,"name":"uint40","nodeType":"ElementaryTypeName","src":"12732:6:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"12710:44:30"},"returnParameters":{"id":8172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8197,"src":"12778:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8170,"name":"uint64","nodeType":"ElementaryTypeName","src":"12778:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12777:8:30"},"scope":8293,"src":"12684:266:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8210,"nodeType":"Block","src":"13495:63:30","statements":[{"expression":{"baseExpression":{"id":8206,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"13512:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8208,"indexExpression":{"id":8207,"name":"VALIDATOR_PUBKEY_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"13528:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13512:39:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8205,"id":8209,"nodeType":"Return","src":"13505:46:30"}]},"documentation":{"id":8198,"nodeType":"StructuredDocumentation","src":"13357:44:30","text":"@dev Retrieves a validator's pubkey hash"},"id":8211,"implemented":true,"kind":"function","modifiers":[],"name":"getPubkeyHash","nameLocation":"13415:13:30","nodeType":"FunctionDefinition","parameters":{"id":8202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8201,"mutability":"mutable","name":"validatorFields","nameLocation":"13446:15:30","nodeType":"VariableDeclaration","scope":8211,"src":"13429:32:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13429:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8200,"nodeType":"ArrayTypeName","src":"13429:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13428:34:30"},"returnParameters":{"id":8205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8211,"src":"13486:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13486:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13485:9:30"},"scope":8293,"src":"13406:152:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8224,"nodeType":"Block","src":"13724:79:30","statements":[{"expression":{"baseExpression":{"id":8220,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"13741:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8222,"indexExpression":{"id":8221,"name":"VALIDATOR_WITHDRAWAL_CREDENTIALS_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"13757:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13741:55:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8219,"id":8223,"nodeType":"Return","src":"13734:62:30"}]},"documentation":{"id":8212,"nodeType":"StructuredDocumentation","src":"13564:55:30","text":"@dev Retrieves a validator's withdrawal credentials"},"id":8225,"implemented":true,"kind":"function","modifiers":[],"name":"getWithdrawalCredentials","nameLocation":"13633:24:30","nodeType":"FunctionDefinition","parameters":{"id":8216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8215,"mutability":"mutable","name":"validatorFields","nameLocation":"13675:15:30","nodeType":"VariableDeclaration","scope":8225,"src":"13658:32:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13658:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8214,"nodeType":"ArrayTypeName","src":"13658:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13657:34:30"},"returnParameters":{"id":8219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8225,"src":"13715:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13715:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13714:9:30"},"scope":8293,"src":"13624:179:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8241,"nodeType":"Block","src":"13972:95:30","statements":[{"expression":{"arguments":[{"baseExpression":{"id":8236,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"14019:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8238,"indexExpression":{"id":8237,"name":"VALIDATOR_BALANCE_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"14035:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14019:40:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8234,"name":"Endian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"13989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Endian_$8378_$","typeString":"type(library Endian)"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13996:22:30","memberName":"fromLittleEndianUint64","nodeType":"MemberAccess","referencedDeclaration":8377,"src":"13989:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint64_$","typeString":"function (bytes32) pure returns (uint64)"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:71:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8233,"id":8240,"nodeType":"Return","src":"13982:78:30"}]},"documentation":{"id":8226,"nodeType":"StructuredDocumentation","src":"13809:60:30","text":"@dev Retrieves a validator's effective balance (in gwei)"},"id":8242,"implemented":true,"kind":"function","modifiers":[],"name":"getEffectiveBalanceGwei","nameLocation":"13883:23:30","nodeType":"FunctionDefinition","parameters":{"id":8230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"validatorFields","nameLocation":"13924:15:30","nodeType":"VariableDeclaration","scope":8242,"src":"13907:32:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13907:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8228,"nodeType":"ArrayTypeName","src":"13907:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13906:34:30"},"returnParameters":{"id":8233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8242,"src":"13964:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8231,"name":"uint64","nodeType":"ElementaryTypeName","src":"13964:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13963:8:30"},"scope":8293,"src":"13874:193:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8258,"nodeType":"Block","src":"14220:104:30","statements":[{"expression":{"arguments":[{"baseExpression":{"id":8253,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"14267:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8255,"indexExpression":{"id":8254,"name":"VALIDATOR_ACTIVATION_EPOCH_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"14283:32:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14267:49:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8251,"name":"Endian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"14237:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Endian_$8378_$","typeString":"type(library Endian)"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14244:22:30","memberName":"fromLittleEndianUint64","nodeType":"MemberAccess","referencedDeclaration":8377,"src":"14237:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint64_$","typeString":"function (bytes32) pure returns (uint64)"}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14237:80:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8250,"id":8257,"nodeType":"Return","src":"14230:87:30"}]},"documentation":{"id":8243,"nodeType":"StructuredDocumentation","src":"14073:49:30","text":"@dev Retrieves a validator's activation epoch"},"id":8259,"implemented":true,"kind":"function","modifiers":[],"name":"getActivationEpoch","nameLocation":"14136:18:30","nodeType":"FunctionDefinition","parameters":{"id":8247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8246,"mutability":"mutable","name":"validatorFields","nameLocation":"14172:15:30","nodeType":"VariableDeclaration","scope":8259,"src":"14155:32:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14155:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8245,"nodeType":"ArrayTypeName","src":"14155:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"14154:34:30"},"returnParameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8259,"src":"14212:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8248,"name":"uint64","nodeType":"ElementaryTypeName","src":"14212:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14211:8:30"},"scope":8293,"src":"14127:197:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8274,"nodeType":"Block","src":"14483:69:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8268,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"14500:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8270,"indexExpression":{"id":8269,"name":"VALIDATOR_SLASHED_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"14516:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14500:40:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14544:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14500:45:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8267,"id":8273,"nodeType":"Return","src":"14493:52:30"}]},"documentation":{"id":8260,"nodeType":"StructuredDocumentation","src":"14330:57:30","text":"@dev Retrieves true IFF a validator is marked slashed"},"id":8275,"implemented":true,"kind":"function","modifiers":[],"name":"isValidatorSlashed","nameLocation":"14401:18:30","nodeType":"FunctionDefinition","parameters":{"id":8264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8263,"mutability":"mutable","name":"validatorFields","nameLocation":"14437:15:30","nodeType":"VariableDeclaration","scope":8275,"src":"14420:32:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14420:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8262,"nodeType":"ArrayTypeName","src":"14420:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"14419:34:30"},"returnParameters":{"id":8267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8275,"src":"14477:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8265,"name":"bool","nodeType":"ElementaryTypeName","src":"14477:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14476:6:30"},"scope":8293,"src":"14392:160:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8291,"nodeType":"Block","src":"14693:98:30","statements":[{"expression":{"arguments":[{"baseExpression":{"id":8286,"name":"validatorFields","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"14740:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8288,"indexExpression":{"id":8287,"name":"VALIDATOR_EXIT_EPOCH_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"14756:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14740:43:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8284,"name":"Endian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"14710:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Endian_$8378_$","typeString":"type(library Endian)"}},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14717:22:30","memberName":"fromLittleEndianUint64","nodeType":"MemberAccess","referencedDeclaration":8377,"src":"14710:29:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint64_$","typeString":"function (bytes32) pure returns (uint64)"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14710:74:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8283,"id":8290,"nodeType":"Return","src":"14703:81:30"}]},"documentation":{"id":8276,"nodeType":"StructuredDocumentation","src":"14558:43:30","text":"@dev Retrieves a validator's exit epoch"},"id":8292,"implemented":true,"kind":"function","modifiers":[],"name":"getExitEpoch","nameLocation":"14615:12:30","nodeType":"FunctionDefinition","parameters":{"id":8280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8279,"mutability":"mutable","name":"validatorFields","nameLocation":"14645:15:30","nodeType":"VariableDeclaration","scope":8292,"src":"14628:32:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14628:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8278,"nodeType":"ArrayTypeName","src":"14628:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"14627:34:30"},"returnParameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8292,"src":"14685:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8281,"name":"uint64","nodeType":"ElementaryTypeName","src":"14685:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14684:8:30"},"scope":8293,"src":"14606:185:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8294,"src":"532:14261:30","usedErrors":[],"usedEvents":[]}],"src":"38:14756:30"},"id":30},"eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/libraries/Endian.sol","exportedSymbols":{"Endian":[8378]},"id":8379,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":8295,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"Endian","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8378,"linearizedBaseContracts":[8378],"name":"Endian","nameLocation":"70:6:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":8376,"nodeType":"Block","src":"588:536:31","statements":[{"expression":{"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8303,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"683:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8308,"name":"lenum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8298,"src":"702:5:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313932","id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:3:31","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"702:12:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"694:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8306,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:31","typeDescriptions":{}}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"694:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"687:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8304,"name":"uint64","nodeType":"ElementaryTypeName","src":"687:6:31","typeDescriptions":{}}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"687:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"683:33:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":8314,"nodeType":"ExpressionStatement","src":"683:33:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8315,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"773:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3536","id":8316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:2:31","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"src":"773:7:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"772:9:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830304646303030303030303030303030","id":8319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"799:18:31","typeDescriptions":{"typeIdentifier":"t_rational_71776119061217280_by_1","typeString":"int_const 71776119061217280"},"value":"0x00FF000000000000"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8320,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"820:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"799:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"798:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3430","id":8323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"826:2:31","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"src":"798:30:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"797:32:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:57:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830303030464630303030303030303030","id":8327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:18:31","typeDescriptions":{"typeIdentifier":"t_rational_280375465082880_by_1","typeString":"int_const 280375465082880"},"value":"0x0000FF0000000000"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8328,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"868:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"847:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"846:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3234","id":8331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"874:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"846:30:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"845:32:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:105:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830303030303046463030303030303030","id":8335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"895:18:31","typeDescriptions":{"typeIdentifier":"t_rational_1095216660480_by_1","typeString":"int_const 1095216660480"},"value":"0x000000FF00000000"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8336,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"916:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"895:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"894:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"922:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"894:29:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"893:31:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:152:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830303030303030304646303030303030","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"943:18:31","typeDescriptions":{"typeIdentifier":"t_rational_4278190080_by_1","typeString":"int_const 4278190080"},"value":"0x00000000FF000000"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8344,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"964:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"943:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"942:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":8347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"970:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"942:29:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:31:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:200:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830303030303030303030464630303030","id":8351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"991:18:31","typeDescriptions":{"typeIdentifier":"t_rational_16711680_by_1","typeString":"int_const 16711680"},"value":"0x0000000000FF0000"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8352,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"1012:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"991:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"990:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3234","id":8355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1018:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"990:30:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"989:32:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:249:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830303030303030303030303046463030","id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1039:18:31","typeDescriptions":{"typeIdentifier":"t_rational_65280_by_1","typeString":"int_const 65280"},"value":"0x000000000000FF00"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8360,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"1060:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1039:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1038:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3430","id":8363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1066:2:31","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"src":"1038:30:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1037:32:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:297:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307830303030303030303030303030304646","id":8367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:18:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000FF"},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8368,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"1108:1:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1087:22:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1086:24:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3536","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1114:2:31","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"src":"1086:30:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":8373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1085:32:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"772:345:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8302,"id":8375,"nodeType":"Return","src":"765:352:31"}]},"documentation":{"id":8296,"nodeType":"StructuredDocumentation","src":"83:420:31","text":" @notice Converts a little endian-formatted uint64 to a big endian-formatted uint64\n @param lenum little endian-formatted uint64 input, provided as 'bytes32' type\n @return n The big endian-formatted uint64\n @dev Note that the input is formatted as a 'bytes32' type (i.e. 256 bits), but it is immediately truncated to a uint64 (i.e. 64 bits)\n through a right-shift/shr operation."},"id":8377,"implemented":true,"kind":"function","modifiers":[],"name":"fromLittleEndianUint64","nameLocation":"517:22:31","nodeType":"FunctionDefinition","parameters":{"id":8299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8298,"mutability":"mutable","name":"lenum","nameLocation":"548:5:31","nodeType":"VariableDeclaration","scope":8377,"src":"540:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"539:15:31"},"returnParameters":{"id":8302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8301,"mutability":"mutable","name":"n","nameLocation":"585:1:31","nodeType":"VariableDeclaration","scope":8377,"src":"578:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8300,"name":"uint64","nodeType":"ElementaryTypeName","src":"578:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"577:10:31"},"scope":8378,"src":"508:616:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8379,"src":"62:1064:31","usedErrors":[],"usedEvents":[]}],"src":"37:1090:31"},"id":31},"eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"ast":{"absolutePath":"eigenlayer-contracts/src/contracts/libraries/Merkle.sol","exportedSymbols":{"Merkle":[8659]},"id":8660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8380,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"131:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"Merkle","contractDependencies":[],"contractKind":"library","documentation":{"id":8381,"nodeType":"StructuredDocumentation","src":"156:658:32","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":8659,"linearizedBaseContracts":[8659],"name":"Merkle","nameLocation":"823:6:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":8403,"nodeType":"Block","src":"1401:79:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8396,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"1446:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8397,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8388,"src":"1453:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8398,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"1459:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8395,"name":"processInclusionProofKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"1418:27:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,bytes32,uint256) pure returns (bytes32)"}},"id":8399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:47:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8400,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"1469:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1418:55:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8394,"id":8402,"nodeType":"Return","src":"1411:62:32"}]},"documentation":{"id":8382,"nodeType":"StructuredDocumentation","src":"836:399:32","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. The tree is built assuming `leaf` is\n the 0 indexed `index`'th leaf from the bottom left of the tree.\n Note this is for a Merkle tree using the keccak/sha3 hash function"},"id":8404,"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionKeccak","nameLocation":"1249:21:32","nodeType":"FunctionDefinition","parameters":{"id":8391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8384,"mutability":"mutable","name":"proof","nameLocation":"1293:5:32","nodeType":"VariableDeclaration","scope":8404,"src":"1280:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8383,"name":"bytes","nodeType":"ElementaryTypeName","src":"1280:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8386,"mutability":"mutable","name":"root","nameLocation":"1316:4:32","nodeType":"VariableDeclaration","scope":8404,"src":"1308:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1308:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8388,"mutability":"mutable","name":"leaf","nameLocation":"1338:4:32","nodeType":"VariableDeclaration","scope":8404,"src":"1330:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1330:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8390,"mutability":"mutable","name":"index","nameLocation":"1360:5:32","nodeType":"VariableDeclaration","scope":8404,"src":"1352:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1270:101:32"},"returnParameters":{"id":8394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8404,"src":"1395:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8392,"name":"bool","nodeType":"ElementaryTypeName","src":"1395:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1394:6:32"},"scope":8659,"src":"1240:240:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8456,"nodeType":"Block","src":"2145:990:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8417,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2163:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2169:6:32","memberName":"length","nodeType":"MemberAccess","src":"2163:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":8419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2163:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2184:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2163:22:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c652e70726f63657373496e636c7573696f6e50726f6f664b656363616b3a2070726f6f66206c656e6774682073686f756c642062652061206d756c7469706c65206f66203332","id":8423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:77:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0af15af7d16b4350d0150b5a38e7c07299b4ec4d388a633d7fbea1170c5a986","typeString":"literal_string \"Merkle.processInclusionProofKeccak: proof length should be a multiple of 32\""},"value":"Merkle.processInclusionProofKeccak: proof length should be a multiple of 32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f0af15af7d16b4350d0150b5a38e7c07299b4ec4d388a633d7fbea1170c5a986","typeString":"literal_string \"Merkle.processInclusionProofKeccak: proof length should be a multiple of 32\""}],"id":8416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2155:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2155:110:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8425,"nodeType":"ExpressionStatement","src":"2155:110:32"},{"assignments":[8427],"declarations":[{"constant":false,"id":8427,"mutability":"mutable","name":"computedHash","nameLocation":"2283:12:32","nodeType":"VariableDeclaration","scope":8456,"src":"2275:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2275:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8429,"initialValue":{"id":8428,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"2298:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2275:27:32"},{"body":{"id":8452,"nodeType":"Block","src":"2361:739:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8442,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"2379:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":8443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2379:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2392:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2379:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8450,"nodeType":"Block","src":"2745:345:32","statements":[{"AST":{"nativeSrc":"2854:222:32","nodeType":"YulBlock","src":"2854:222:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2883:4:32","nodeType":"YulLiteral","src":"2883:4:32","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"proof","nativeSrc":"2899:5:32","nodeType":"YulIdentifier","src":"2899:5:32"},{"name":"i","nativeSrc":"2906:1:32","nodeType":"YulIdentifier","src":"2906:1:32"}],"functionName":{"name":"add","nativeSrc":"2895:3:32","nodeType":"YulIdentifier","src":"2895:3:32"},"nativeSrc":"2895:13:32","nodeType":"YulFunctionCall","src":"2895:13:32"}],"functionName":{"name":"mload","nativeSrc":"2889:5:32","nodeType":"YulIdentifier","src":"2889:5:32"},"nativeSrc":"2889:20:32","nodeType":"YulFunctionCall","src":"2889:20:32"}],"functionName":{"name":"mstore","nativeSrc":"2876:6:32","nodeType":"YulIdentifier","src":"2876:6:32"},"nativeSrc":"2876:34:32","nodeType":"YulFunctionCall","src":"2876:34:32"},"nativeSrc":"2876:34:32","nodeType":"YulExpressionStatement","src":"2876:34:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2938:4:32","nodeType":"YulLiteral","src":"2938:4:32","type":"","value":"0x20"},{"name":"computedHash","nativeSrc":"2944:12:32","nodeType":"YulIdentifier","src":"2944:12:32"}],"functionName":{"name":"mstore","nativeSrc":"2931:6:32","nodeType":"YulIdentifier","src":"2931:6:32"},"nativeSrc":"2931:26:32","nodeType":"YulFunctionCall","src":"2931:26:32"},"nativeSrc":"2931:26:32","nodeType":"YulExpressionStatement","src":"2931:26:32"},{"nativeSrc":"2978:37:32","nodeType":"YulAssignment","src":"2978:37:32","value":{"arguments":[{"kind":"number","nativeSrc":"3004:4:32","nodeType":"YulLiteral","src":"3004:4:32","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3010:4:32","nodeType":"YulLiteral","src":"3010:4:32","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2994:9:32","nodeType":"YulIdentifier","src":"2994:9:32"},"nativeSrc":"2994:21:32","nodeType":"YulFunctionCall","src":"2994:21:32"},"variableNames":[{"name":"computedHash","nativeSrc":"2978:12:32","nodeType":"YulIdentifier","src":"2978:12:32"}]},{"nativeSrc":"3036:22:32","nodeType":"YulAssignment","src":"3036:22:32","value":{"arguments":[{"name":"index","nativeSrc":"3049:5:32","nodeType":"YulIdentifier","src":"3049:5:32"},{"kind":"number","nativeSrc":"3056:1:32","nodeType":"YulLiteral","src":"3056:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"3045:3:32","nodeType":"YulIdentifier","src":"3045:3:32"},"nativeSrc":"3045:13:32","nodeType":"YulFunctionCall","src":"3045:13:32"},"variableNames":[{"name":"index","nativeSrc":"3036:5:32","nodeType":"YulIdentifier","src":"3036:5:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8427,"isOffset":false,"isSlot":false,"src":"2944:12:32","valueSize":1},{"declaration":8427,"isOffset":false,"isSlot":false,"src":"2978:12:32","valueSize":1},{"declaration":8431,"isOffset":false,"isSlot":false,"src":"2906:1:32","valueSize":1},{"declaration":8411,"isOffset":false,"isSlot":false,"src":"3036:5:32","valueSize":1},{"declaration":8411,"isOffset":false,"isSlot":false,"src":"3049:5:32","valueSize":1},{"declaration":8407,"isOffset":false,"isSlot":false,"src":"2899:5:32","valueSize":1}],"id":8449,"nodeType":"InlineAssembly","src":"2845:231:32"}]},"id":8451,"nodeType":"IfStatement","src":"2375:715:32","trueBody":{"id":8448,"nodeType":"Block","src":"2395:344:32","statements":[{"AST":{"nativeSrc":"2503:222:32","nodeType":"YulBlock","src":"2503:222:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2532:4:32","nodeType":"YulLiteral","src":"2532:4:32","type":"","value":"0x00"},{"name":"computedHash","nativeSrc":"2538:12:32","nodeType":"YulIdentifier","src":"2538:12:32"}],"functionName":{"name":"mstore","nativeSrc":"2525:6:32","nodeType":"YulIdentifier","src":"2525:6:32"},"nativeSrc":"2525:26:32","nodeType":"YulFunctionCall","src":"2525:26:32"},"nativeSrc":"2525:26:32","nodeType":"YulExpressionStatement","src":"2525:26:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2579:4:32","nodeType":"YulLiteral","src":"2579:4:32","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"proof","nativeSrc":"2595:5:32","nodeType":"YulIdentifier","src":"2595:5:32"},{"name":"i","nativeSrc":"2602:1:32","nodeType":"YulIdentifier","src":"2602:1:32"}],"functionName":{"name":"add","nativeSrc":"2591:3:32","nodeType":"YulIdentifier","src":"2591:3:32"},"nativeSrc":"2591:13:32","nodeType":"YulFunctionCall","src":"2591:13:32"}],"functionName":{"name":"mload","nativeSrc":"2585:5:32","nodeType":"YulIdentifier","src":"2585:5:32"},"nativeSrc":"2585:20:32","nodeType":"YulFunctionCall","src":"2585:20:32"}],"functionName":{"name":"mstore","nativeSrc":"2572:6:32","nodeType":"YulIdentifier","src":"2572:6:32"},"nativeSrc":"2572:34:32","nodeType":"YulFunctionCall","src":"2572:34:32"},"nativeSrc":"2572:34:32","nodeType":"YulExpressionStatement","src":"2572:34:32"},{"nativeSrc":"2627:37:32","nodeType":"YulAssignment","src":"2627:37:32","value":{"arguments":[{"kind":"number","nativeSrc":"2653:4:32","nodeType":"YulLiteral","src":"2653:4:32","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2659:4:32","nodeType":"YulLiteral","src":"2659:4:32","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2643:9:32","nodeType":"YulIdentifier","src":"2643:9:32"},"nativeSrc":"2643:21:32","nodeType":"YulFunctionCall","src":"2643:21:32"},"variableNames":[{"name":"computedHash","nativeSrc":"2627:12:32","nodeType":"YulIdentifier","src":"2627:12:32"}]},{"nativeSrc":"2685:22:32","nodeType":"YulAssignment","src":"2685:22:32","value":{"arguments":[{"name":"index","nativeSrc":"2698:5:32","nodeType":"YulIdentifier","src":"2698:5:32"},{"kind":"number","nativeSrc":"2705:1:32","nodeType":"YulLiteral","src":"2705:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"2694:3:32","nodeType":"YulIdentifier","src":"2694:3:32"},"nativeSrc":"2694:13:32","nodeType":"YulFunctionCall","src":"2694:13:32"},"variableNames":[{"name":"index","nativeSrc":"2685:5:32","nodeType":"YulIdentifier","src":"2685:5:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8427,"isOffset":false,"isSlot":false,"src":"2538:12:32","valueSize":1},{"declaration":8427,"isOffset":false,"isSlot":false,"src":"2627:12:32","valueSize":1},{"declaration":8431,"isOffset":false,"isSlot":false,"src":"2602:1:32","valueSize":1},{"declaration":8411,"isOffset":false,"isSlot":false,"src":"2685:5:32","valueSize":1},{"declaration":8411,"isOffset":false,"isSlot":false,"src":"2698:5:32","valueSize":1},{"declaration":8407,"isOffset":false,"isSlot":false,"src":"2595:5:32","valueSize":1}],"id":8447,"nodeType":"InlineAssembly","src":"2494:231:32"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"2333:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8435,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"2338:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:6:32","memberName":"length","nodeType":"MemberAccess","src":"2338:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2333:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8453,"initializationExpression":{"assignments":[8431],"declarations":[{"constant":false,"id":8431,"mutability":"mutable","name":"i","nameLocation":"2325:1:32","nodeType":"VariableDeclaration","scope":8453,"src":"2317:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8433,"initialValue":{"hexValue":"3332","id":8432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2329:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"VariableDeclarationStatement","src":"2317:14:32"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"2352:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2357:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2352:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8441,"nodeType":"ExpressionStatement","src":"2352:7:32"},"nodeType":"ForStatement","src":"2312:788:32"},{"expression":{"id":8454,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"3116:12:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8415,"id":8455,"nodeType":"Return","src":"3109:19:32"}]},"documentation":{"id":8405,"nodeType":"StructuredDocumentation","src":"1486:506:32","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. The tree is built assuming `leaf` is\n the 0 indexed `index`'th leaf from the bottom left of the tree.\n @dev If the proof length is 0 then the leaf hash is returned.\n _Available since v4.4._\n Note this is for a Merkle tree using the keccak/sha3 hash function"},"id":8457,"implemented":true,"kind":"function","modifiers":[],"name":"processInclusionProofKeccak","nameLocation":"2006:27:32","nodeType":"FunctionDefinition","parameters":{"id":8412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8407,"mutability":"mutable","name":"proof","nameLocation":"2056:5:32","nodeType":"VariableDeclaration","scope":8457,"src":"2043:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8406,"name":"bytes","nodeType":"ElementaryTypeName","src":"2043:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8409,"mutability":"mutable","name":"leaf","nameLocation":"2079:4:32","nodeType":"VariableDeclaration","scope":8457,"src":"2071:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2071:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8411,"mutability":"mutable","name":"index","nameLocation":"2101:5:32","nodeType":"VariableDeclaration","scope":8457,"src":"2093:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2093:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2033:79:32"},"returnParameters":{"id":8415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8457,"src":"2136:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2136:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2135:9:32"},"scope":8659,"src":"1997:1138:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8479,"nodeType":"Block","src":"3701:79:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8472,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"3746:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8473,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"3753:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8474,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8466,"src":"3759:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8471,"name":"processInclusionProofSha256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"3718:27:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,bytes32,uint256) view returns (bytes32)"}},"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:47:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8476,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3769:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3718:55:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8470,"id":8478,"nodeType":"Return","src":"3711:62:32"}]},"documentation":{"id":8458,"nodeType":"StructuredDocumentation","src":"3141:394:32","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. The tree is built assuming `leaf` is\n the 0 indexed `index`'th leaf from the bottom left of the tree.\n Note this is for a Merkle tree using the sha256 hash function"},"id":8480,"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionSha256","nameLocation":"3549:21:32","nodeType":"FunctionDefinition","parameters":{"id":8467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8460,"mutability":"mutable","name":"proof","nameLocation":"3593:5:32","nodeType":"VariableDeclaration","scope":8480,"src":"3580:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8459,"name":"bytes","nodeType":"ElementaryTypeName","src":"3580:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8462,"mutability":"mutable","name":"root","nameLocation":"3616:4:32","nodeType":"VariableDeclaration","scope":8480,"src":"3608:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3608:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8464,"mutability":"mutable","name":"leaf","nameLocation":"3638:4:32","nodeType":"VariableDeclaration","scope":8480,"src":"3630:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8466,"mutability":"mutable","name":"index","nameLocation":"3660:5:32","nodeType":"VariableDeclaration","scope":8480,"src":"3652:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3570:101:32"},"returnParameters":{"id":8470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8480,"src":"3695:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8468,"name":"bool","nodeType":"ElementaryTypeName","src":"3695:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3694:6:32"},"scope":8659,"src":"3540:240:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8544,"nodeType":"Block","src":"4371:1191:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8493,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"4402:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4408:6:32","memberName":"length","nodeType":"MemberAccess","src":"4402:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4418:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4402:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8497,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"4423:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4429:6:32","memberName":"length","nodeType":"MemberAccess","src":"4423:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4438:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4423:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4444:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4423:22:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4402:43:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c652e70726f63657373496e636c7573696f6e50726f6f665368613235363a2070726f6f66206c656e6774682073686f756c642062652061206e6f6e2d7a65726f206d756c7469706c65206f66203332","id":8504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:86:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_f754320d4b565c6d772fc60d73788b56c2f692724fd87c69b4f0657870479f2f","typeString":"literal_string \"Merkle.processInclusionProofSha256: proof length should be a non-zero multiple of 32\""},"value":"Merkle.processInclusionProofSha256: proof length should be a non-zero multiple of 32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f754320d4b565c6d772fc60d73788b56c2f692724fd87c69b4f0657870479f2f","typeString":"literal_string \"Merkle.processInclusionProofSha256: proof length should be a non-zero multiple of 32\""}],"id":8492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4381:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:174:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8506,"nodeType":"ExpressionStatement","src":"4381:174:32"},{"assignments":[8512],"declarations":[{"constant":false,"id":8512,"mutability":"mutable","name":"computedHash","nameLocation":"4583:12:32","nodeType":"VariableDeclaration","scope":8544,"src":"4565:30:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$1_memory_ptr","typeString":"bytes32[1]"},"typeName":{"baseType":{"id":8510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4565:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8511,"length":{"hexValue":"31","id":8509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4573:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"4565:10:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$1_storage_ptr","typeString":"bytes32[1]"}},"visibility":"internal"}],"id":8515,"initialValue":{"components":[{"id":8513,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"4599:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8514,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4598:6:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$1_memory_ptr","typeString":"bytes32[1] memory"}},"nodeType":"VariableDeclarationStatement","src":"4565:39:32"},{"body":{"id":8538,"nodeType":"Block","src":"4663:861:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8528,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"4681:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":8529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4689:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4681:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4694:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8536,"nodeType":"Block","src":"5108:406:32","statements":[{"AST":{"nativeSrc":"5217:283:32","nodeType":"YulBlock","src":"5217:283:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5246:4:32","nodeType":"YulLiteral","src":"5246:4:32","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"proof","nativeSrc":"5262:5:32","nodeType":"YulIdentifier","src":"5262:5:32"},{"name":"i","nativeSrc":"5269:1:32","nodeType":"YulIdentifier","src":"5269:1:32"}],"functionName":{"name":"add","nativeSrc":"5258:3:32","nodeType":"YulIdentifier","src":"5258:3:32"},"nativeSrc":"5258:13:32","nodeType":"YulFunctionCall","src":"5258:13:32"}],"functionName":{"name":"mload","nativeSrc":"5252:5:32","nodeType":"YulIdentifier","src":"5252:5:32"},"nativeSrc":"5252:20:32","nodeType":"YulFunctionCall","src":"5252:20:32"}],"functionName":{"name":"mstore","nativeSrc":"5239:6:32","nodeType":"YulIdentifier","src":"5239:6:32"},"nativeSrc":"5239:34:32","nodeType":"YulFunctionCall","src":"5239:34:32"},"nativeSrc":"5239:34:32","nodeType":"YulExpressionStatement","src":"5239:34:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5301:4:32","nodeType":"YulLiteral","src":"5301:4:32","type":"","value":"0x20"},{"arguments":[{"name":"computedHash","nativeSrc":"5313:12:32","nodeType":"YulIdentifier","src":"5313:12:32"}],"functionName":{"name":"mload","nativeSrc":"5307:5:32","nodeType":"YulIdentifier","src":"5307:5:32"},"nativeSrc":"5307:19:32","nodeType":"YulFunctionCall","src":"5307:19:32"}],"functionName":{"name":"mstore","nativeSrc":"5294:6:32","nodeType":"YulIdentifier","src":"5294:6:32"},"nativeSrc":"5294:33:32","nodeType":"YulFunctionCall","src":"5294:33:32"},"nativeSrc":"5294:33:32","nodeType":"YulExpressionStatement","src":"5294:33:32"},{"body":{"nativeSrc":"5423:16:32","nodeType":"YulBlock","src":"5423:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5432:1:32","nodeType":"YulLiteral","src":"5432:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5435:1:32","nodeType":"YulLiteral","src":"5435:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5425:6:32","nodeType":"YulIdentifier","src":"5425:6:32"},"nativeSrc":"5425:12:32","nodeType":"YulFunctionCall","src":"5425:12:32"},"nativeSrc":"5425:12:32","nodeType":"YulExpressionStatement","src":"5425:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"5373:3:32","nodeType":"YulIdentifier","src":"5373:3:32"},"nativeSrc":"5373:5:32","nodeType":"YulFunctionCall","src":"5373:5:32"},{"kind":"number","nativeSrc":"5380:4:32","nodeType":"YulLiteral","src":"5380:4:32","type":"","value":"2000"}],"functionName":{"name":"sub","nativeSrc":"5369:3:32","nodeType":"YulIdentifier","src":"5369:3:32"},"nativeSrc":"5369:16:32","nodeType":"YulFunctionCall","src":"5369:16:32"},{"kind":"number","nativeSrc":"5387:1:32","nodeType":"YulLiteral","src":"5387:1:32","type":"","value":"2"},{"kind":"number","nativeSrc":"5390:4:32","nodeType":"YulLiteral","src":"5390:4:32","type":"","value":"0x00"},{"kind":"number","nativeSrc":"5396:4:32","nodeType":"YulLiteral","src":"5396:4:32","type":"","value":"0x40"},{"name":"computedHash","nativeSrc":"5402:12:32","nodeType":"YulIdentifier","src":"5402:12:32"},{"kind":"number","nativeSrc":"5416:4:32","nodeType":"YulLiteral","src":"5416:4:32","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"5358:10:32","nodeType":"YulIdentifier","src":"5358:10:32"},"nativeSrc":"5358:63:32","nodeType":"YulFunctionCall","src":"5358:63:32"}],"functionName":{"name":"iszero","nativeSrc":"5351:6:32","nodeType":"YulIdentifier","src":"5351:6:32"},"nativeSrc":"5351:71:32","nodeType":"YulFunctionCall","src":"5351:71:32"},"nativeSrc":"5348:91:32","nodeType":"YulIf","src":"5348:91:32"},{"nativeSrc":"5460:22:32","nodeType":"YulAssignment","src":"5460:22:32","value":{"arguments":[{"name":"index","nativeSrc":"5473:5:32","nodeType":"YulIdentifier","src":"5473:5:32"},{"kind":"number","nativeSrc":"5480:1:32","nodeType":"YulLiteral","src":"5480:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5469:3:32","nodeType":"YulIdentifier","src":"5469:3:32"},"nativeSrc":"5469:13:32","nodeType":"YulFunctionCall","src":"5469:13:32"},"variableNames":[{"name":"index","nativeSrc":"5460:5:32","nodeType":"YulIdentifier","src":"5460:5:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8512,"isOffset":false,"isSlot":false,"src":"5313:12:32","valueSize":1},{"declaration":8512,"isOffset":false,"isSlot":false,"src":"5402:12:32","valueSize":1},{"declaration":8517,"isOffset":false,"isSlot":false,"src":"5269:1:32","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"5460:5:32","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"5473:5:32","valueSize":1},{"declaration":8483,"isOffset":false,"isSlot":false,"src":"5262:5:32","valueSize":1}],"id":8535,"nodeType":"InlineAssembly","src":"5208:292:32"}]},"id":8537,"nodeType":"IfStatement","src":"4677:837:32","trueBody":{"id":8534,"nodeType":"Block","src":"4697:405:32","statements":[{"AST":{"nativeSrc":"4805:283:32","nodeType":"YulBlock","src":"4805:283:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4834:4:32","nodeType":"YulLiteral","src":"4834:4:32","type":"","value":"0x00"},{"arguments":[{"name":"computedHash","nativeSrc":"4846:12:32","nodeType":"YulIdentifier","src":"4846:12:32"}],"functionName":{"name":"mload","nativeSrc":"4840:5:32","nodeType":"YulIdentifier","src":"4840:5:32"},"nativeSrc":"4840:19:32","nodeType":"YulFunctionCall","src":"4840:19:32"}],"functionName":{"name":"mstore","nativeSrc":"4827:6:32","nodeType":"YulIdentifier","src":"4827:6:32"},"nativeSrc":"4827:33:32","nodeType":"YulFunctionCall","src":"4827:33:32"},"nativeSrc":"4827:33:32","nodeType":"YulExpressionStatement","src":"4827:33:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4888:4:32","nodeType":"YulLiteral","src":"4888:4:32","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"proof","nativeSrc":"4904:5:32","nodeType":"YulIdentifier","src":"4904:5:32"},{"name":"i","nativeSrc":"4911:1:32","nodeType":"YulIdentifier","src":"4911:1:32"}],"functionName":{"name":"add","nativeSrc":"4900:3:32","nodeType":"YulIdentifier","src":"4900:3:32"},"nativeSrc":"4900:13:32","nodeType":"YulFunctionCall","src":"4900:13:32"}],"functionName":{"name":"mload","nativeSrc":"4894:5:32","nodeType":"YulIdentifier","src":"4894:5:32"},"nativeSrc":"4894:20:32","nodeType":"YulFunctionCall","src":"4894:20:32"}],"functionName":{"name":"mstore","nativeSrc":"4881:6:32","nodeType":"YulIdentifier","src":"4881:6:32"},"nativeSrc":"4881:34:32","nodeType":"YulFunctionCall","src":"4881:34:32"},"nativeSrc":"4881:34:32","nodeType":"YulExpressionStatement","src":"4881:34:32"},{"body":{"nativeSrc":"5011:16:32","nodeType":"YulBlock","src":"5011:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5020:1:32","nodeType":"YulLiteral","src":"5020:1:32","type":"","value":"0"},{"kind":"number","nativeSrc":"5023:1:32","nodeType":"YulLiteral","src":"5023:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5013:6:32","nodeType":"YulIdentifier","src":"5013:6:32"},"nativeSrc":"5013:12:32","nodeType":"YulFunctionCall","src":"5013:12:32"},"nativeSrc":"5013:12:32","nodeType":"YulExpressionStatement","src":"5013:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"4961:3:32","nodeType":"YulIdentifier","src":"4961:3:32"},"nativeSrc":"4961:5:32","nodeType":"YulFunctionCall","src":"4961:5:32"},{"kind":"number","nativeSrc":"4968:4:32","nodeType":"YulLiteral","src":"4968:4:32","type":"","value":"2000"}],"functionName":{"name":"sub","nativeSrc":"4957:3:32","nodeType":"YulIdentifier","src":"4957:3:32"},"nativeSrc":"4957:16:32","nodeType":"YulFunctionCall","src":"4957:16:32"},{"kind":"number","nativeSrc":"4975:1:32","nodeType":"YulLiteral","src":"4975:1:32","type":"","value":"2"},{"kind":"number","nativeSrc":"4978:4:32","nodeType":"YulLiteral","src":"4978:4:32","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4984:4:32","nodeType":"YulLiteral","src":"4984:4:32","type":"","value":"0x40"},{"name":"computedHash","nativeSrc":"4990:12:32","nodeType":"YulIdentifier","src":"4990:12:32"},{"kind":"number","nativeSrc":"5004:4:32","nodeType":"YulLiteral","src":"5004:4:32","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"4946:10:32","nodeType":"YulIdentifier","src":"4946:10:32"},"nativeSrc":"4946:63:32","nodeType":"YulFunctionCall","src":"4946:63:32"}],"functionName":{"name":"iszero","nativeSrc":"4939:6:32","nodeType":"YulIdentifier","src":"4939:6:32"},"nativeSrc":"4939:71:32","nodeType":"YulFunctionCall","src":"4939:71:32"},"nativeSrc":"4936:91:32","nodeType":"YulIf","src":"4936:91:32"},{"nativeSrc":"5048:22:32","nodeType":"YulAssignment","src":"5048:22:32","value":{"arguments":[{"name":"index","nativeSrc":"5061:5:32","nodeType":"YulIdentifier","src":"5061:5:32"},{"kind":"number","nativeSrc":"5068:1:32","nodeType":"YulLiteral","src":"5068:1:32","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5057:3:32","nodeType":"YulIdentifier","src":"5057:3:32"},"nativeSrc":"5057:13:32","nodeType":"YulFunctionCall","src":"5057:13:32"},"variableNames":[{"name":"index","nativeSrc":"5048:5:32","nodeType":"YulIdentifier","src":"5048:5:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8512,"isOffset":false,"isSlot":false,"src":"4846:12:32","valueSize":1},{"declaration":8512,"isOffset":false,"isSlot":false,"src":"4990:12:32","valueSize":1},{"declaration":8517,"isOffset":false,"isSlot":false,"src":"4911:1:32","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"5048:5:32","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"5061:5:32","valueSize":1},{"declaration":8483,"isOffset":false,"isSlot":false,"src":"4904:5:32","valueSize":1}],"id":8533,"nodeType":"InlineAssembly","src":"4796:292:32"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"4635:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8521,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"4640:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4646:6:32","memberName":"length","nodeType":"MemberAccess","src":"4640:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4635:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8539,"initializationExpression":{"assignments":[8517],"declarations":[{"constant":false,"id":8517,"mutability":"mutable","name":"i","nameLocation":"4627:1:32","nodeType":"VariableDeclaration","scope":8539,"src":"4619:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8516,"name":"uint256","nodeType":"ElementaryTypeName","src":"4619:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8519,"initialValue":{"hexValue":"3332","id":8518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4631:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"VariableDeclarationStatement","src":"4619:14:32"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8524,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"4654:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":8525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4659:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4654:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8527,"nodeType":"ExpressionStatement","src":"4654:7:32"},"nodeType":"ForStatement","src":"4614:910:32"},{"expression":{"baseExpression":{"id":8540,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"5540:12:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$1_memory_ptr","typeString":"bytes32[1] memory"}},"id":8542,"indexExpression":{"hexValue":"30","id":8541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5553:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5540:15:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8491,"id":8543,"nodeType":"Return","src":"5533:22:32"}]},"documentation":{"id":8481,"nodeType":"StructuredDocumentation","src":"3786:432:32","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. The tree is built assuming `leaf` is\n the 0 indexed `index`'th leaf from the bottom left of the tree.\n _Available since v4.4._\n Note this is for a Merkle tree using the sha256 hash function"},"id":8545,"implemented":true,"kind":"function","modifiers":[],"name":"processInclusionProofSha256","nameLocation":"4232:27:32","nodeType":"FunctionDefinition","parameters":{"id":8488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8483,"mutability":"mutable","name":"proof","nameLocation":"4282:5:32","nodeType":"VariableDeclaration","scope":8545,"src":"4269:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8482,"name":"bytes","nodeType":"ElementaryTypeName","src":"4269:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8485,"mutability":"mutable","name":"leaf","nameLocation":"4305:4:32","nodeType":"VariableDeclaration","scope":8545,"src":"4297:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4297:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8487,"mutability":"mutable","name":"index","nameLocation":"4327:5:32","nodeType":"VariableDeclaration","scope":8545,"src":"4319:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4319:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4259:79:32"},"returnParameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8545,"src":"4362:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4362:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4361:9:32"},"scope":8659,"src":"4223:1339:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8657,"nodeType":"Block","src":"6046:1072:32","statements":[{"assignments":[8555],"declarations":[{"constant":false,"id":8555,"mutability":"mutable","name":"numNodesInLayer","nameLocation":"6133:15:32","nodeType":"VariableDeclaration","scope":8657,"src":"6125:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6125:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8556,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"6151:6:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6158:6:32","memberName":"length","nodeType":"MemberAccess","src":"6151:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":8558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6167:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6151:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6125:43:32"},{"assignments":[8565],"declarations":[{"constant":false,"id":8565,"mutability":"mutable","name":"layer","nameLocation":"6248:5:32","nodeType":"VariableDeclaration","scope":8657,"src":"6231:22:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6231:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8564,"nodeType":"ArrayTypeName","src":"6231:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":8571,"initialValue":{"arguments":[{"id":8569,"name":"numNodesInLayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6270:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6256:13:32","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":8566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6260:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8567,"nodeType":"ArrayTypeName","src":"6260:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6256:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6231:55:32"},{"body":{"id":8604,"nodeType":"Block","src":"6406:94:32","statements":[{"expression":{"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8582,"name":"layer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"6420:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8584,"indexExpression":{"id":8583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"6426:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6420:8:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":8588,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"6455:6:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8592,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6462:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8590,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"6466:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6462:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6455:13:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":8593,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"6470:6:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8599,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6477:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"6481:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6477:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6485:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6477:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:17:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8586,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6438:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6442:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"6438:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:50:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8585,"name":"sha256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-22,"src":"6431:6:32","typeDescriptions":{"typeIdentifier":"t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6431:58:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6420:69:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8603,"nodeType":"ExpressionStatement","src":"6420:69:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"6380:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8577,"name":"numNodesInLayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6384:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8605,"initializationExpression":{"assignments":[8573],"declarations":[{"constant":false,"id":8573,"mutability":"mutable","name":"i","nameLocation":"6373:1:32","nodeType":"VariableDeclaration","scope":8605,"src":"6365:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6365:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8575,"initialValue":{"hexValue":"30","id":8574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6377:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6365:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6401:3:32","subExpression":{"id":8579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8573,"src":"6401:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8581,"nodeType":"ExpressionStatement","src":"6401:3:32"},"nodeType":"ForStatement","src":"6360:140:32"},{"expression":{"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8606,"name":"numNodesInLayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6563:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":8607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6582:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6563:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8609,"nodeType":"ExpressionStatement","src":"6563:20:32"},{"body":{"id":8651,"nodeType":"Block","src":"6667:370:32","statements":[{"body":{"id":8645,"nodeType":"Block","src":"6835:100:32","statements":[{"expression":{"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8623,"name":"layer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"6853:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8625,"indexExpression":{"id":8624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"6859:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6853:8:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":8629,"name":"layer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"6888:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8633,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6894:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"6898:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6894:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6888:12:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":8634,"name":"layer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"6902:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8640,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6908:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"6912:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6908:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6916:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6908:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6902:16:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8627,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6871:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6875:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"6871:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:48:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8626,"name":"sha256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-22,"src":"6864:6:32","typeDescriptions":{"typeIdentifier":"t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:56:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6853:67:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8644,"nodeType":"ExpressionStatement","src":"6853:67:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"6809:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8618,"name":"numNodesInLayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6813:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8646,"initializationExpression":{"assignments":[8614],"declarations":[{"constant":false,"id":8614,"mutability":"mutable","name":"i","nameLocation":"6802:1:32","nodeType":"VariableDeclaration","scope":8646,"src":"6794:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6794:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8616,"initialValue":{"hexValue":"30","id":8615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6806:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6794:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6830:3:32","subExpression":{"id":8620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"6830:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8622,"nodeType":"ExpressionStatement","src":"6830:3:32"},"nodeType":"ForStatement","src":"6789:146:32"},{"expression":{"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8647,"name":"numNodesInLayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"7006:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":8648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7025:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7006:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8650,"nodeType":"ExpressionStatement","src":"7006:20:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8610,"name":"numNodesInLayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"6645:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6664:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6645:20:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8652,"nodeType":"WhileStatement","src":"6638:399:32"},{"expression":{"baseExpression":{"id":8653,"name":"layer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"7103:5:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8655,"indexExpression":{"hexValue":"30","id":8654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7109:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7103:8:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8553,"id":8656,"nodeType":"Return","src":"7096:15:32"}]},"documentation":{"id":8546,"nodeType":"StructuredDocumentation","src":"5568:391:32","text":" @notice this function returns the merkle root of a tree created from a set of leaves using sha256 as its hash function\n  @param leaves the leaves of the merkle tree\n  @return The computed Merkle root of the tree.\n  @dev A pre-condition to this function is that leaves.length is a power of two.  If not, the function will merkleize the inputs incorrectly."},"id":8658,"implemented":true,"kind":"function","modifiers":[],"name":"merkleizeSha256","nameLocation":"5973:15:32","nodeType":"FunctionDefinition","parameters":{"id":8550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8549,"mutability":"mutable","name":"leaves","nameLocation":"6006:6:32","nodeType":"VariableDeclaration","scope":8658,"src":"5989:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5989:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8548,"nodeType":"ArrayTypeName","src":"5989:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5988:25:32"},"returnParameters":{"id":8553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8658,"src":"6037:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6037:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6036:9:32"},"scope":8659,"src":"5964:1154:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8660,"src":"815:6305:32","usedErrors":[],"usedEvents":[]}],"src":"131:6990:32"},"id":32}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204c19e11f41923f40bc1360b028700e28bddb2758b676e83b38d14e58f90f7c4164736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C NOT 0xE1 0x1F COINBASE SWAP3 EXTCODEHASH BLOCKHASH 0xBC SGT PUSH1 0xB0 0x28 PUSH17 0xE28BDDB2758B676E83B38D14E58F90F7C COINBASE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"449:6273:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204c19e11f41923f40bc1360b028700e28bddb2758b676e83b38d14e58f90f7c4164736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C NOT 0xE1 0x1F COINBASE SWAP3 EXTCODEHASH BLOCKHASH 0xBC SGT PUSH1 0xB0 0x28 PUSH17 0xE28BDDB2758B676E83B38D14E58F90F7C COINBASE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"449:6273:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200c50a747a02f1e5c85f6957486246cd0722921d618e2ce68d85af92ed8ffb47564736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC POP 0xA7 SELFBALANCE LOG0 0x2F 0x1E TLOAD DUP6 0xF6 SWAP6 PUSH21 0x86246CD0722921D618E2CE68D85AF92ED8FFB47564 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"751:5018:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200c50a747a02f1e5c85f6957486246cd0722921d618e2ce68d85af92ed8ffb47564736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC POP 0xA7 SELFBALANCE LOG0 0x2F 0x1E TLOAD DUP6 0xF6 SWAP6 PUSH21 0x86246CD0722921D618E2CE68D85AF92ED8FFB47564 PUSH20 0x6F6C634300081800330000000000000000000000 ","sourceMap":"751:5018:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204bfc03665d88e9d0690156beb6cea99fbae6627fa352a2772598bc504d08d77a64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xFC SUB PUSH7 0x5D88E9D0690156 0xBE 0xB6 0xCE 0xA9 SWAP16 0xBA 0xE6 PUSH3 0x7FA352 LOG2 PUSH24 0x2598BC504D08D77A64736F6C634300081800330000000000 ","sourceMap":"195:6066:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204bfc03665d88e9d0690156beb6cea99fbae6627fa352a2772598bc504d08d77a64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xFC SUB PUSH7 0x5D88E9D0690156 0xBE 0xB6 0xCE 0xA9 SWAP16 0xBA 0xE6 PUSH3 0x7FA352 LOG2 PUSH24 0x2598BC504D08D77A64736F6C634300081800330000000000 ","sourceMap":"195:6066:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220886e72d7a5e011eb43eb1ef8c4f631862845b509b354af8408d2168c0866846764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH15 0x72D7A5E011EB43EB1EF8C4F6318628 GASLIMIT 0xB5 MULMOD 0xB3 SLOAD 0xAF DUP5 ADDMOD 0xD2 AND DUP13 ADDMOD PUSH7 0x846764736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220886e72d7a5e011eb43eb1ef8c4f631862845b509b354af8408d2168c0866846764736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH15 0x72D7A5E011EB43EB1EF8C4F6318628 GASLIMIT 0xB5 MULMOD 0xB3 SLOAD 0xAF DUP5 ADDMOD 0xD2 AND DUP13 ADDMOD PUSH7 0x846764736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209506e4a60225385ed1d946fdfbaa97945521e37c6720871d6650d7b8c7c39b0d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MOD 0xE4 0xA6 MUL 0x25 CODESIZE MCOPY 0xD1 0xD9 CHAINID REVERT 0xFB 0xAA SWAP8 SWAP5 SSTORE 0x21 0xE3 PUSH29 0x6720871D6650D7B8C7C39B0D64736F6C63430008180033000000000000 ","sourceMap":"344:7386:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209506e4a60225385ed1d946fdfbaa97945521e37c6720871d6650d7b8c7c39b0d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MOD 0xE4 0xA6 MUL 0x25 CODESIZE MCOPY 0xD1 0xD9 CHAINID REVERT 0xFB 0xAA SWAP8 SWAP5 SSTORE 0x21 0xE3 PUSH29 0x6720871D6650D7B8C7C39B0D64736F6C63430008180033000000000000 ","sourceMap":"344:7386:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"EnumerableMap":{"abi":[{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"EnumerableMapNonexistentKey","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c6c7672d37e18a7657a3368f5bd90eecd72d25aba32c01bcd7f06626dd8926e364736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xC7 PUSH8 0x2D37E18A7657A336 DUP16 JUMPDEST 0xD9 0xE 0xEC 0xD7 0x2D 0x25 0xAB LOG3 0x2C ADD 0xBC 0xD7 CREATE PUSH7 0x26DD8926E36473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"1651:17249:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c6c7672d37e18a7657a3368f5bd90eecd72d25aba32c01bcd7f06626dd8926e364736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xC7 PUSH8 0x2D37E18A7657A336 DUP16 JUMPDEST 0xD9 0xE 0xEC 0xD7 0x2D 0x25 0xAB LOG3 0x2C ADD 0xBC 0xD7 CREATE PUSH7 0x26DD8926E36473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"1651:17249:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"EnumerableMapNonexistentKey\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"errors\":{\"EnumerableMapNonexistentKey(bytes32)\":[{\"details\":\"Query for a nonexistent map key.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xa3edd94148e931d8a37353624ea57afa1c679b6fe06b7059ccdc8da78a90c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0041d5bae8c6115c3378532d5b7cfbb1a288780279a3873334e49785b65a1b9d\",\"dweb:/ipfs/QmQTGDrQSZkzRbFZWAhysaeCvKnP7wPh2VSPkN4J323QmZ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220df441788bf18ac1dc70d0345fc2b2a2ebaf58477460290b6880738e2fef44cba64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PREVRANDAO OR DUP9 0xBF XOR 0xAC SAR 0xC7 0xD SUB GASLIMIT 0xFC 0x2B 0x2A 0x2E 0xBA CREATE2 DUP5 PUSH24 0x460290B6880738E2FEF44CBA64736F6C6343000818003300 ","sourceMap":"1330:11640:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220df441788bf18ac1dc70d0345fc2b2a2ebaf58477460290b6880738e2fef44cba64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PREVRANDAO OR DUP9 0xBF XOR 0xAC SAR 0xC7 0xD SUB GASLIMIT 0xFC 0x2B 0x2A 0x2E 0xBA CREATE2 DUP5 PUSH24 0x460290B6880738E2FEF44CBA64736F6C6343000818003300 ","sourceMap":"1330:11640:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/VerisenseAVSManager.sol":{"VerisenseAVSManager":{"abi":[{"inputs":[],"name":"AVSOperatorStatusCallFailed","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"CommitmentChangeNotReady","type":"error"},{"inputs":[],"name":"DelegateKeyNotSet","type":"error"},{"inputs":[],"name":"DeregistrationAlreadyStarted","type":"error"},{"inputs":[],"name":"DeregistrationDelayNotElapsed","type":"error"},{"inputs":[],"name":"DeregistrationNotStarted","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidAVSDirectoryAddress","type":"error"},{"inputs":[],"name":"InvalidEigenDelegationManagerAddress","type":"error"},{"inputs":[],"name":"InvalidEigenPodManagerAddress","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidRewardsCoordinatorAddress","type":"error"},{"inputs":[],"name":"NoEigenPod","type":"error"},{"inputs":[],"name":"NotDelegatedToOperator","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"NotOperator","type":"error"},{"inputs":[],"name":"NotValidatorOperator","type":"error"},{"inputs":[],"name":"OperatorHasValidators","type":"error"},{"inputs":[],"name":"OperatorNotRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"RestakingStrategyAllowlistUpdateFailed","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"ValidatorAlreadyDeregistered","type":"error"},{"inputs":[],"name":"ValidatorAlreadyRegistered","type":"error"},{"inputs":[],"name":"ValidatorNotActive","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"oldDelay","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"newDelay","type":"uint64"}],"name":"DeregistrationDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorDeregisterStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorRegistered","type":"event"},{"anonymous":false,"inputs":[],"name":"OperatorRewardsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"bool","name":"allowed","type":"bool"}],"name":"RestakingStrategyAllowlistUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bytes32","name":"blsPubKeyHash","type":"bytes32"}],"name":"ValidatorDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bytes","name":"delegateKey","type":"bytes"},{"indexed":false,"internalType":"bytes32","name":"blsPubKeyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"validatorIndex","type":"uint256"}],"name":"ValidatorRegistered","type":"event"},{"inputs":[],"name":"AVS_DIRECTORY","outputs":[{"internalType":"contract IAVSDirectory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_DELEGATION_MANAGER","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_POD_MANAGER","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_REWARDS_COORDINATOR","outputs":[{"internalType":"contract IRewardsCoordinator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"calculateOperatorAVSRegistrationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"message_hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"ecdsa_check","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"finishDeregisterOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeregistrationDelay","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperator","outputs":[{"components":[{"internalType":"uint128","name":"startDeregisterOperatorBlock","type":"uint128"},{"internalType":"bool","name":"isRegistered","type":"bool"}],"internalType":"struct IVerisenseAVSManager.OperatorDataExtended","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperatorRestakedStrategies","outputs":[{"internalType":"address[]","name":"restakedStrategies","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOperators","outputs":[{"components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"bytes32","name":"substratePubkey","type":"bytes32"},{"internalType":"address[]","name":"restakedStrategies","type":"address[]"}],"internalType":"struct IVerisenseAVSManager.OperatorValidData[]","name":"operatorList","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRestakeableStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"eigenPodManagerAddress","type":"address"},{"internalType":"address","name":"eigenDelegationManagerAddress","type":"address"},{"internalType":"address","name":"avsDirectoryAddress","type":"address"},{"internalType":"address","name":"rewardsCoordinatorAddress","type":"address"},{"internalType":"uint64","name":"initialDeregistrationDelay","type":"uint64"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"latestRewardedEra","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"operatorSignature","type":"tuple"},{"internalType":"bytes32","name":"substrate_pubkey","type":"bytes32"}],"name":"registerOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"bool","name":"allowed","type":"bool"}],"name":"setAllowlistRestakingStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"name":"setClaimerFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"newDelay","type":"uint64"}],"name":"setDeregistrationDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startDeregisterOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eraIndex","type":"uint256"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IRewardsCoordinator.OperatorReward[]","name":"operatorRewards","type":"tuple[]"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]","name":"submissions","type":"tuple[]"}],"name":"submitOperatorRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"updateAVSMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523461002a5730608052612caa908161003082396080518181816109080152610a430152f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062feb1d8146101c65780630a732358146101c1578063141fbdf2146101bc5780631ed6e115146101b757806327a099d8146101b257806333cfb7b7146101ad578063389517e4146101a857806343adc491146101a35780634f1ef2861461019e57806352d1902d146101995780635865c60c146101945780636d50275d1461018f578063715018a61461018a5780638495feab1461018557806384a3f19b146101805780638da5cb5b1461017b5780639375e71314610176578063a0169ddd14610171578063a1060c881461016c578063a98fb35514610167578063ad3cb1cc14610162578063ad656c561461015d578063ca1e1d6714610158578063e367216314610153578063e481af9d1461014e578063f2251b0f146101495763f2fde38b1461014457600080fd5b611412565b6113e9565b611374565b6111ff565b611124565b6110fb565b6110bd565b610fd9565b610e7d565b610e01565b610c68565b610c32565b610bfd565b610bb7565b610b4c565b610af1565b610a9b565b610a30565b6108c6565b610710565b61062d565b6105f9565b6104a4565b6103b2565b610389565b610360565b6101f7565b6001600160a01b038116036101dc57565b600080fd5b608435906001600160401b03821682036101dc57565b346101dc5760a03660031901126101dc57600435610214816101cb565b60243590610221826101cb565b60443561022d816101cb565b606435610239816101cb565b6102416101e1565b91600080516020612c3583398151915254946001600160401b0360ff8760401c161596168015908161034d575b6001149081610343575b15908161033a575b5061032857600080516020612c35833981519152805467ffffffffffffffff191660011790556102b494866103035761143f565b6102ba57005b600080516020612c35833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020612c35833981519152805460ff60401b1916600160401b17905561143f565b60405163f92ee8a960e01b8152600490fd5b90501538610280565b303b159150610278565b87915061026e565b60009103126101dc57565b346101dc5760003660031901126101dc576000546040516001600160a01b039091168152602090f35b346101dc5760003660031901126101dc576002546040516001600160a01b039091168152602090f35b346101dc5760003660031901126101dc576020600080516020612bb583398151915254604051908152f35b6020808201908083528351809252604092604081018260408560051b840101960194600080935b86851061041657505050505050505090565b9091929394959697603f198282030185528689519160808260a082840193600180831b039384885116825283880151848301528a8801518b8301526060809801519782015286518095520194019186915b8183106104885750505050806001929a019501950193969594929190610404565b835181168652948401948b949390930192600190920191610467565b346101dc5760003660031901126101dc57600080516020612bd5833981519152546104ce81611565565b6104d6611ba4565b60005b838110610503576104f683856104fa575b604051918291826103dd565b0390f35b600081526104ea565b8061052161051561051560019461247b565b6001600160a01b031690565b8261052b82611c34565b610534816115fa565b14610541575b50016104d9565b60208061055561055084611604565b61163d565b01516105618684611d8e565b61057261056d85611e52565b611fd3565b9261058d61057e610847565b6001600160a01b039096168652565b840152604083015260608201526105a385611694565b526105ad84611694565b503861053a565b602090602060408183019282815285518094520193019160005b8281106105dc575050505090565b83516001600160a01b0316855293810193928101926001016105ce565b346101dc5760203660031901126101dc576104f661062160043561061c816101cb565b611e52565b604051918291826105b4565b346101dc576000806003193601126107035761064833611c34565b60028110156106fe57156106ec573381527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f00602052604081206001600160401b0390818154166106da576106b29143166001600160401b03166001600160401b0319825416179055565b337f34e20e11f51d19d6e90f5aaea605cb369f34ad23805c51d2e77d05c8208c85858280a280f35b604051630ebf7f5960e31b8152600490fd5b6040516325ec6c1f60e01b8152600490fd5b6115e4565b80fd5b801515036101dc57565b346101dc5760403660031901126101dc5760043561072d816101cb565b6024359061073a82610706565b6107426120e1565b81156107ab5761075a6001600160a01b03821661276f565b156107995760405191151582526001600160a01b0316907f74d2e573146a4c9fbfd23124ce9007a97aebeb715219b83507ec3a05209486bd90602090a2005b6040516379fdfc7d60e01b8152600490fd5b6107bd6001600160a01b0382166125a5565b61075a565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116107eb57604052565b6107c2565b604081019081106001600160401b038211176107eb57604052565b608081019081106001600160401b038211176107eb57604052565b90601f801991011681019081106001600160401b038211176107eb57604052565b604051906108548261080b565b565b6001600160401b0381116107eb57601f01601f191660200190565b92919261087d82610856565b9161088b6040519384610826565b8294818452818301116101dc578281602093846000960137010152565b9080601f830112156101dc578160206108c393359101610871565b90565b60403660031901126101dc5760048035906108e0826101cb565b6024356001600160401b0381116101dc576108fe90369083016108a8565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610a14575b50610a035790602083926109466120e1565b6040516352d1902d60e01b8152938491829088165afa600092816109d2575b50610993575050604051634c9c8ce360e01b81526001600160a01b0390921690820190815281906020010390fd5b8383600080516020612c1583398151915284036109b6576109b48383612891565b005b604051632a87526960e21b815290810184815281906020010390fd5b6109f591935060203d6020116109fc575b6109ed8183610826565b810190611a06565b9138610965565b503d6109e3565b60405163703e46dd60e11b81528390fd5b905081600080516020612c158339815191525416141538610934565b346101dc5760003660031901126101dc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610a89576020604051600080516020612c158339815191528152f35b60405163703e46dd60e11b8152600490fd5b346101dc5760203660031901126101dc576040610acb600435610abd816101cb565b610ac56116ba565b5061211a565b60208251916fffffffffffffffffffffffffffffffff8151168352015115156020820152f35b346101dc5760403660031901126101dc576024356001600160401b0381116101dc57610b3a610b31610b2960209336906004016108a8565b600435612935565b9092919261297b565b6040516001600160a01b039091168152f35b346101dc5760008060031936011261070357610b666120e1565b600080516020612b9583398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346101dc5760003660031901126101dc5760206001600160401b037faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f035416604051908152f35b346101dc5760203660031901126101dc576004356001600160401b03811681036101dc576109b490610c2d6120e1565b611aed565b346101dc5760003660031901126101dc57600080516020612b95833981519152546040516001600160a01b039091168152602090f35b346101dc576040806003193601126101dc576024356001600160401b03918282116101dc57366023830112156101dc5781600401359283116101dc576024820191602436918560051b0101116101dc57610cc06120e1565b610ccb600435612192565b60005b838110610d6d575050600254610cec906001600160a01b0316610515565b91823b156101dc57610d199260009283604051809681958294634e5cd2fd60e11b8452306004850161186f565b03925af18015610d6857610d4f575b7f410f403ed28055ee05512c23d09c2b582fa6d23119e026c0cfc4aa615cab07bb600080a1005b80610d5c610d62926107d8565b80610355565b38610d28565b6119fa565b610d788185856116d3565b600090838101610d8881836116f5565b849291505b808310610dd15750505060019291610db06105156105156020610dcb9501611770565b600254610dc5906001600160a01b0316610515565b90612279565b01610cce565b909193610df86001916020610df088610dea888a6116f5565b9061172a565b013590611763565b94019190610d8d565b346101dc576000602036600319011261070357600435610e20816101cb565b610e286120e1565b6002546001600160a01b0390811691839190833b15610e795760249083604051958694859363a0169ddd60e01b85521660048401525af18015610d6857610e6d575080f35b610e76906107d8565b80f35b8280fd5b346101dc5760803660031901126101dc5760048035610e9b816101cb565b60243590610ea8826101cb565b600354602090610ec0906001600160a01b0316610515565b60405163f698da2560e01b815294859182905afa918215610d68576104f693600093610faa575b50604080517fda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd602082019081526001600160a01b0394851692820192909252929091166060830152604435608083015260643560a0830152610f8b91610f97918160c081015b0391610f61601f1993848101835282610826565b519020604051938491602083019687909160429261190160f01b8352600283015260228201520190565b03908101835282610826565b5190206040519081529081906020820190565b610f97919350610f8b92610fcf610f4d9260203d6020116109fc576109ed8183610826565b9492509250610ee7565b346101dc576000602036600319011261070357806004356001600160401b03811161107157366023820112156110715761101d903690602481600401359101610871565b6110256120e1565b6003546001600160a01b031690813b1561106d57829161105b9160405194858094819363a98fb35560e01b835260048301611074565b03925af18015610d6857610e6d575080f35b5050fd5b50fd5b6020808252825181830181905290939260005b8281106110a957505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501611087565b346101dc5760003660031901126101dc576104f66040516110dd816107f0565b60058152640352e302e360dc1b602082015260405191829182611074565b346101dc5760003660031901126101dc576003546040516001600160a01b039091168152602090f35b346101dc576003196040368201126101dc57600435906001600160401b0382116101dc5760609082360301126101dc57600354611169906001600160a01b0316610515565b90813b156101dc5761119a6040518093818094639926ee7d60e01b8252600096879586926004013360048401611a15565b03925af18015610d68576111ec575b5060243560016111b833611604565b01556111c3336127f7565b50337f4d0eb1f4bac8744fd2be119845e23b3befc88094b42bcda1204c65694a00f9e58280a280f35b80610d5c6111f9926107d8565b386111a9565b346101dc576000806003193601126107035761121a33611c34565b60028110156106fe57156106ec5761124161123433611604565b546001600160401b031690565b6001600160401b038116156113625761128e61129a916112887faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f03546001600160401b031690565b90611a5e565b6001600160401b031690565b4310611350576003546112b5906001600160a01b0316610515565b803b1561134c576040516351b27a6d60e11b81523360048201529082908290602490829084905af18015610d6857611339575b506113076112f533611604565b60026000918281558260018201550155565b611310336126a2565b50337f6dd4ca66565fb3dee8076c654634c6c4ad949022d809d0394308617d6791218d8280a280f35b80610d5c611346926107d8565b386112e8565b5080fd5b60405163207c116160e01b8152600490fd5b60405163a9e6e7eb60e01b8152600490fd5b346101dc5760003660031901126101dc5760405180600080516020612c55833981519152918254808252602080920193600052600080516020612bf5833981519152916000905b8282106113d2576104f68561062181890382610826565b8354865294850194600193840193909101906113bb565b346101dc5760003660031901126101dc576001546040516001600160a01b039091168152602090f35b346101dc5760203660031901126101dc576109b4600435611432816101cb565b61143a6120e1565b611a79565b9293926001600160a01b039081169291831561153c57811691821561152a5781169485156115185716908115611506576114f5946114bb6114d89261149e610c2d9660018060a01b03166001600160601b0360a01b6000541617600055565b60018060a01b03166001600160601b0360a01b6001541617600155565b60018060a01b03166001600160601b0360a01b6003541617600355565b60018060a01b03166001600160601b0360a01b6002541617600255565b6114fe33611b5e565b6108546123d8565b604051637d2b055f60e11b8152600490fd5b604051632225cdcf60e11b8152600490fd5b604051632023de5360e11b8152600490fd5b604051635b9d55c760e11b8152600490fd5b6001600160401b0381116107eb5760051b60200190565b9061156f8261154e565b60409061157f6040519182610826565b8381528093611590601f199161154e565b019060009260005b8381106115a6575050505050565b81519060808201918083106001600160401b038411176107eb5760209284528681528287818301528785830152606080830152828601015201611598565b634e487b7160e01b600052602160045260246000fd5b600211156106fe57565b6001600160a01b031660009081527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f006020526040902090565b90604051606081016001600160401b0393828210858311176107eb57600260ff91604093845284968154168552600181015460208601520154161515910152565b634e487b7160e01b600052603260045260246000fd5b8051156116a15760200190565b61167e565b80518210156116a15760209160051b010190565b604051906116c7826107f0565b60006020838281520152565b91908110156116a15760051b8101359060be19813603018212156101dc570190565b903590601e19813603018212156101dc57018035906001600160401b0382116101dc57602001918160061b360383136101dc57565b91908110156116a15760061b0190565b634e487b7160e01b600052601160045260246000fd5b906001820180921161175e57565b61173a565b9190820180921161175e57565b356108c3816101cb565b9035601e19823603018112156101dc5701602081359101916001600160401b0382116101dc578160061b360383136101dc57565b3590610854826101cb565b9190808252602080920192916000905b8282106117d7575050505090565b9091929360019085356117e9816101cb565b828060a01b031681528286013583820152604080910195019201909291926117c9565b359063ffffffff821682036101dc57565b9035601e19823603018112156101dc5701602081359101916001600160401b0382116101dc5781360383136101dc57565b908060209392818452848401376000828201840152601f01601f1916010190565b926040938481019060018060a01b0380941681528260209287848401525260608082019060608560051b84010197876000945b8786106118b6575050505050505050505090565b90919293949596979899605f198282030186528a3560be19843603018112156101dc57838991019160c08082016118ed858061177a565b9284529082905260e08301916000908f5b8183106119b3575050505083839261194b61199f936119326119238760019a016117ae565b6001600160a01b031684880152565b61193e8b85018561177a565b908483038d8601526117b9565b9161196661195a8c830161180c565b63ffffffff16838d0152565b611982608061197681840161180c565b63ffffffff1690840152565b61199160a0918281019061181d565b92909181850391015261184e565b9c01960196019498979695939291906118a2565b909280959650939193356119c6816101cb565b1681528c840135906001600160601b0382168092036101dc5789818f936001948394015201940192018c949392918f6118fe565b6040513d6000823e3d90fd5b908160209103126101dc575190565b6001600160a01b039091168152604060208201819052608090611a4b611a3b858061181d565b60608487015260a086019161184e565b9360208101356060850152013591015290565b9190916001600160401b038080941691160191821161175e57565b6001600160a01b03908116908115611ad457600080516020612b9583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b60407f7d9c9ce14fd1f11f09bf0faca4d408d3bb5815ceb44368d65b408ebc4401165c917faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f038054916001600160401b0380911691826001600160401b031985161790558351921682526020820152a1565b61085490611b6a6123d8565b61143a6123d8565b90611b7c8261154e565b611b896040519182610826565b8281528092611b9a601f199161154e565b0190602036910137565b600080516020612c558339815191528054611bbe81611b72565b916000805b838110611bd1575050505090565b828252600080516020612bf5833981519152810154600191906001600160a01b0316611bfd82886116a6565b5201611bc3565b3d15611c2f573d90611c1582610856565b91611c236040519384610826565b82523d6000602084013e565b606090565b6003546040516349075da360e01b602082019081523060248301526001600160a01b0393841660448301529190921691611c7b81606481015b03601f198101835282610826565b6000928392839251915afa611c8e611c04565b9015611cb35760208180518101031261134c5760200151906002821015610703575090565b604051633d635fe960e11b8152600490fd5b60209081818403126101dc578051906001600160401b0382116101dc57019180601f840112156101dc578251611cfa8161154e565b93611d086040519586610826565b818552838086019260051b8201019283116101dc578301905b828210611d2f575050505090565b81518152908301908301611d21565b6001600160a01b03918216815260406020808301829052845191830182905260609092019382019160005b828110611d7857505050505090565b8351851686529481019492810192600101611d69565b60018054604051639004134760e01b815293919260009285926001600160a01b03169183918291611dc3919060048401611d3e565b03915afa918215610d6857600092611e1e575b50806000926000925b611dea575b50505090565b809391929351841015611e1657611e0184826116a6565b51820180921161175e57828092940192611ddf565b819350611de4565b611e3c9192503d806000833e611e348183610826565b810190611cc5565b9038611dd6565b600019811461175e5760010190565b90606091611e6b6020611e648361211a565b0151151590565b611e73575b50565b9150600080516020612c5583398151915254611e8e81611b72565b9260005b828110611f8f575060018054611ed89392600091879190611ebb906001600160a01b0316610515565b90604051809781948293639004134760e01b845260048401611d3e565b03915afa928315610d6857600093611f72575b50600092611ef883611b72565b95845b848110611f1357505050508110611f0f5750565b8252565b80611f1f8592856116a6565b51611f2b575b01611efb565b611f6d611f4b610515611f3e84876116a6565b516001600160a01b031690565b611f5e611f578a611e43565b998c6116a6565b6001600160a01b039091169052565b611f25565b611f889193503d806000833e611e348183610826565b9138611eeb565b80611fb1611fa76105156105156105156001966124bc565b611f5e83896116a6565b01611e92565b60001981019190821161175e57565b9190820391821161175e57565b805180156120dd57611fe490611b72565b9060005b8151811015612014578061200e612004611f3e600194866116a6565b611f5e83876116a6565b01611fe8565b50506000905b6120248151611fb7565b8210156120d85760005b61204161203c848451611fc6565b611fb7565b8110156120cd578061205b610515611f3e600194866116a6565b612076610515610515611f3e61207086611750565b886116a6565b90838060a01b03161161208a575b0161202e565b6120c86120a2611f3e61209c84611750565b866116a6565b6120be6120b2611f3e85886116a6565b611f5e61207086611750565b611f5e83866116a6565b612084565b50906001019061201a565b905090565b5090565b600080516020612b95833981519152546001600160a01b0316330361210257565b60405163118cdaa760e01b8152336004820152602490fd5b6121226116ba565b506001600160a01b03811660009081527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f0060205260409020546001600160401b03169061216e90611c34565b60028110156106fe5760019060405192612187846107f0565b835214602082015290565b801561223457600080516020612bb583398151915254806121c05750600080516020612bb583398151915255565b6001810180911161175e5781036121e357600080516020612bb583398151915255565b60405162461bcd60e51b8152602060048201526024808201527f6c617465737420726577617264656420657261206d75737420626520696e206160448201526320726f7760e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601b60248201527f72657761726420657261206d757374206d6f7265207468616e203000000000006044820152606490fd5b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015292939092602091838216908386604481855afa958615610d68576000966123a9575b50850180951161175e57600080604051968588019063095ea7b360e01b958683528a1660248a01526044890152604488526122f88861080b565b87519082855af190612308611c04565b82612376575b508161236b575b5015612323575b5050505050565b604051918201526001600160a01b039093166024840152600060448401526123619261235c906123568160648101611c6d565b82612abf565b612abf565b388080808061231c565b90503b151538612315565b809192505190848215928315612391575b505050903861230e565b6123a19350820181019101612aaa565b388481612387565b9095508381813d83116123d1575b6123c18183610826565b810103126101dc575194386122be565b503d6123b7565b60ff600080516020612c358339815191525460401c16156123f557565b604051631afcd79f60e31b8152600490fd5b600080516020612c5583398151915280548210156116a157600052600080516020612bf58339815191520190600090565b600080516020612bd583398151915280548210156116a1576000527f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36b0190600090565b600080516020612bd583398151915280548210156116a1576000527f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36b015490565b600080516020612c5583398151915280548210156116a157600052600080516020612bf5833981519152015490565b600080516020612c55833981519152805490811561253d57600019820191808310156116a1577ff7d7e697360407af72f21b9dd15ad33dccec16d662d65c043a3b77c0c9d1b269600091838352015555565b634e487b7160e01b600052603160045260246000fd5b600080516020612bd5833981519152805490811561253d57600019820191808310156116a1577f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36a600091838352015555565b60008181527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f076020526040902054801561269b57600019918183019180831161175e57600080516020612c558339815191525493840193841161175e57838360009561264b9503612651575b50505061261c6124eb565b6000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f07602052604060002090565b55600190565b61261c6126799161267161266761269295612407565b90549060031b1c90565b928391612407565b90919082549060031b91821b91600019901b1916179055565b55388080612611565b5050600090565b60008181527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f026020526040902054801561269b57600019918183019180831161175e57600080516020612bd58339815191525493840193841161175e57838360009561264b9503612748575b505050612719612553565b6000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f02602052604060002090565b6127196126799161275e61266761276695612438565b928391612438565b5538808061270e565b806000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f07806020526040600020541560001461269b57600080516020612c558339815191528054600160401b8110156107eb57600181018083558110156116a1578390600080516020612bf583398151915201555491600052602052604060002055600190565b806000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f02806020526040600020541560001461269b57600080516020612bd58339815191528054600160401b8110156107eb57600181018083558110156116a15783907f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36b01555491600052602052604060002055600190565b90813b1561291457600080516020612c1583398151915280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051156128f957611e7091612a08565b50503461290257565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b81519190604183036129665761295f92506020820151906060604084015193015160001a90612a26565b9192909190565b505060009160029190565b600411156106fe57565b61298481612971565b8061298d575050565b61299681612971565b600181036129b05760405163f645eedf60e01b8152600490fd5b6129b981612971565b600281036129da5760405163fce698f760e01b815260048101839052602490fd5b806129e6600392612971565b146129ee5750565b6040516335e2f38360e21b81526004810191909152602490fd5b6000806108c393602081519101845af4612a20611c04565b91612b31565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612a9e57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610d685780516001600160a01b03811615612a9557918190565b50809160019190565b50505060009160039190565b908160209103126101dc57516108c381610706565b600080612ae89260018060a01b03169360208151910182865af1612ae1611c04565b9083612b31565b8051908115159182612b16575b5050612afe5750565b60249060405190635274afe760e01b82526004820152fd5b612b299250602080918301019101612aaa565b153880612af5565b90612b585750805115612b4657805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612b8b575b612b69575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612b6156fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300af993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f05af993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f01f7d7e697360407af72f21b9dd15ad33dccec16d662d65c043a3b77c0c9d1b26a360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00af993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f06a26469706673582212204c2b674c8474ff844d687ff52eeb2c4629848c26db10b3b86e39a97f75e5343264736f6c63430008180033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2A JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x2CAA SWAP1 DUP2 PUSH2 0x30 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x908 ADD MSTORE PUSH2 0xA43 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFEB1D8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA732358 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x141FBDF2 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x1ED6E115 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x27A099D8 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x33CFB7B7 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x389517E4 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x43ADC491 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5865C60C EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x6D50275D EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x8495FEAB EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x84A3F19B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9375E713 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xA0169DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xA1060C88 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xA98FB355 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xAD656C56 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xCA1E1D67 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xE3672163 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xE481AF9D EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xF2251B0F EQ PUSH2 0x149 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x10BD JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x214 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x221 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x22D DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x239 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x241 PUSH2 0x1E1 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND ISZERO SWAP7 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x34D JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x343 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x33A JUMPI JUMPDEST POP PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2B4 SWAP5 DUP7 PUSH2 0x303 JUMPI PUSH2 0x143F JUMP JUMPDEST PUSH2 0x2BA JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR SWAP1 SSTORE PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x280 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x278 JUMP JUMPDEST DUP8 SWAP2 POP PUSH2 0x26E JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x20 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 SWAP3 PUSH1 0x40 DUP2 ADD DUP3 PUSH1 0x40 DUP6 PUSH1 0x5 SHL DUP5 ADD ADD SWAP7 ADD SWAP5 PUSH1 0x0 DUP1 SWAP4 JUMPDEST DUP7 DUP6 LT PUSH2 0x416 JUMPI POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP6 MSTORE DUP7 DUP10 MLOAD SWAP2 PUSH1 0x80 DUP3 PUSH1 0xA0 DUP3 DUP5 ADD SWAP4 PUSH1 0x1 DUP1 DUP4 SHL SUB SWAP4 DUP5 DUP9 MLOAD AND DUP3 MSTORE DUP4 DUP9 ADD MLOAD DUP5 DUP4 ADD MSTORE DUP11 DUP9 ADD MLOAD DUP12 DUP4 ADD MSTORE PUSH1 0x60 DUP1 SWAP9 ADD MLOAD SWAP8 DUP3 ADD MSTORE DUP7 MLOAD DUP1 SWAP6 MSTORE ADD SWAP5 ADD SWAP2 DUP7 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x488 JUMPI POP POP POP POP DUP1 PUSH1 0x1 SWAP3 SWAP11 ADD SWAP6 ADD SWAP6 ADD SWAP4 SWAP7 SWAP6 SWAP5 SWAP3 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST DUP4 MLOAD DUP2 AND DUP7 MSTORE SWAP5 DUP5 ADD SWAP5 DUP12 SWAP5 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x467 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x4CE DUP2 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x503 JUMPI PUSH2 0x4F6 DUP4 DUP6 PUSH2 0x4FA JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3DD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x4EA JUMP JUMPDEST DUP1 PUSH2 0x521 PUSH2 0x515 PUSH2 0x515 PUSH1 0x1 SWAP5 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x52B DUP3 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x534 DUP2 PUSH2 0x15FA JUMP JUMPDEST EQ PUSH2 0x541 JUMPI JUMPDEST POP ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH2 0x555 PUSH2 0x550 DUP5 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x163D JUMP JUMPDEST ADD MLOAD PUSH2 0x561 DUP7 DUP5 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x572 PUSH2 0x56D DUP6 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 PUSH2 0x58D PUSH2 0x57E PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE JUMP JUMPDEST DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x5A3 DUP6 PUSH2 0x1694 JUMP JUMPDEST MSTORE PUSH2 0x5AD DUP5 PUSH2 0x1694 JUMP JUMPDEST POP CODESIZE PUSH2 0x53A JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5DC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x5CE JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH2 0x4F6 PUSH2 0x621 PUSH1 0x4 CALLDATALOAD PUSH2 0x61C DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5B4 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x703 JUMPI PUSH2 0x648 CALLER PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI ISZERO PUSH2 0x6EC JUMPI CALLER DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 SLOAD AND PUSH2 0x6DA JUMPI PUSH2 0x6B2 SWAP2 NUMBER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH32 0x34E20E11F51D19D6E90F5AAEA605CB369F34AD23805C51D2E77D05C8208C8585 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEBF7F59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25EC6C1F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x15E4 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x72D DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x73A DUP3 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x742 PUSH2 0x20E1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7AB JUMPI PUSH2 0x75A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x276F JUMP JUMPDEST ISZERO PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x74D2E573146A4C9FBFD23124CE9007A97AEBEB715219B83507EC3A05209486BD SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79FDFC7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x7BD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25A5 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x854 DUP3 PUSH2 0x80B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x87D DUP3 PUSH2 0x856 JUMP JUMPDEST SWAP2 PUSH2 0x88B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x826 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1DC JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1DC JUMPI DUP2 PUSH1 0x20 PUSH2 0x8C3 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x871 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH2 0x8E0 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DC JUMPI PUSH2 0x8FE SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xA14 JUMPI JUMPDEST POP PUSH2 0xA03 JUMPI SWAP1 PUSH1 0x20 DUP4 SWAP3 PUSH2 0x946 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 DUP9 AND GAS STATICCALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x9D2 JUMPI JUMPDEST POP PUSH2 0x993 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 PUSH1 0x20 ADD SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 SUB PUSH2 0x9B6 JUMPI PUSH2 0x9B4 DUP4 DUP4 PUSH2 0x2891 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 DUP2 MSTORE DUP2 SWAP1 PUSH1 0x20 ADD SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F5 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9FC JUMPI JUMPDEST PUSH2 0x9ED DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x965 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND EQ ISZERO CODESIZE PUSH2 0x934 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xA89 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x40 PUSH2 0xACB PUSH1 0x4 CALLDATALOAD PUSH2 0xABD DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0x16BA JUMP JUMPDEST POP PUSH2 0x211A JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP4 MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DC JUMPI PUSH2 0xB3A PUSH2 0xB31 PUSH2 0xB29 PUSH1 0x20 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x2935 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x703 JUMPI PUSH2 0xB66 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F03 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1DC JUMPI PUSH2 0x9B4 SWAP1 PUSH2 0xC2D PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0x1AED JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x40 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT PUSH2 0x1DC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1DC JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x1DC JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1DC JUMPI PUSH2 0xCC0 PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0xCCB PUSH1 0x4 CALLDATALOAD PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xD6D JUMPI POP POP PUSH1 0x2 SLOAD PUSH2 0xCEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x1DC JUMPI PUSH2 0xD19 SWAP3 PUSH1 0x0 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x4E5CD2FD PUSH1 0xE1 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD PUSH2 0x186F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD4F JUMPI JUMPDEST PUSH32 0x410F403ED28055EE05512C23D09C2B582FA6D23119E026C0CFC4AA615CAB07BB PUSH1 0x0 DUP1 LOG1 STOP JUMPDEST DUP1 PUSH2 0xD5C PUSH2 0xD62 SWAP3 PUSH2 0x7D8 JUMP JUMPDEST DUP1 PUSH2 0x355 JUMP JUMPDEST CODESIZE PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x19FA JUMP JUMPDEST PUSH2 0xD78 DUP2 DUP6 DUP6 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP2 ADD PUSH2 0xD88 DUP2 DUP4 PUSH2 0x16F5 JUMP JUMPDEST DUP5 SWAP3 SWAP2 POP JUMPDEST DUP1 DUP4 LT PUSH2 0xDD1 JUMPI POP POP POP PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDB0 PUSH2 0x515 PUSH2 0x515 PUSH1 0x20 PUSH2 0xDCB SWAP6 ADD PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xDC5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP1 PUSH2 0x2279 JUMP JUMPDEST ADD PUSH2 0xCCE JUMP JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0xDF8 PUSH1 0x1 SWAP2 PUSH1 0x20 PUSH2 0xDF0 DUP9 PUSH2 0xDEA DUP9 DUP11 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 PUSH2 0x172A JUMP JUMPDEST ADD CALLDATALOAD SWAP1 PUSH2 0x1763 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x703 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE20 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 SWAP2 SWAP1 DUP4 EXTCODESIZE ISZERO PUSH2 0xE79 JUMPI PUSH1 0x24 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA0169DDD PUSH1 0xE0 SHL DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0xE6D JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xE76 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH2 0xE9B DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xEA8 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x20 SWAP1 PUSH2 0xEC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF698DA25 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD68 JUMPI PUSH2 0x4F6 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0xFAA JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xDA2C89BAFDD34776A2B8BB9C83C82F419E20CC8C67207F70EDD58249B92661BD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xF8B SWAP2 PUSH2 0xF97 SWAP2 DUP2 PUSH1 0xC0 DUP2 ADD JUMPDEST SUB SWAP2 PUSH2 0xF61 PUSH1 0x1F NOT SWAP4 DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x826 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 DUP8 SWAP1 SWAP2 PUSH1 0x42 SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x826 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF97 SWAP2 SWAP4 POP PUSH2 0xF8B SWAP3 PUSH2 0xFCF PUSH2 0xF4D SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9FC JUMPI PUSH2 0x9ED DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST SWAP5 SWAP3 POP SWAP3 POP PUSH2 0xEE7 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x703 JUMPI DUP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1071 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1071 JUMPI PUSH2 0x101D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1025 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x106D JUMPI DUP3 SWAP2 PUSH2 0x105B SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA98FB355 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1074 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0xE6D JUMPI POP DUP1 RETURN JUMPDEST POP POP REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x10A9 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x1087 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH2 0x4F6 PUSH1 0x40 MLOAD PUSH2 0x10DD DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1074 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x3 NOT PUSH1 0x40 CALLDATASIZE DUP3 ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI PUSH1 0x60 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x3 SLOAD PUSH2 0x1169 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x1DC JUMPI PUSH2 0x119A PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 DUP1 SWAP5 PUSH4 0x9926EE7D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x0 SWAP7 DUP8 SWAP6 DUP7 SWAP3 PUSH1 0x4 ADD CALLER PUSH1 0x4 DUP5 ADD PUSH2 0x1A15 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0x11EC JUMPI JUMPDEST POP PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH2 0x11B8 CALLER PUSH2 0x1604 JUMP JUMPDEST ADD SSTORE PUSH2 0x11C3 CALLER PUSH2 0x27F7 JUMP JUMPDEST POP CALLER PUSH32 0x4D0EB1F4BAC8744FD2BE119845E23B3BEFC88094B42BCDA1204C65694A00F9E5 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP1 PUSH2 0xD5C PUSH2 0x11F9 SWAP3 PUSH2 0x7D8 JUMP JUMPDEST CODESIZE PUSH2 0x11A9 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x703 JUMPI PUSH2 0x121A CALLER PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI ISZERO PUSH2 0x6EC JUMPI PUSH2 0x1241 PUSH2 0x1234 CALLER PUSH2 0x1604 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND ISZERO PUSH2 0x1362 JUMPI PUSH2 0x128E PUSH2 0x129A SWAP2 PUSH2 0x1288 PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F03 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST NUMBER LT PUSH2 0x1350 JUMPI PUSH1 0x3 SLOAD PUSH2 0x12B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH4 0x51B27A6D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0x1339 JUMPI JUMPDEST POP PUSH2 0x1307 PUSH2 0x12F5 CALLER PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST PUSH2 0x1310 CALLER PUSH2 0x26A2 JUMP JUMPDEST POP CALLER PUSH32 0x6DD4CA66565FB3DEE8076C654634C6C4AD949022D809D0394308617D6791218D DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP1 PUSH2 0xD5C PUSH2 0x1346 SWAP3 PUSH2 0x7D8 JUMP JUMPDEST CODESIZE PUSH2 0x12E8 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x207C1161 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9E6E7EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x13D2 JUMPI PUSH2 0x4F6 DUP6 PUSH2 0x621 DUP2 DUP10 SUB DUP3 PUSH2 0x826 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x13BB JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH2 0x9B4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1432 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x143A PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0x1A79 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x153C JUMPI DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x152A JUMPI DUP2 AND SWAP5 DUP6 ISZERO PUSH2 0x1518 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0x1506 JUMPI PUSH2 0x14F5 SWAP5 PUSH2 0x14BB PUSH2 0x14D8 SWAP3 PUSH2 0x149E PUSH2 0xC2D SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x14FE CALLER PUSH2 0x1B5E JUMP JUMPDEST PUSH2 0x854 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7D2B055F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2225CDCF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2023DE53 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B9D55C7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x156F DUP3 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x157F PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x826 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP1 SWAP4 PUSH2 0x1590 PUSH1 0x1F NOT SWAP2 PUSH2 0x154E JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x15A6 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x7EB JUMPI PUSH1 0x20 SWAP3 DUP5 MSTORE DUP7 DUP2 MSTORE DUP3 DUP8 DUP2 DUP4 ADD MSTORE DUP8 DUP6 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MSTORE DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1598 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x6FE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP3 DUP3 LT DUP6 DUP4 GT OR PUSH2 0x7EB JUMPI PUSH1 0x2 PUSH1 0xFF SWAP2 PUSH1 0x40 SWAP4 DUP5 MSTORE DUP5 SWAP7 DUP2 SLOAD AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x167E JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x16C7 DUP3 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xBE NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1DC JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1DC JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DC JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST PUSH2 0x173A JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST CALLDATALOAD PUSH2 0x8C3 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1DC JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x854 DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x17D7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x1 SWAP1 DUP6 CALLDATALOAD PUSH2 0x17E9 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP3 DUP7 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP1 SWAP2 ADD SWAP6 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x17C9 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1DC JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DC JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP4 DUP5 DUP2 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 SWAP3 DUP8 DUP5 DUP5 ADD MSTORE MSTORE PUSH1 0x60 DUP1 DUP3 ADD SWAP1 PUSH1 0x60 DUP6 PUSH1 0x5 SHL DUP5 ADD ADD SWAP8 DUP8 PUSH1 0x0 SWAP5 JUMPDEST DUP8 DUP7 LT PUSH2 0x18B6 JUMPI POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 PUSH1 0x5F NOT DUP3 DUP3 SUB ADD DUP7 MSTORE DUP11 CALLDATALOAD PUSH1 0xBE NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1DC JUMPI DUP4 DUP10 SWAP2 ADD SWAP2 PUSH1 0xC0 DUP1 DUP3 ADD PUSH2 0x18ED DUP6 DUP1 PUSH2 0x177A JUMP JUMPDEST SWAP3 DUP5 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 PUSH1 0x0 SWAP1 DUP16 JUMPDEST DUP2 DUP4 LT PUSH2 0x19B3 JUMPI POP POP POP POP DUP4 DUP4 SWAP3 PUSH2 0x194B PUSH2 0x199F SWAP4 PUSH2 0x1932 PUSH2 0x1923 DUP8 PUSH1 0x1 SWAP11 ADD PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x193E DUP12 DUP6 ADD DUP6 PUSH2 0x177A JUMP JUMPDEST SWAP1 DUP5 DUP4 SUB DUP14 DUP7 ADD MSTORE PUSH2 0x17B9 JUMP JUMPDEST SWAP2 PUSH2 0x1966 PUSH2 0x195A DUP13 DUP4 ADD PUSH2 0x180C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP4 DUP14 ADD MSTORE JUMP JUMPDEST PUSH2 0x1982 PUSH1 0x80 PUSH2 0x1976 DUP2 DUP5 ADD PUSH2 0x180C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1991 PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD SWAP1 PUSH2 0x181D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x184E JUMP JUMPDEST SWAP13 ADD SWAP7 ADD SWAP7 ADD SWAP5 SWAP9 SWAP8 SWAP7 SWAP6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 SWAP3 DUP1 SWAP6 SWAP7 POP SWAP4 SWAP2 SWAP4 CALLDATALOAD PUSH2 0x19C6 DUP2 PUSH2 0x1CB JUMP JUMPDEST AND DUP2 MSTORE DUP13 DUP5 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1DC JUMPI DUP10 DUP2 DUP16 SWAP4 PUSH1 0x1 SWAP5 DUP4 SWAP5 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD DUP13 SWAP5 SWAP4 SWAP3 SWAP2 DUP16 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1DC JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 SWAP1 PUSH2 0x1A4B PUSH2 0x1A3B DUP6 DUP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x60 DUP5 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 PUSH2 0x184E JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP1 SWAP5 AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AD4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 PUSH32 0x7D9C9CE14FD1F11F09BF0FACA4D408D3BB5815CEB44368D65B408EBC4401165C SWAP2 PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F03 DUP1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP2 AND SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP6 AND OR SWAP1 SSTORE DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH2 0x854 SWAP1 PUSH2 0x1B6A PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x143A PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH2 0x1B7C DUP3 PUSH2 0x154E JUMP JUMPDEST PUSH2 0x1B89 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x826 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B9A PUSH1 0x1F NOT SWAP2 PUSH2 0x154E JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH2 0x1BBE DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BD1 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 ADD SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BFD DUP3 DUP9 PUSH2 0x16A6 JUMP JUMPDEST MSTORE ADD PUSH2 0x1BC3 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1C2F JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1C15 DUP3 PUSH2 0x856 JUMP JUMPDEST SWAP2 PUSH2 0x1C23 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x826 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x49075DA3 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x1C7B DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 MLOAD SWAP2 GAS STATICCALL PUSH2 0x1C8E PUSH2 0x1C04 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x1CB3 JUMPI PUSH1 0x20 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x134C JUMPI PUSH1 0x20 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x703 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D635FE9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x1DC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1DC JUMPI DUP3 MLOAD PUSH2 0x1CFA DUP2 PUSH2 0x154E JUMP JUMPDEST SWAP4 PUSH2 0x1D08 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x826 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1DC JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D2F JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP4 DUP3 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D78 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 AND DUP7 MSTORE SWAP5 DUP2 ADD SWAP5 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1D69 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x90041347 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP2 SWAP3 PUSH1 0x0 SWAP3 DUP6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH2 0x1DC3 SWAP2 SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0x1D3E JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E1E JUMPI JUMPDEST POP DUP1 PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP3 JUMPDEST PUSH2 0x1DEA JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST DUP1 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP5 LT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E01 DUP5 DUP3 PUSH2 0x16A6 JUMP JUMPDEST MLOAD DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175E JUMPI DUP3 DUP1 SWAP3 SWAP5 ADD SWAP3 PUSH2 0x1DDF JUMP JUMPDEST DUP2 SWAP4 POP PUSH2 0x1DE4 JUMP JUMPDEST PUSH2 0x1E3C SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1E34 DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x175E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x60 SWAP2 PUSH2 0x1E6B PUSH1 0x20 PUSH2 0x1E64 DUP4 PUSH2 0x211A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1E73 JUMPI JUMPDEST POP JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1E8E DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F8F JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x1ED8 SWAP4 SWAP3 PUSH1 0x0 SWAP2 DUP8 SWAP2 SWAP1 PUSH2 0x1EBB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x90041347 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1D3E JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1F72 JUMPI JUMPDEST POP PUSH1 0x0 SWAP3 PUSH2 0x1EF8 DUP4 PUSH2 0x1B72 JUMP JUMPDEST SWAP6 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F13 JUMPI POP POP POP POP DUP2 LT PUSH2 0x1F0F JUMPI POP JUMP JUMPDEST DUP3 MSTORE JUMP JUMPDEST DUP1 PUSH2 0x1F1F DUP6 SWAP3 DUP6 PUSH2 0x16A6 JUMP JUMPDEST MLOAD PUSH2 0x1F2B JUMPI JUMPDEST ADD PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x1F6D PUSH2 0x1F4B PUSH2 0x515 PUSH2 0x1F3E DUP5 DUP8 PUSH2 0x16A6 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1F5E PUSH2 0x1F57 DUP11 PUSH2 0x1E43 JUMP JUMPDEST SWAP10 DUP13 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1F25 JUMP JUMPDEST PUSH2 0x1F88 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1E34 DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x1EEB JUMP JUMPDEST DUP1 PUSH2 0x1FB1 PUSH2 0x1FA7 PUSH2 0x515 PUSH2 0x515 PUSH2 0x515 PUSH1 0x1 SWAP7 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP10 PUSH2 0x16A6 JUMP JUMPDEST ADD PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO PUSH2 0x20DD JUMPI PUSH2 0x1FE4 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2014 JUMPI DUP1 PUSH2 0x200E PUSH2 0x2004 PUSH2 0x1F3E PUSH1 0x1 SWAP5 DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP8 PUSH2 0x16A6 JUMP JUMPDEST ADD PUSH2 0x1FE8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x2024 DUP2 MLOAD PUSH2 0x1FB7 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x20D8 JUMPI PUSH1 0x0 JUMPDEST PUSH2 0x2041 PUSH2 0x203C DUP5 DUP5 MLOAD PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x1FB7 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x20CD JUMPI DUP1 PUSH2 0x205B PUSH2 0x515 PUSH2 0x1F3E PUSH1 0x1 SWAP5 DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x2076 PUSH2 0x515 PUSH2 0x515 PUSH2 0x1F3E PUSH2 0x2070 DUP7 PUSH2 0x1750 JUMP JUMPDEST DUP9 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x208A JUMPI JUMPDEST ADD PUSH2 0x202E JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x20A2 PUSH2 0x1F3E PUSH2 0x209C DUP5 PUSH2 0x1750 JUMP JUMPDEST DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x20BE PUSH2 0x20B2 PUSH2 0x1F3E DUP6 DUP9 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1F5E PUSH2 0x2070 DUP7 PUSH2 0x1750 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x2084 JUMP JUMPDEST POP SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x201A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2102 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x2122 PUSH2 0x16BA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 PUSH2 0x216E SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2187 DUP5 PUSH2 0x7F0 JUMP JUMPDEST DUP4 MSTORE EQ PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2234 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD DUP1 PUSH2 0x21C0 JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x175E JUMPI DUP2 SUB PUSH2 0x21E3 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6C617465737420726577617264656420657261206D75737420626520696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20726F77 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72657761726420657261206D757374206D6F7265207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP4 DUP3 AND SWAP1 DUP4 DUP7 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 SWAP7 PUSH2 0x23A9 JUMPI JUMPDEST POP DUP6 ADD DUP1 SWAP6 GT PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP7 DUP6 DUP9 ADD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP6 DUP7 DUP4 MSTORE DUP11 AND PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0x44 DUP10 ADD MSTORE PUSH1 0x44 DUP9 MSTORE PUSH2 0x22F8 DUP9 PUSH2 0x80B JUMP JUMPDEST DUP8 MLOAD SWAP1 DUP3 DUP6 GAS CALL SWAP1 PUSH2 0x2308 PUSH2 0x1C04 JUMP JUMPDEST DUP3 PUSH2 0x2376 JUMPI JUMPDEST POP DUP2 PUSH2 0x236B JUMPI JUMPDEST POP ISZERO PUSH2 0x2323 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP5 ADD MSTORE PUSH2 0x2361 SWAP3 PUSH2 0x235C SWAP1 PUSH2 0x2356 DUP2 PUSH1 0x64 DUP2 ADD PUSH2 0x1C6D JUMP JUMPDEST DUP3 PUSH2 0x2ABF JUMP JUMPDEST PUSH2 0x2ABF JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x231C JUMP JUMPDEST SWAP1 POP EXTCODESIZE ISZERO ISZERO CODESIZE PUSH2 0x2315 JUMP JUMPDEST DUP1 SWAP2 SWAP3 POP MLOAD SWAP1 DUP5 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x2391 JUMPI JUMPDEST POP POP POP SWAP1 CODESIZE PUSH2 0x230E JUMP JUMPDEST PUSH2 0x23A1 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x2AAA JUMP JUMPDEST CODESIZE DUP5 DUP2 PUSH2 0x2387 JUMP JUMPDEST SWAP1 SWAP6 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23D1 JUMPI JUMPDEST PUSH2 0x23C1 DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1DC JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x22BE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x23F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36B ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP1 DUP4 LT ISZERO PUSH2 0x16A1 JUMPI PUSH32 0xF7D7E697360407AF72F21B9DD15AD33DCCEC16D662D65C043A3B77C0C9D1B269 PUSH1 0x0 SWAP2 DUP4 DUP4 MSTORE ADD SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP1 DUP4 LT ISZERO PUSH2 0x16A1 JUMPI PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36A PUSH1 0x0 SWAP2 DUP4 DUP4 MSTORE ADD SSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F07 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x269B JUMPI PUSH1 0x0 NOT SWAP2 DUP2 DUP4 ADD SWAP2 DUP1 DUP4 GT PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 ADD SWAP4 DUP5 GT PUSH2 0x175E JUMPI DUP4 DUP4 PUSH1 0x0 SWAP6 PUSH2 0x264B SWAP6 SUB PUSH2 0x2651 JUMPI JUMPDEST POP POP POP PUSH2 0x261C PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F07 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x261C PUSH2 0x2679 SWAP2 PUSH2 0x2671 PUSH2 0x2667 PUSH2 0x2692 SWAP6 PUSH2 0x2407 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2407 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2611 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F02 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x269B JUMPI PUSH1 0x0 NOT SWAP2 DUP2 DUP4 ADD SWAP2 DUP1 DUP4 GT PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 ADD SWAP4 DUP5 GT PUSH2 0x175E JUMPI DUP4 DUP4 PUSH1 0x0 SWAP6 PUSH2 0x264B SWAP6 SUB PUSH2 0x2748 JUMPI JUMPDEST POP POP POP PUSH2 0x2719 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F02 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2719 PUSH2 0x2679 SWAP2 PUSH2 0x275E PUSH2 0x2667 PUSH2 0x2766 SWAP6 PUSH2 0x2438 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2438 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x270E JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F07 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x269B JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x16A1 JUMPI DUP4 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F02 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x269B JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x16A1 JUMPI DUP4 SWAP1 PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36B ADD SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x2914 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x28F9 JUMPI PUSH2 0x1E70 SWAP2 PUSH2 0x2A08 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x2902 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x2966 JUMPI PUSH2 0x295F SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x2A26 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x6FE JUMPI JUMP JUMPDEST PUSH2 0x2984 DUP2 PUSH2 0x2971 JUMP JUMPDEST DUP1 PUSH2 0x298D JUMPI POP POP JUMP JUMPDEST PUSH2 0x2996 DUP2 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x29B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x29B9 DUP2 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x29DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x29E6 PUSH1 0x3 SWAP3 PUSH2 0x2971 JUMP JUMPDEST EQ PUSH2 0x29EE JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C3 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x2A20 PUSH2 0x1C04 JUMP JUMPDEST SWAP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2A9E JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xD68 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2A95 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1DC JUMPI MLOAD PUSH2 0x8C3 DUP2 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AE8 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL PUSH2 0x2AE1 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x2B31 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x2B16 JUMPI JUMPDEST POP POP PUSH2 0x2AFE JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2B29 SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x2AAA JUMP JUMPDEST ISZERO CODESIZE DUP1 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 PUSH2 0x2B58 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2B46 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2B8B JUMPI JUMPDEST PUSH2 0x2B69 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B61 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP 0xAF SWAP10 ADDRESS SWAP5 0xC8 0xEA LOG0 0xAB 0xDF 0xFC 0xC6 CODESIZE 0xBC DUP14 DUP8 0xF9 0xC9 0xA5 0xF SWAP5 TSTORE 0xB9 0xB9 SWAP11 0xB0 0xB6 PUSH9 0x1EAB4F4F05AF993094 0xC8 0xEA LOG0 0xAB 0xDF 0xFC 0xC6 CODESIZE 0xBC DUP14 DUP8 0xF9 0xC9 0xA5 0xF SWAP5 TSTORE 0xB9 0xB9 SWAP11 0xB0 0xB6 PUSH9 0x1EAB4F4F01F7D7E697 CALLDATASIZE DIV SMOD 0xAF PUSH19 0xF21B9DD15AD33DCCEC16D662D65C043A3B77C0 0xC9 0xD1 0xB2 PUSH11 0x360894A13BA1A3210667C8 0x28 BLOBHASH 0x2D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCF0C57E16840DF040F15088 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 0xAF SWAP10 ADDRESS SWAP5 0xC8 0xEA LOG0 0xAB 0xDF 0xFC 0xC6 CODESIZE 0xBC DUP14 DUP8 0xF9 0xC9 0xA5 0xF SWAP5 TSTORE 0xB9 0xB9 SWAP11 0xB0 0xB6 PUSH9 0x1EAB4F4F06A2646970 PUSH7 0x73582212204C2B PUSH8 0x4C8474FF844D687F CREATE2 0x2E 0xEB 0x2C CHAINID 0x29 DUP5 DUP13 0x26 0xDB LT 0xB3 0xB8 PUSH15 0x39A97F75E5343264736F6C63430008 XOR STOP CALLER ","sourceMap":"1523:13186:15:-:0;;;;;;;1171:4:2;1163:13;;1523:13186:15;;;;;;1163:13:2;1523:13186:15;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":853,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":7365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":2161,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":10922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":2216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32_fromMemory":{"entryPoint":6662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_IERC20":{"entryPoint":6062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32":{"entryPoint":6156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":481,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_array_contract_IStrategy_dyn":{"entryPoint":7486,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_array_struct_OperatorDirectedRewardsSubmission_calldata_dyn_calldata":{"entryPoint":6255,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_rational_by":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_struct_SignatureWithSaltAndExpiry_calldata":{"entryPoint":6677,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":1460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_OperatorReward_calldata_dyn_calldata":{"entryPoint":6073,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_OperatorValidData_dyn":{"entryPoint":989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_address_address_bytes32_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_contract_IEigenPodManager":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_stringliteral_301a_bytes32_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":4212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":6222,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_array_struct_OperatorReward_calldata_dyn_calldata":{"entryPoint":5877,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_contract_IStrategy_dyn":{"entryPoint":7026,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_OperatorValidData_dyn":{"entryPoint":5477,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_OperatorDataExtended":{"entryPoint":5818,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2119,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_OperatorValidData_dyn":{"entryPoint":5454,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":2134,"id":null,"parameterSlots":1,"returnSlots":1},"array_pop_array_bytes32_dyn_storage_ptr":{"entryPoint":9555,"id":null,"parameterSlots":0,"returnSlots":0},"array_pop_array_bytes32_dyn_storage_ptr_22999":{"entryPoint":9451,"id":null,"parameterSlots":0,"returnSlots":0},"calldata_access_array_struct_StrategyAndMultiplier_calldata_dyn_calldata":{"entryPoint":6010,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_access_string_calldata":{"entryPoint":6173,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_array_index_access_struct_OperatorDirectedRewardsSubmission_calldata_dyn_calldata":{"entryPoint":5843,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_struct_OperatorReward_calldata_dyn_calldata":{"entryPoint":5930,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":5987,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_14893":{"entryPoint":5968,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint64":{"entryPoint":6750,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8134,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256_14891":{"entryPoint":8119,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_AVS_DIRECTORY":{"entryPoint":4347,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_EIGEN_DELEGATION_MANAGER":{"entryPoint":5097,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_EIGEN_POD_MANAGER":{"entryPoint":864,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_EIGEN_REWARDS_COORDINATOR":{"entryPoint":905,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPGRADE_INTERFACE_VERSION":{"entryPoint":4285,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_calculateOperatorAVSRegistrationDigestHash":{"entryPoint":3709,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ecdsa_check":{"entryPoint":2801,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_finishDeregisterOperator":{"entryPoint":4607,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDeregistrationDelay":{"entryPoint":2999,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getOperator":{"entryPoint":2715,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getOperatorRestakedStrategies":{"entryPoint":1529,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getOperators":{"entryPoint":1188,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRestakeableStrategies":{"entryPoint":4980,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":503,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_latestRewardedEra":{"entryPoint":946,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":3122,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proxiableUUID":{"entryPoint":2608,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_registerOperator":{"entryPoint":4388,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":2892,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAllowlistRestakingStrategy":{"entryPoint":1808,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setClaimerFor":{"entryPoint":3585,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDeregistrationDelay":{"entryPoint":3069,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_startDeregisterOperator":{"entryPoint":1581,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_submitOperatorRewards":{"entryPoint":3176,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":5138,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateAVSMetadataURI":{"entryPoint":4057,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeToAndCall":{"entryPoint":2246,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_uint64":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":7172,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2086,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14808":{"entryPoint":2008,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_14853":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_22993":{"entryPoint":2059,"id":null,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":10095,"id":3282,"parameterSlots":1,"returnSlots":1},"fun_add_14818":{"entryPoint":10231,"id":3282,"parameterSlots":1,"returnSlots":1},"fun_at":{"entryPoint":9404,"id":3416,"parameterSlots":1,"returnSlots":1},"fun_at_14796":{"entryPoint":9339,"id":3416,"parameterSlots":1,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":10943,"id":1353,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":9176,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":8417,"id":122,"parameterSlots":0,"returnSlots":0},"fun_functionDelegateCall":{"entryPoint":10760,"id":1575,"parameterSlots":2,"returnSlots":1},"fun_getAvsOperatorStatus":{"entryPoint":7220,"id":3954,"parameterSlots":1,"returnSlots":1},"fun_getOperator":{"entryPoint":8474,"id":4907,"parameterSlots":1,"returnSlots":1},"fun_getOperatorRestakedStrategies":{"entryPoint":7762,"id":4634,"parameterSlots":1,"returnSlots":1},"fun_getOperatorStake":{"entryPoint":7566,"id":4795,"parameterSlots":2,"returnSlots":1},"fun_getStrategies":{"entryPoint":7076,"id":4854,"parameterSlots":0,"returnSlots":1},"fun_initialize_inner":{"entryPoint":5183,"id":null,"parameterSlots":5,"returnSlots":0},"fun_remove":{"entryPoint":9637,"id":3366,"parameterSlots":1,"returnSlots":1},"fun_remove_14823":{"entryPoint":9890,"id":3366,"parameterSlots":1,"returnSlots":1},"fun_safeIncreaseAllowance":{"entryPoint":8825,"id":1221,"parameterSlots":3,"returnSlots":0},"fun_setDeregistrationDelay":{"entryPoint":6893,"id":4935,"parameterSlots":1,"returnSlots":0},"fun_sortAddresses":{"entryPoint":8147,"id":5057,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":10619,"id":2113,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":6777,"id":null,"parameterSlots":1,"returnSlots":0},"fun_tryRecover":{"entryPoint":10790,"id":2028,"parameterSlots":4,"returnSlots":3},"fun_tryRecover_1840":{"entryPoint":10549,"id":1840,"parameterSlots":2,"returnSlots":3},"fun_updateLatestRewardedEra":{"entryPoint":8594,"id":4353,"parameterSlots":1,"returnSlots":0},"fun_upgradeToAndCall":{"entryPoint":10385,"id":808,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":11057,"id":1615,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":7747,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_struct_OperatorData_storage_of_address":{"entryPoint":5636,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22998":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_OperatorValidData_dyn":{"entryPoint":5798,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_OperatorValidData_dyn_14800":{"entryPoint":5780,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_onlyInitializing":{"entryPoint":7006,"id":357,"parameterSlots":1,"returnSlots":0},"panic_error_0x11":{"entryPoint":5946,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5604,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5758,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1986,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_contract_IERC20":{"entryPoint":6000,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_contract_IStrategy":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_OperatorData":{"entryPoint":5693,"id":null,"parameterSlots":1,"returnSlots":1},"revert_forward":{"entryPoint":6650,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":9223,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_bytes32_dyn_23001":{"entryPoint":9272,"id":null,"parameterSlots":1,"returnSlots":2},"storage_set_to_zero_struct_OperatorData":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_14794":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_contract_IEigenPodManager_to_contract_IEigenPodManager":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_contract_IEigenPodManager_to_contract_IEigenPodManager_14829":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_contract_IEigenPodManager_to_contract_IEigenPodManager_14830":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_contract_IEigenPodManager_to_contract_IEigenPodManager_14831":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint64_to_uint64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint64_to_uint64_14792":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_assert_enum_OperatorAVSRegistrationStatus":{"entryPoint":5626,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":10609,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":459,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1798,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":2312},{"length":32,"start":2627}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062feb1d8146101c65780630a732358146101c1578063141fbdf2146101bc5780631ed6e115146101b757806327a099d8146101b257806333cfb7b7146101ad578063389517e4146101a857806343adc491146101a35780634f1ef2861461019e57806352d1902d146101995780635865c60c146101945780636d50275d1461018f578063715018a61461018a5780638495feab1461018557806384a3f19b146101805780638da5cb5b1461017b5780639375e71314610176578063a0169ddd14610171578063a1060c881461016c578063a98fb35514610167578063ad3cb1cc14610162578063ad656c561461015d578063ca1e1d6714610158578063e367216314610153578063e481af9d1461014e578063f2251b0f146101495763f2fde38b1461014457600080fd5b611412565b6113e9565b611374565b6111ff565b611124565b6110fb565b6110bd565b610fd9565b610e7d565b610e01565b610c68565b610c32565b610bfd565b610bb7565b610b4c565b610af1565b610a9b565b610a30565b6108c6565b610710565b61062d565b6105f9565b6104a4565b6103b2565b610389565b610360565b6101f7565b6001600160a01b038116036101dc57565b600080fd5b608435906001600160401b03821682036101dc57565b346101dc5760a03660031901126101dc57600435610214816101cb565b60243590610221826101cb565b60443561022d816101cb565b606435610239816101cb565b6102416101e1565b91600080516020612c3583398151915254946001600160401b0360ff8760401c161596168015908161034d575b6001149081610343575b15908161033a575b5061032857600080516020612c35833981519152805467ffffffffffffffff191660011790556102b494866103035761143f565b6102ba57005b600080516020612c35833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020612c35833981519152805460ff60401b1916600160401b17905561143f565b60405163f92ee8a960e01b8152600490fd5b90501538610280565b303b159150610278565b87915061026e565b60009103126101dc57565b346101dc5760003660031901126101dc576000546040516001600160a01b039091168152602090f35b346101dc5760003660031901126101dc576002546040516001600160a01b039091168152602090f35b346101dc5760003660031901126101dc576020600080516020612bb583398151915254604051908152f35b6020808201908083528351809252604092604081018260408560051b840101960194600080935b86851061041657505050505050505090565b9091929394959697603f198282030185528689519160808260a082840193600180831b039384885116825283880151848301528a8801518b8301526060809801519782015286518095520194019186915b8183106104885750505050806001929a019501950193969594929190610404565b835181168652948401948b949390930192600190920191610467565b346101dc5760003660031901126101dc57600080516020612bd5833981519152546104ce81611565565b6104d6611ba4565b60005b838110610503576104f683856104fa575b604051918291826103dd565b0390f35b600081526104ea565b8061052161051561051560019461247b565b6001600160a01b031690565b8261052b82611c34565b610534816115fa565b14610541575b50016104d9565b60208061055561055084611604565b61163d565b01516105618684611d8e565b61057261056d85611e52565b611fd3565b9261058d61057e610847565b6001600160a01b039096168652565b840152604083015260608201526105a385611694565b526105ad84611694565b503861053a565b602090602060408183019282815285518094520193019160005b8281106105dc575050505090565b83516001600160a01b0316855293810193928101926001016105ce565b346101dc5760203660031901126101dc576104f661062160043561061c816101cb565b611e52565b604051918291826105b4565b346101dc576000806003193601126107035761064833611c34565b60028110156106fe57156106ec573381527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f00602052604081206001600160401b0390818154166106da576106b29143166001600160401b03166001600160401b0319825416179055565b337f34e20e11f51d19d6e90f5aaea605cb369f34ad23805c51d2e77d05c8208c85858280a280f35b604051630ebf7f5960e31b8152600490fd5b6040516325ec6c1f60e01b8152600490fd5b6115e4565b80fd5b801515036101dc57565b346101dc5760403660031901126101dc5760043561072d816101cb565b6024359061073a82610706565b6107426120e1565b81156107ab5761075a6001600160a01b03821661276f565b156107995760405191151582526001600160a01b0316907f74d2e573146a4c9fbfd23124ce9007a97aebeb715219b83507ec3a05209486bd90602090a2005b6040516379fdfc7d60e01b8152600490fd5b6107bd6001600160a01b0382166125a5565b61075a565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116107eb57604052565b6107c2565b604081019081106001600160401b038211176107eb57604052565b608081019081106001600160401b038211176107eb57604052565b90601f801991011681019081106001600160401b038211176107eb57604052565b604051906108548261080b565b565b6001600160401b0381116107eb57601f01601f191660200190565b92919261087d82610856565b9161088b6040519384610826565b8294818452818301116101dc578281602093846000960137010152565b9080601f830112156101dc578160206108c393359101610871565b90565b60403660031901126101dc5760048035906108e0826101cb565b6024356001600160401b0381116101dc576108fe90369083016108a8565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610a14575b50610a035790602083926109466120e1565b6040516352d1902d60e01b8152938491829088165afa600092816109d2575b50610993575050604051634c9c8ce360e01b81526001600160a01b0390921690820190815281906020010390fd5b8383600080516020612c1583398151915284036109b6576109b48383612891565b005b604051632a87526960e21b815290810184815281906020010390fd5b6109f591935060203d6020116109fc575b6109ed8183610826565b810190611a06565b9138610965565b503d6109e3565b60405163703e46dd60e11b81528390fd5b905081600080516020612c158339815191525416141538610934565b346101dc5760003660031901126101dc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610a89576020604051600080516020612c158339815191528152f35b60405163703e46dd60e11b8152600490fd5b346101dc5760203660031901126101dc576040610acb600435610abd816101cb565b610ac56116ba565b5061211a565b60208251916fffffffffffffffffffffffffffffffff8151168352015115156020820152f35b346101dc5760403660031901126101dc576024356001600160401b0381116101dc57610b3a610b31610b2960209336906004016108a8565b600435612935565b9092919261297b565b6040516001600160a01b039091168152f35b346101dc5760008060031936011261070357610b666120e1565b600080516020612b9583398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346101dc5760003660031901126101dc5760206001600160401b037faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f035416604051908152f35b346101dc5760203660031901126101dc576004356001600160401b03811681036101dc576109b490610c2d6120e1565b611aed565b346101dc5760003660031901126101dc57600080516020612b95833981519152546040516001600160a01b039091168152602090f35b346101dc576040806003193601126101dc576024356001600160401b03918282116101dc57366023830112156101dc5781600401359283116101dc576024820191602436918560051b0101116101dc57610cc06120e1565b610ccb600435612192565b60005b838110610d6d575050600254610cec906001600160a01b0316610515565b91823b156101dc57610d199260009283604051809681958294634e5cd2fd60e11b8452306004850161186f565b03925af18015610d6857610d4f575b7f410f403ed28055ee05512c23d09c2b582fa6d23119e026c0cfc4aa615cab07bb600080a1005b80610d5c610d62926107d8565b80610355565b38610d28565b6119fa565b610d788185856116d3565b600090838101610d8881836116f5565b849291505b808310610dd15750505060019291610db06105156105156020610dcb9501611770565b600254610dc5906001600160a01b0316610515565b90612279565b01610cce565b909193610df86001916020610df088610dea888a6116f5565b9061172a565b013590611763565b94019190610d8d565b346101dc576000602036600319011261070357600435610e20816101cb565b610e286120e1565b6002546001600160a01b0390811691839190833b15610e795760249083604051958694859363a0169ddd60e01b85521660048401525af18015610d6857610e6d575080f35b610e76906107d8565b80f35b8280fd5b346101dc5760803660031901126101dc5760048035610e9b816101cb565b60243590610ea8826101cb565b600354602090610ec0906001600160a01b0316610515565b60405163f698da2560e01b815294859182905afa918215610d68576104f693600093610faa575b50604080517fda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd602082019081526001600160a01b0394851692820192909252929091166060830152604435608083015260643560a0830152610f8b91610f97918160c081015b0391610f61601f1993848101835282610826565b519020604051938491602083019687909160429261190160f01b8352600283015260228201520190565b03908101835282610826565b5190206040519081529081906020820190565b610f97919350610f8b92610fcf610f4d9260203d6020116109fc576109ed8183610826565b9492509250610ee7565b346101dc576000602036600319011261070357806004356001600160401b03811161107157366023820112156110715761101d903690602481600401359101610871565b6110256120e1565b6003546001600160a01b031690813b1561106d57829161105b9160405194858094819363a98fb35560e01b835260048301611074565b03925af18015610d6857610e6d575080f35b5050fd5b50fd5b6020808252825181830181905290939260005b8281106110a957505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501611087565b346101dc5760003660031901126101dc576104f66040516110dd816107f0565b60058152640352e302e360dc1b602082015260405191829182611074565b346101dc5760003660031901126101dc576003546040516001600160a01b039091168152602090f35b346101dc576003196040368201126101dc57600435906001600160401b0382116101dc5760609082360301126101dc57600354611169906001600160a01b0316610515565b90813b156101dc5761119a6040518093818094639926ee7d60e01b8252600096879586926004013360048401611a15565b03925af18015610d68576111ec575b5060243560016111b833611604565b01556111c3336127f7565b50337f4d0eb1f4bac8744fd2be119845e23b3befc88094b42bcda1204c65694a00f9e58280a280f35b80610d5c6111f9926107d8565b386111a9565b346101dc576000806003193601126107035761121a33611c34565b60028110156106fe57156106ec5761124161123433611604565b546001600160401b031690565b6001600160401b038116156113625761128e61129a916112887faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f03546001600160401b031690565b90611a5e565b6001600160401b031690565b4310611350576003546112b5906001600160a01b0316610515565b803b1561134c576040516351b27a6d60e11b81523360048201529082908290602490829084905af18015610d6857611339575b506113076112f533611604565b60026000918281558260018201550155565b611310336126a2565b50337f6dd4ca66565fb3dee8076c654634c6c4ad949022d809d0394308617d6791218d8280a280f35b80610d5c611346926107d8565b386112e8565b5080fd5b60405163207c116160e01b8152600490fd5b60405163a9e6e7eb60e01b8152600490fd5b346101dc5760003660031901126101dc5760405180600080516020612c55833981519152918254808252602080920193600052600080516020612bf5833981519152916000905b8282106113d2576104f68561062181890382610826565b8354865294850194600193840193909101906113bb565b346101dc5760003660031901126101dc576001546040516001600160a01b039091168152602090f35b346101dc5760203660031901126101dc576109b4600435611432816101cb565b61143a6120e1565b611a79565b9293926001600160a01b039081169291831561153c57811691821561152a5781169485156115185716908115611506576114f5946114bb6114d89261149e610c2d9660018060a01b03166001600160601b0360a01b6000541617600055565b60018060a01b03166001600160601b0360a01b6001541617600155565b60018060a01b03166001600160601b0360a01b6003541617600355565b60018060a01b03166001600160601b0360a01b6002541617600255565b6114fe33611b5e565b6108546123d8565b604051637d2b055f60e11b8152600490fd5b604051632225cdcf60e11b8152600490fd5b604051632023de5360e11b8152600490fd5b604051635b9d55c760e11b8152600490fd5b6001600160401b0381116107eb5760051b60200190565b9061156f8261154e565b60409061157f6040519182610826565b8381528093611590601f199161154e565b019060009260005b8381106115a6575050505050565b81519060808201918083106001600160401b038411176107eb5760209284528681528287818301528785830152606080830152828601015201611598565b634e487b7160e01b600052602160045260246000fd5b600211156106fe57565b6001600160a01b031660009081527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f006020526040902090565b90604051606081016001600160401b0393828210858311176107eb57600260ff91604093845284968154168552600181015460208601520154161515910152565b634e487b7160e01b600052603260045260246000fd5b8051156116a15760200190565b61167e565b80518210156116a15760209160051b010190565b604051906116c7826107f0565b60006020838281520152565b91908110156116a15760051b8101359060be19813603018212156101dc570190565b903590601e19813603018212156101dc57018035906001600160401b0382116101dc57602001918160061b360383136101dc57565b91908110156116a15760061b0190565b634e487b7160e01b600052601160045260246000fd5b906001820180921161175e57565b61173a565b9190820180921161175e57565b356108c3816101cb565b9035601e19823603018112156101dc5701602081359101916001600160401b0382116101dc578160061b360383136101dc57565b3590610854826101cb565b9190808252602080920192916000905b8282106117d7575050505090565b9091929360019085356117e9816101cb565b828060a01b031681528286013583820152604080910195019201909291926117c9565b359063ffffffff821682036101dc57565b9035601e19823603018112156101dc5701602081359101916001600160401b0382116101dc5781360383136101dc57565b908060209392818452848401376000828201840152601f01601f1916010190565b926040938481019060018060a01b0380941681528260209287848401525260608082019060608560051b84010197876000945b8786106118b6575050505050505050505090565b90919293949596979899605f198282030186528a3560be19843603018112156101dc57838991019160c08082016118ed858061177a565b9284529082905260e08301916000908f5b8183106119b3575050505083839261194b61199f936119326119238760019a016117ae565b6001600160a01b031684880152565b61193e8b85018561177a565b908483038d8601526117b9565b9161196661195a8c830161180c565b63ffffffff16838d0152565b611982608061197681840161180c565b63ffffffff1690840152565b61199160a0918281019061181d565b92909181850391015261184e565b9c01960196019498979695939291906118a2565b909280959650939193356119c6816101cb565b1681528c840135906001600160601b0382168092036101dc5789818f936001948394015201940192018c949392918f6118fe565b6040513d6000823e3d90fd5b908160209103126101dc575190565b6001600160a01b039091168152604060208201819052608090611a4b611a3b858061181d565b60608487015260a086019161184e565b9360208101356060850152013591015290565b9190916001600160401b038080941691160191821161175e57565b6001600160a01b03908116908115611ad457600080516020612b9583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b60407f7d9c9ce14fd1f11f09bf0faca4d408d3bb5815ceb44368d65b408ebc4401165c917faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f038054916001600160401b0380911691826001600160401b031985161790558351921682526020820152a1565b61085490611b6a6123d8565b61143a6123d8565b90611b7c8261154e565b611b896040519182610826565b8281528092611b9a601f199161154e565b0190602036910137565b600080516020612c558339815191528054611bbe81611b72565b916000805b838110611bd1575050505090565b828252600080516020612bf5833981519152810154600191906001600160a01b0316611bfd82886116a6565b5201611bc3565b3d15611c2f573d90611c1582610856565b91611c236040519384610826565b82523d6000602084013e565b606090565b6003546040516349075da360e01b602082019081523060248301526001600160a01b0393841660448301529190921691611c7b81606481015b03601f198101835282610826565b6000928392839251915afa611c8e611c04565b9015611cb35760208180518101031261134c5760200151906002821015610703575090565b604051633d635fe960e11b8152600490fd5b60209081818403126101dc578051906001600160401b0382116101dc57019180601f840112156101dc578251611cfa8161154e565b93611d086040519586610826565b818552838086019260051b8201019283116101dc578301905b828210611d2f575050505090565b81518152908301908301611d21565b6001600160a01b03918216815260406020808301829052845191830182905260609092019382019160005b828110611d7857505050505090565b8351851686529481019492810192600101611d69565b60018054604051639004134760e01b815293919260009285926001600160a01b03169183918291611dc3919060048401611d3e565b03915afa918215610d6857600092611e1e575b50806000926000925b611dea575b50505090565b809391929351841015611e1657611e0184826116a6565b51820180921161175e57828092940192611ddf565b819350611de4565b611e3c9192503d806000833e611e348183610826565b810190611cc5565b9038611dd6565b600019811461175e5760010190565b90606091611e6b6020611e648361211a565b0151151590565b611e73575b50565b9150600080516020612c5583398151915254611e8e81611b72565b9260005b828110611f8f575060018054611ed89392600091879190611ebb906001600160a01b0316610515565b90604051809781948293639004134760e01b845260048401611d3e565b03915afa928315610d6857600093611f72575b50600092611ef883611b72565b95845b848110611f1357505050508110611f0f5750565b8252565b80611f1f8592856116a6565b51611f2b575b01611efb565b611f6d611f4b610515611f3e84876116a6565b516001600160a01b031690565b611f5e611f578a611e43565b998c6116a6565b6001600160a01b039091169052565b611f25565b611f889193503d806000833e611e348183610826565b9138611eeb565b80611fb1611fa76105156105156105156001966124bc565b611f5e83896116a6565b01611e92565b60001981019190821161175e57565b9190820391821161175e57565b805180156120dd57611fe490611b72565b9060005b8151811015612014578061200e612004611f3e600194866116a6565b611f5e83876116a6565b01611fe8565b50506000905b6120248151611fb7565b8210156120d85760005b61204161203c848451611fc6565b611fb7565b8110156120cd578061205b610515611f3e600194866116a6565b612076610515610515611f3e61207086611750565b886116a6565b90838060a01b03161161208a575b0161202e565b6120c86120a2611f3e61209c84611750565b866116a6565b6120be6120b2611f3e85886116a6565b611f5e61207086611750565b611f5e83866116a6565b612084565b50906001019061201a565b905090565b5090565b600080516020612b95833981519152546001600160a01b0316330361210257565b60405163118cdaa760e01b8152336004820152602490fd5b6121226116ba565b506001600160a01b03811660009081527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f0060205260409020546001600160401b03169061216e90611c34565b60028110156106fe5760019060405192612187846107f0565b835214602082015290565b801561223457600080516020612bb583398151915254806121c05750600080516020612bb583398151915255565b6001810180911161175e5781036121e357600080516020612bb583398151915255565b60405162461bcd60e51b8152602060048201526024808201527f6c617465737420726577617264656420657261206d75737420626520696e206160448201526320726f7760e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601b60248201527f72657761726420657261206d757374206d6f7265207468616e203000000000006044820152606490fd5b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015292939092602091838216908386604481855afa958615610d68576000966123a9575b50850180951161175e57600080604051968588019063095ea7b360e01b958683528a1660248a01526044890152604488526122f88861080b565b87519082855af190612308611c04565b82612376575b508161236b575b5015612323575b5050505050565b604051918201526001600160a01b039093166024840152600060448401526123619261235c906123568160648101611c6d565b82612abf565b612abf565b388080808061231c565b90503b151538612315565b809192505190848215928315612391575b505050903861230e565b6123a19350820181019101612aaa565b388481612387565b9095508381813d83116123d1575b6123c18183610826565b810103126101dc575194386122be565b503d6123b7565b60ff600080516020612c358339815191525460401c16156123f557565b604051631afcd79f60e31b8152600490fd5b600080516020612c5583398151915280548210156116a157600052600080516020612bf58339815191520190600090565b600080516020612bd583398151915280548210156116a1576000527f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36b0190600090565b600080516020612bd583398151915280548210156116a1576000527f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36b015490565b600080516020612c5583398151915280548210156116a157600052600080516020612bf5833981519152015490565b600080516020612c55833981519152805490811561253d57600019820191808310156116a1577ff7d7e697360407af72f21b9dd15ad33dccec16d662d65c043a3b77c0c9d1b269600091838352015555565b634e487b7160e01b600052603160045260246000fd5b600080516020612bd5833981519152805490811561253d57600019820191808310156116a1577f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36a600091838352015555565b60008181527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f076020526040902054801561269b57600019918183019180831161175e57600080516020612c558339815191525493840193841161175e57838360009561264b9503612651575b50505061261c6124eb565b6000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f07602052604060002090565b55600190565b61261c6126799161267161266761269295612407565b90549060031b1c90565b928391612407565b90919082549060031b91821b91600019901b1916179055565b55388080612611565b5050600090565b60008181527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f026020526040902054801561269b57600019918183019180831161175e57600080516020612bd58339815191525493840193841161175e57838360009561264b9503612748575b505050612719612553565b6000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f02602052604060002090565b6127196126799161275e61266761276695612438565b928391612438565b5538808061270e565b806000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f07806020526040600020541560001461269b57600080516020612c558339815191528054600160401b8110156107eb57600181018083558110156116a1578390600080516020612bf583398151915201555491600052602052604060002055600190565b806000527faf993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f02806020526040600020541560001461269b57600080516020612bd58339815191528054600160401b8110156107eb57600181018083558110156116a15783907f6d5632cd9a7b6dfee21fdcf6c7874238d88c254239c9613977670fb28d0df36b01555491600052602052604060002055600190565b90813b1561291457600080516020612c1583398151915280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051156128f957611e7091612a08565b50503461290257565b60405163b398979f60e01b8152600490fd5b604051634c9c8ce360e01b81526001600160a01b0383166004820152602490fd5b81519190604183036129665761295f92506020820151906060604084015193015160001a90612a26565b9192909190565b505060009160029190565b600411156106fe57565b61298481612971565b8061298d575050565b61299681612971565b600181036129b05760405163f645eedf60e01b8152600490fd5b6129b981612971565b600281036129da5760405163fce698f760e01b815260048101839052602490fd5b806129e6600392612971565b146129ee5750565b6040516335e2f38360e21b81526004810191909152602490fd5b6000806108c393602081519101845af4612a20611c04565b91612b31565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612a9e57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610d685780516001600160a01b03811615612a9557918190565b50809160019190565b50505060009160039190565b908160209103126101dc57516108c381610706565b600080612ae89260018060a01b03169360208151910182865af1612ae1611c04565b9083612b31565b8051908115159182612b16575b5050612afe5750565b60249060405190635274afe760e01b82526004820152fd5b612b299250602080918301019101612aaa565b153880612af5565b90612b585750805115612b4657805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612b8b575b612b69575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612b6156fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300af993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f05af993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f01f7d7e697360407af72f21b9dd15ad33dccec16d662d65c043a3b77c0c9d1b26a360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00af993094c8eaa0abdffcc638bc8d87f9c9a50f945db9b99ab0b6681eab4f4f06a26469706673582212204c2b674c8474ff844d687ff52eeb2c4629848c26db10b3b86e39a97f75e5343264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFEB1D8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA732358 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x141FBDF2 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x1ED6E115 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x27A099D8 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x33CFB7B7 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x389517E4 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x43ADC491 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5865C60C EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x6D50275D EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x8495FEAB EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x84A3F19B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9375E713 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xA0169DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xA1060C88 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xA98FB355 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xAD656C56 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xCA1E1D67 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xE3672163 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xE481AF9D EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xF2251B0F EQ PUSH2 0x149 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1124 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x10BD JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x214 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x221 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x22D DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x239 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x241 PUSH2 0x1E1 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND ISZERO SWAP7 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x34D JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x343 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x33A JUMPI JUMPDEST POP PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2B4 SWAP5 DUP7 PUSH2 0x303 JUMPI PUSH2 0x143F JUMP JUMPDEST PUSH2 0x2BA JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR SWAP1 SSTORE PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x280 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x278 JUMP JUMPDEST DUP8 SWAP2 POP PUSH2 0x26E JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x20 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 SWAP3 PUSH1 0x40 DUP2 ADD DUP3 PUSH1 0x40 DUP6 PUSH1 0x5 SHL DUP5 ADD ADD SWAP7 ADD SWAP5 PUSH1 0x0 DUP1 SWAP4 JUMPDEST DUP7 DUP6 LT PUSH2 0x416 JUMPI POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP6 MSTORE DUP7 DUP10 MLOAD SWAP2 PUSH1 0x80 DUP3 PUSH1 0xA0 DUP3 DUP5 ADD SWAP4 PUSH1 0x1 DUP1 DUP4 SHL SUB SWAP4 DUP5 DUP9 MLOAD AND DUP3 MSTORE DUP4 DUP9 ADD MLOAD DUP5 DUP4 ADD MSTORE DUP11 DUP9 ADD MLOAD DUP12 DUP4 ADD MSTORE PUSH1 0x60 DUP1 SWAP9 ADD MLOAD SWAP8 DUP3 ADD MSTORE DUP7 MLOAD DUP1 SWAP6 MSTORE ADD SWAP5 ADD SWAP2 DUP7 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x488 JUMPI POP POP POP POP DUP1 PUSH1 0x1 SWAP3 SWAP11 ADD SWAP6 ADD SWAP6 ADD SWAP4 SWAP7 SWAP6 SWAP5 SWAP3 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST DUP4 MLOAD DUP2 AND DUP7 MSTORE SWAP5 DUP5 ADD SWAP5 DUP12 SWAP5 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x467 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x4CE DUP2 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x503 JUMPI PUSH2 0x4F6 DUP4 DUP6 PUSH2 0x4FA JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3DD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x4EA JUMP JUMPDEST DUP1 PUSH2 0x521 PUSH2 0x515 PUSH2 0x515 PUSH1 0x1 SWAP5 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x52B DUP3 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x534 DUP2 PUSH2 0x15FA JUMP JUMPDEST EQ PUSH2 0x541 JUMPI JUMPDEST POP ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH2 0x555 PUSH2 0x550 DUP5 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x163D JUMP JUMPDEST ADD MLOAD PUSH2 0x561 DUP7 DUP5 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x572 PUSH2 0x56D DUP6 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 PUSH2 0x58D PUSH2 0x57E PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE JUMP JUMPDEST DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x5A3 DUP6 PUSH2 0x1694 JUMP JUMPDEST MSTORE PUSH2 0x5AD DUP5 PUSH2 0x1694 JUMP JUMPDEST POP CODESIZE PUSH2 0x53A JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5DC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x5CE JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH2 0x4F6 PUSH2 0x621 PUSH1 0x4 CALLDATALOAD PUSH2 0x61C DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5B4 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x703 JUMPI PUSH2 0x648 CALLER PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI ISZERO PUSH2 0x6EC JUMPI CALLER DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 SLOAD AND PUSH2 0x6DA JUMPI PUSH2 0x6B2 SWAP2 NUMBER AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH32 0x34E20E11F51D19D6E90F5AAEA605CB369F34AD23805C51D2E77D05C8208C8585 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEBF7F59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25EC6C1F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x15E4 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x72D DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x73A DUP3 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x742 PUSH2 0x20E1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x7AB JUMPI PUSH2 0x75A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x276F JUMP JUMPDEST ISZERO PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x74D2E573146A4C9FBFD23124CE9007A97AEBEB715219B83507EC3A05209486BD SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79FDFC7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x7BD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25A5 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7EB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x854 DUP3 PUSH2 0x80B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x87D DUP3 PUSH2 0x856 JUMP JUMPDEST SWAP2 PUSH2 0x88B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x826 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1DC JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1DC JUMPI DUP2 PUSH1 0x20 PUSH2 0x8C3 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x871 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH2 0x8E0 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DC JUMPI PUSH2 0x8FE SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xA14 JUMPI JUMPDEST POP PUSH2 0xA03 JUMPI SWAP1 PUSH1 0x20 DUP4 SWAP3 PUSH2 0x946 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 DUP9 AND GAS STATICCALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x9D2 JUMPI JUMPDEST POP PUSH2 0x993 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 PUSH1 0x20 ADD SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 SUB PUSH2 0x9B6 JUMPI PUSH2 0x9B4 DUP4 DUP4 PUSH2 0x2891 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 DUP2 MSTORE DUP2 SWAP1 PUSH1 0x20 ADD SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F5 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9FC JUMPI JUMPDEST PUSH2 0x9ED DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x965 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND EQ ISZERO CODESIZE PUSH2 0x934 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xA89 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x40 PUSH2 0xACB PUSH1 0x4 CALLDATALOAD PUSH2 0xABD DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0x16BA JUMP JUMPDEST POP PUSH2 0x211A JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD SWAP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP4 MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1DC JUMPI PUSH2 0xB3A PUSH2 0xB31 PUSH2 0xB29 PUSH1 0x20 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x2935 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x703 JUMPI PUSH2 0xB66 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F03 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1DC JUMPI PUSH2 0x9B4 SWAP1 PUSH2 0xC2D PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0x1AED JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x40 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT PUSH2 0x1DC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1DC JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x1DC JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1DC JUMPI PUSH2 0xCC0 PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0xCCB PUSH1 0x4 CALLDATALOAD PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xD6D JUMPI POP POP PUSH1 0x2 SLOAD PUSH2 0xCEC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x1DC JUMPI PUSH2 0xD19 SWAP3 PUSH1 0x0 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x4E5CD2FD PUSH1 0xE1 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD PUSH2 0x186F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD4F JUMPI JUMPDEST PUSH32 0x410F403ED28055EE05512C23D09C2B582FA6D23119E026C0CFC4AA615CAB07BB PUSH1 0x0 DUP1 LOG1 STOP JUMPDEST DUP1 PUSH2 0xD5C PUSH2 0xD62 SWAP3 PUSH2 0x7D8 JUMP JUMPDEST DUP1 PUSH2 0x355 JUMP JUMPDEST CODESIZE PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x19FA JUMP JUMPDEST PUSH2 0xD78 DUP2 DUP6 DUP6 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP2 ADD PUSH2 0xD88 DUP2 DUP4 PUSH2 0x16F5 JUMP JUMPDEST DUP5 SWAP3 SWAP2 POP JUMPDEST DUP1 DUP4 LT PUSH2 0xDD1 JUMPI POP POP POP PUSH1 0x1 SWAP3 SWAP2 PUSH2 0xDB0 PUSH2 0x515 PUSH2 0x515 PUSH1 0x20 PUSH2 0xDCB SWAP6 ADD PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xDC5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP1 PUSH2 0x2279 JUMP JUMPDEST ADD PUSH2 0xCCE JUMP JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0xDF8 PUSH1 0x1 SWAP2 PUSH1 0x20 PUSH2 0xDF0 DUP9 PUSH2 0xDEA DUP9 DUP11 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 PUSH2 0x172A JUMP JUMPDEST ADD CALLDATALOAD SWAP1 PUSH2 0x1763 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x703 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE20 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 SWAP2 SWAP1 DUP4 EXTCODESIZE ISZERO PUSH2 0xE79 JUMPI PUSH1 0x24 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA0169DDD PUSH1 0xE0 SHL DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0xE6D JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xE76 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH2 0xE9B DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xEA8 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x20 SWAP1 PUSH2 0xEC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF698DA25 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD68 JUMPI PUSH2 0x4F6 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0xFAA JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xDA2C89BAFDD34776A2B8BB9C83C82F419E20CC8C67207F70EDD58249B92661BD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xF8B SWAP2 PUSH2 0xF97 SWAP2 DUP2 PUSH1 0xC0 DUP2 ADD JUMPDEST SUB SWAP2 PUSH2 0xF61 PUSH1 0x1F NOT SWAP4 DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x826 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 DUP8 SWAP1 SWAP2 PUSH1 0x42 SWAP3 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x826 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF97 SWAP2 SWAP4 POP PUSH2 0xF8B SWAP3 PUSH2 0xFCF PUSH2 0xF4D SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9FC JUMPI PUSH2 0x9ED DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST SWAP5 SWAP3 POP SWAP3 POP PUSH2 0xEE7 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x703 JUMPI DUP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1071 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1071 JUMPI PUSH2 0x101D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1025 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x106D JUMPI DUP3 SWAP2 PUSH2 0x105B SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA98FB355 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1074 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0xE6D JUMPI POP DUP1 RETURN JUMPDEST POP POP REVERT JUMPDEST POP REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x10A9 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x1087 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH2 0x4F6 PUSH1 0x40 MLOAD PUSH2 0x10DD DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1074 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x3 NOT PUSH1 0x40 CALLDATASIZE DUP3 ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI PUSH1 0x60 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x3 SLOAD PUSH2 0x1169 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x1DC JUMPI PUSH2 0x119A PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 DUP1 SWAP5 PUSH4 0x9926EE7D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x0 SWAP7 DUP8 SWAP6 DUP7 SWAP3 PUSH1 0x4 ADD CALLER PUSH1 0x4 DUP5 ADD PUSH2 0x1A15 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0x11EC JUMPI JUMPDEST POP PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH2 0x11B8 CALLER PUSH2 0x1604 JUMP JUMPDEST ADD SSTORE PUSH2 0x11C3 CALLER PUSH2 0x27F7 JUMP JUMPDEST POP CALLER PUSH32 0x4D0EB1F4BAC8744FD2BE119845E23B3BEFC88094B42BCDA1204C65694A00F9E5 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP1 PUSH2 0xD5C PUSH2 0x11F9 SWAP3 PUSH2 0x7D8 JUMP JUMPDEST CODESIZE PUSH2 0x11A9 JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x703 JUMPI PUSH2 0x121A CALLER PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI ISZERO PUSH2 0x6EC JUMPI PUSH2 0x1241 PUSH2 0x1234 CALLER PUSH2 0x1604 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND ISZERO PUSH2 0x1362 JUMPI PUSH2 0x128E PUSH2 0x129A SWAP2 PUSH2 0x1288 PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F03 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST NUMBER LT PUSH2 0x1350 JUMPI PUSH1 0x3 SLOAD PUSH2 0x12B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH4 0x51B27A6D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH2 0x1339 JUMPI JUMPDEST POP PUSH2 0x1307 PUSH2 0x12F5 CALLER PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST PUSH2 0x1310 CALLER PUSH2 0x26A2 JUMP JUMPDEST POP CALLER PUSH32 0x6DD4CA66565FB3DEE8076C654634C6C4AD949022D809D0394308617D6791218D DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP1 PUSH2 0xD5C PUSH2 0x1346 SWAP3 PUSH2 0x7D8 JUMP JUMPDEST CODESIZE PUSH2 0x12E8 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x207C1161 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9E6E7EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x13D2 JUMPI PUSH2 0x4F6 DUP6 PUSH2 0x621 DUP2 DUP10 SUB DUP3 PUSH2 0x826 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x13BB JUMP JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DC JUMPI PUSH2 0x9B4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1432 DUP2 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x143A PUSH2 0x20E1 JUMP JUMPDEST PUSH2 0x1A79 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x153C JUMPI DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x152A JUMPI DUP2 AND SWAP5 DUP6 ISZERO PUSH2 0x1518 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0x1506 JUMPI PUSH2 0x14F5 SWAP5 PUSH2 0x14BB PUSH2 0x14D8 SWAP3 PUSH2 0x149E PUSH2 0xC2D SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x14FE CALLER PUSH2 0x1B5E JUMP JUMPDEST PUSH2 0x854 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7D2B055F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2225CDCF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2023DE53 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B9D55C7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x156F DUP3 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x157F PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x826 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP1 SWAP4 PUSH2 0x1590 PUSH1 0x1F NOT SWAP2 PUSH2 0x154E JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x15A6 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x7EB JUMPI PUSH1 0x20 SWAP3 DUP5 MSTORE DUP7 DUP2 MSTORE DUP3 DUP8 DUP2 DUP4 ADD MSTORE DUP8 DUP6 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MSTORE DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1598 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x6FE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP3 DUP3 LT DUP6 DUP4 GT OR PUSH2 0x7EB JUMPI PUSH1 0x2 PUSH1 0xFF SWAP2 PUSH1 0x40 SWAP4 DUP5 MSTORE DUP5 SWAP7 DUP2 SLOAD AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x167E JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x16C7 DUP3 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xBE NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1DC JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1DC JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DC JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x6 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST PUSH2 0x173A JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST CALLDATALOAD PUSH2 0x8C3 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1DC JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DC JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x854 DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x17D7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x1 SWAP1 DUP6 CALLDATALOAD PUSH2 0x17E9 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP3 DUP7 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP1 SWAP2 ADD SWAP6 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x17C9 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1DC JUMPI JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1DC JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1DC JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP4 DUP5 DUP2 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 SWAP3 DUP8 DUP5 DUP5 ADD MSTORE MSTORE PUSH1 0x60 DUP1 DUP3 ADD SWAP1 PUSH1 0x60 DUP6 PUSH1 0x5 SHL DUP5 ADD ADD SWAP8 DUP8 PUSH1 0x0 SWAP5 JUMPDEST DUP8 DUP7 LT PUSH2 0x18B6 JUMPI POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 PUSH1 0x5F NOT DUP3 DUP3 SUB ADD DUP7 MSTORE DUP11 CALLDATALOAD PUSH1 0xBE NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1DC JUMPI DUP4 DUP10 SWAP2 ADD SWAP2 PUSH1 0xC0 DUP1 DUP3 ADD PUSH2 0x18ED DUP6 DUP1 PUSH2 0x177A JUMP JUMPDEST SWAP3 DUP5 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 PUSH1 0x0 SWAP1 DUP16 JUMPDEST DUP2 DUP4 LT PUSH2 0x19B3 JUMPI POP POP POP POP DUP4 DUP4 SWAP3 PUSH2 0x194B PUSH2 0x199F SWAP4 PUSH2 0x1932 PUSH2 0x1923 DUP8 PUSH1 0x1 SWAP11 ADD PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x193E DUP12 DUP6 ADD DUP6 PUSH2 0x177A JUMP JUMPDEST SWAP1 DUP5 DUP4 SUB DUP14 DUP7 ADD MSTORE PUSH2 0x17B9 JUMP JUMPDEST SWAP2 PUSH2 0x1966 PUSH2 0x195A DUP13 DUP4 ADD PUSH2 0x180C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP4 DUP14 ADD MSTORE JUMP JUMPDEST PUSH2 0x1982 PUSH1 0x80 PUSH2 0x1976 DUP2 DUP5 ADD PUSH2 0x180C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1991 PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD SWAP1 PUSH2 0x181D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x184E JUMP JUMPDEST SWAP13 ADD SWAP7 ADD SWAP7 ADD SWAP5 SWAP9 SWAP8 SWAP7 SWAP6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 SWAP3 DUP1 SWAP6 SWAP7 POP SWAP4 SWAP2 SWAP4 CALLDATALOAD PUSH2 0x19C6 DUP2 PUSH2 0x1CB JUMP JUMPDEST AND DUP2 MSTORE DUP13 DUP5 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1DC JUMPI DUP10 DUP2 DUP16 SWAP4 PUSH1 0x1 SWAP5 DUP4 SWAP5 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD DUP13 SWAP5 SWAP4 SWAP3 SWAP2 DUP16 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1DC JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 SWAP1 PUSH2 0x1A4B PUSH2 0x1A3B DUP6 DUP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x60 DUP5 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 PUSH2 0x184E JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP1 SWAP5 AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AD4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 PUSH32 0x7D9C9CE14FD1F11F09BF0FACA4D408D3BB5815CEB44368D65B408EBC4401165C SWAP2 PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F03 DUP1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP2 AND SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP6 AND OR SWAP1 SSTORE DUP4 MLOAD SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH2 0x854 SWAP1 PUSH2 0x1B6A PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x143A PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH2 0x1B7C DUP3 PUSH2 0x154E JUMP JUMPDEST PUSH2 0x1B89 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x826 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B9A PUSH1 0x1F NOT SWAP2 PUSH2 0x154E JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH2 0x1BBE DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BD1 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 ADD SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BFD DUP3 DUP9 PUSH2 0x16A6 JUMP JUMPDEST MSTORE ADD PUSH2 0x1BC3 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1C2F JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1C15 DUP3 PUSH2 0x856 JUMP JUMPDEST SWAP2 PUSH2 0x1C23 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x826 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x49075DA3 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x1C7B DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 MLOAD SWAP2 GAS STATICCALL PUSH2 0x1C8E PUSH2 0x1C04 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x1CB3 JUMPI PUSH1 0x20 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x134C JUMPI PUSH1 0x20 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x703 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D635FE9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x1DC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1DC JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1DC JUMPI DUP3 MLOAD PUSH2 0x1CFA DUP2 PUSH2 0x154E JUMP JUMPDEST SWAP4 PUSH2 0x1D08 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x826 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1DC JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D2F JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP4 DUP3 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D78 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 AND DUP7 MSTORE SWAP5 DUP2 ADD SWAP5 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1D69 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x90041347 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP2 SWAP3 PUSH1 0x0 SWAP3 DUP6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH2 0x1DC3 SWAP2 SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0x1D3E JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E1E JUMPI JUMPDEST POP DUP1 PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP3 JUMPDEST PUSH2 0x1DEA JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST DUP1 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP5 LT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E01 DUP5 DUP3 PUSH2 0x16A6 JUMP JUMPDEST MLOAD DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175E JUMPI DUP3 DUP1 SWAP3 SWAP5 ADD SWAP3 PUSH2 0x1DDF JUMP JUMPDEST DUP2 SWAP4 POP PUSH2 0x1DE4 JUMP JUMPDEST PUSH2 0x1E3C SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1E34 DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x175E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x60 SWAP2 PUSH2 0x1E6B PUSH1 0x20 PUSH2 0x1E64 DUP4 PUSH2 0x211A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1E73 JUMPI JUMPDEST POP JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1E8E DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F8F JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x1ED8 SWAP4 SWAP3 PUSH1 0x0 SWAP2 DUP8 SWAP2 SWAP1 PUSH2 0x1EBB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x515 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x90041347 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1D3E JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1F72 JUMPI JUMPDEST POP PUSH1 0x0 SWAP3 PUSH2 0x1EF8 DUP4 PUSH2 0x1B72 JUMP JUMPDEST SWAP6 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F13 JUMPI POP POP POP POP DUP2 LT PUSH2 0x1F0F JUMPI POP JUMP JUMPDEST DUP3 MSTORE JUMP JUMPDEST DUP1 PUSH2 0x1F1F DUP6 SWAP3 DUP6 PUSH2 0x16A6 JUMP JUMPDEST MLOAD PUSH2 0x1F2B JUMPI JUMPDEST ADD PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x1F6D PUSH2 0x1F4B PUSH2 0x515 PUSH2 0x1F3E DUP5 DUP8 PUSH2 0x16A6 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1F5E PUSH2 0x1F57 DUP11 PUSH2 0x1E43 JUMP JUMPDEST SWAP10 DUP13 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1F25 JUMP JUMPDEST PUSH2 0x1F88 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1E34 DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x1EEB JUMP JUMPDEST DUP1 PUSH2 0x1FB1 PUSH2 0x1FA7 PUSH2 0x515 PUSH2 0x515 PUSH2 0x515 PUSH1 0x1 SWAP7 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP10 PUSH2 0x16A6 JUMP JUMPDEST ADD PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x175E JUMPI JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO PUSH2 0x20DD JUMPI PUSH2 0x1FE4 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2014 JUMPI DUP1 PUSH2 0x200E PUSH2 0x2004 PUSH2 0x1F3E PUSH1 0x1 SWAP5 DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP8 PUSH2 0x16A6 JUMP JUMPDEST ADD PUSH2 0x1FE8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x2024 DUP2 MLOAD PUSH2 0x1FB7 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x20D8 JUMPI PUSH1 0x0 JUMPDEST PUSH2 0x2041 PUSH2 0x203C DUP5 DUP5 MLOAD PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x1FB7 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x20CD JUMPI DUP1 PUSH2 0x205B PUSH2 0x515 PUSH2 0x1F3E PUSH1 0x1 SWAP5 DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x2076 PUSH2 0x515 PUSH2 0x515 PUSH2 0x1F3E PUSH2 0x2070 DUP7 PUSH2 0x1750 JUMP JUMPDEST DUP9 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x208A JUMPI JUMPDEST ADD PUSH2 0x202E JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x20A2 PUSH2 0x1F3E PUSH2 0x209C DUP5 PUSH2 0x1750 JUMP JUMPDEST DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x20BE PUSH2 0x20B2 PUSH2 0x1F3E DUP6 DUP9 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1F5E PUSH2 0x2070 DUP7 PUSH2 0x1750 JUMP JUMPDEST PUSH2 0x1F5E DUP4 DUP7 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x2084 JUMP JUMPDEST POP SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x201A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2102 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x2122 PUSH2 0x16BA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 PUSH2 0x216E SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2187 DUP5 PUSH2 0x7F0 JUMP JUMPDEST DUP4 MSTORE EQ PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2234 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD DUP1 PUSH2 0x21C0 JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x175E JUMPI DUP2 SUB PUSH2 0x21E3 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6C617465737420726577617264656420657261206D75737420626520696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20726F77 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72657761726420657261206D757374206D6F7265207468616E20300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x20 SWAP2 DUP4 DUP3 AND SWAP1 DUP4 DUP7 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 SWAP7 PUSH2 0x23A9 JUMPI JUMPDEST POP DUP6 ADD DUP1 SWAP6 GT PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP7 DUP6 DUP9 ADD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP6 DUP7 DUP4 MSTORE DUP11 AND PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0x44 DUP10 ADD MSTORE PUSH1 0x44 DUP9 MSTORE PUSH2 0x22F8 DUP9 PUSH2 0x80B JUMP JUMPDEST DUP8 MLOAD SWAP1 DUP3 DUP6 GAS CALL SWAP1 PUSH2 0x2308 PUSH2 0x1C04 JUMP JUMPDEST DUP3 PUSH2 0x2376 JUMPI JUMPDEST POP DUP2 PUSH2 0x236B JUMPI JUMPDEST POP ISZERO PUSH2 0x2323 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP5 ADD MSTORE PUSH2 0x2361 SWAP3 PUSH2 0x235C SWAP1 PUSH2 0x2356 DUP2 PUSH1 0x64 DUP2 ADD PUSH2 0x1C6D JUMP JUMPDEST DUP3 PUSH2 0x2ABF JUMP JUMPDEST PUSH2 0x2ABF JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x231C JUMP JUMPDEST SWAP1 POP EXTCODESIZE ISZERO ISZERO CODESIZE PUSH2 0x2315 JUMP JUMPDEST DUP1 SWAP2 SWAP3 POP MLOAD SWAP1 DUP5 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x2391 JUMPI JUMPDEST POP POP POP SWAP1 CODESIZE PUSH2 0x230E JUMP JUMPDEST PUSH2 0x23A1 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x2AAA JUMP JUMPDEST CODESIZE DUP5 DUP2 PUSH2 0x2387 JUMP JUMPDEST SWAP1 SWAP6 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23D1 JUMPI JUMPDEST PUSH2 0x23C1 DUP2 DUP4 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1DC JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x22BE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x23F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36B ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP1 DUP4 LT ISZERO PUSH2 0x16A1 JUMPI PUSH32 0xF7D7E697360407AF72F21B9DD15AD33DCCEC16D662D65C043A3B77C0C9D1B269 PUSH1 0x0 SWAP2 DUP4 DUP4 MSTORE ADD SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP1 DUP4 LT ISZERO PUSH2 0x16A1 JUMPI PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36A PUSH1 0x0 SWAP2 DUP4 DUP4 MSTORE ADD SSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F07 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x269B JUMPI PUSH1 0x0 NOT SWAP2 DUP2 DUP4 ADD SWAP2 DUP1 DUP4 GT PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 ADD SWAP4 DUP5 GT PUSH2 0x175E JUMPI DUP4 DUP4 PUSH1 0x0 SWAP6 PUSH2 0x264B SWAP6 SUB PUSH2 0x2651 JUMPI JUMPDEST POP POP POP PUSH2 0x261C PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F07 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x261C PUSH2 0x2679 SWAP2 PUSH2 0x2671 PUSH2 0x2667 PUSH2 0x2692 SWAP6 PUSH2 0x2407 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2407 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2611 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F02 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x269B JUMPI PUSH1 0x0 NOT SWAP2 DUP2 DUP4 ADD SWAP2 DUP1 DUP4 GT PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 ADD SWAP4 DUP5 GT PUSH2 0x175E JUMPI DUP4 DUP4 PUSH1 0x0 SWAP6 PUSH2 0x264B SWAP6 SUB PUSH2 0x2748 JUMPI JUMPDEST POP POP POP PUSH2 0x2719 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F02 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2719 PUSH2 0x2679 SWAP2 PUSH2 0x275E PUSH2 0x2667 PUSH2 0x2766 SWAP6 PUSH2 0x2438 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH2 0x2438 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x270E JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F07 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x269B JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x16A1 JUMPI DUP4 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH32 0xAF993094C8EAA0ABDFFCC638BC8D87F9C9A50F945DB9B99AB0B6681EAB4F4F02 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x269B JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x16A1 JUMPI DUP4 SWAP1 PUSH32 0x6D5632CD9A7B6DFEE21FDCF6C7874238D88C254239C9613977670FB28D0DF36B ADD SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x2914 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x28F9 JUMPI PUSH2 0x1E70 SWAP2 PUSH2 0x2A08 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x2902 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x2966 JUMPI PUSH2 0x295F SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x2A26 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x6FE JUMPI JUMP JUMPDEST PUSH2 0x2984 DUP2 PUSH2 0x2971 JUMP JUMPDEST DUP1 PUSH2 0x298D JUMPI POP POP JUMP JUMPDEST PUSH2 0x2996 DUP2 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x29B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x29B9 DUP2 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x29DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x29E6 PUSH1 0x3 SWAP3 PUSH2 0x2971 JUMP JUMPDEST EQ PUSH2 0x29EE JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C3 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x2A20 PUSH2 0x1C04 JUMP JUMPDEST SWAP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2A9E JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xD68 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2A95 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1DC JUMPI MLOAD PUSH2 0x8C3 DUP2 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AE8 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL PUSH2 0x2AE1 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x2B31 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x2B16 JUMPI JUMPDEST POP POP PUSH2 0x2AFE JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2B29 SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x2AAA JUMP JUMPDEST ISZERO CODESIZE DUP1 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 PUSH2 0x2B58 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2B46 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2B8B JUMPI JUMPDEST PUSH2 0x2B69 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2B61 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP 0xAF SWAP10 ADDRESS SWAP5 0xC8 0xEA LOG0 0xAB 0xDF 0xFC 0xC6 CODESIZE 0xBC DUP14 DUP8 0xF9 0xC9 0xA5 0xF SWAP5 TSTORE 0xB9 0xB9 SWAP11 0xB0 0xB6 PUSH9 0x1EAB4F4F05AF993094 0xC8 0xEA LOG0 0xAB 0xDF 0xFC 0xC6 CODESIZE 0xBC DUP14 DUP8 0xF9 0xC9 0xA5 0xF SWAP5 TSTORE 0xB9 0xB9 SWAP11 0xB0 0xB6 PUSH9 0x1EAB4F4F01F7D7E697 CALLDATASIZE DIV SMOD 0xAF PUSH19 0xF21B9DD15AD33DCCEC16D662D65C043A3B77C0 0xC9 0xD1 0xB2 PUSH11 0x360894A13BA1A3210667C8 0x28 BLOBHASH 0x2D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCF0C57E16840DF040F15088 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 0xAF SWAP10 ADDRESS SWAP5 0xC8 0xEA LOG0 0xAB 0xDF 0xFC 0xC6 CODESIZE 0xBC DUP14 DUP8 0xF9 0xC9 0xA5 0xF SWAP5 TSTORE 0xB9 0xB9 SWAP11 0xB0 0xB6 PUSH9 0x1EAB4F4F06A2646970 PUSH7 0x73582212204C2B PUSH8 0x4C8474FF844D687F CREATE2 0x2E 0xEB 0x2C CHAINID 0x29 DUP5 DUP13 0x26 0xDB LT 0xB3 0xB8 PUSH15 0x39A97F75E5343264736F6C63430008 XOR STOP CALLER ","sourceMap":"1523:13186:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;;;1523:13186:15;;;;;4301:16:1;1523:13186:15;;4726:16:1;;:34;;;;1523:13186:15;4805:1:1;4790:16;:50;;;;1523:13186:15;4855:13:1;:30;;;;1523:13186:15;4851:91:1;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;1523:13186:15;;;;;5055:1:1;;4951:18;4979:67;;5055:1;:::i;:::-;5066:101;;1523:13186:15;5066:101:1;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;;1523:13186:15;;;;;-1:-1:-1;1523:13186:15;;5142:14:1;;1523:13186:15;;5142:14:1;1523:13186:15;4979:67:1;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;;1523:13186:15;-1:-1:-1;;;1523:13186:15;;;5055:1:1;:::i;4851:91::-;1523:13186:15;;-1:-1:-1;;;4908:23:1;;1523:13186:15;;4908:23:1;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;1523:13186:15;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;1867:52;1523:13186;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;9957:39;;;:::i;:::-;10038:16;;:::i;:::-;1523:13186;10117:18;;;;;;1523:13186;10841:113;;;;10101:731;1523:13186;;;;;;;:::i;:::-;;;;10841:113;1523:13186;10841:113;;;;10137:3;9698:22:14;9674:49;9682:40;9698:22;9873:50:15;9698:22:14;;:::i;:::-;-1:-1:-1;;;;;1523:13186:15;;;9674:49:14;10244:26:15;;;;:::i;:::-;1523:13186;;;:::i;:::-;10244:84;10240:582;;10137:3;;1523:13186;10106:9;;10240:582;10525:18;10372:47;1523:13186;10372:47;;;:::i;:::-;1523:13186;:::i;:::-;10525:18;1523:13186;10609:34;;;;:::i;:::-;10686:50;10700:35;;;:::i;:::-;10686:50;:::i;:::-;1523:13186;10467:288;1523:13186;;:::i;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;;10467:288;;;1523:13186;10467:288;;;1523:13186;10467:288;;;1523:13186;10773:34;;;:::i;:::-;;;;;:::i;:::-;;10240:582;;;1523:13186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;11127:40;1523:13186;;;;;:::i;:::-;11127:40;:::i;:::-;1523:13186;;;;;;;:::i;:::-;;;;;;;;;;;;;2556:31;4408:10;2556:31;:::i;:::-;1523:13186;;;;;;2556:91;2552:152;;4408:10;1523:13186;;1037:60:16;1523:13186:15;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;4571:110;;4691:60;4738:12;;1523:13186;-1:-1:-1;;;;;1523:13186:15;-1:-1:-1;;;;;1523:13186:15;;;;;;;;4691:60;4408:10;4767:37;;;;1523:13186;;4571:110;1523:13186;;-1:-1:-1;;;4640:30:15;;1523:13186;;4640:30;2552:152;1523:13186;;-1:-1:-1;;;2670:23:15;;1523:13186;;2670:23;1523:13186;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;5984:184:15;;;;8409:50:14;-1:-1:-1;;;;;1523:13186:15;;8409:50:14;:::i;:::-;6177:173:15;;;1523:13186;;;;;;;-1:-1:-1;;;;;1523:13186:15;;6209:52;;1523:13186;;6209:52;1523:13186;6177:173;1523:13186;;-1:-1:-1;;;6299:40:15;;1523:13186;;6299:40;5984:184;8730:53:14;-1:-1:-1;;;;;1523:13186:15;;8730:53:14;:::i;:::-;5984:184:15;;1523:13186;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;;-1:-1:-1;;1523:13186:15;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4688:6:2;1523:13186:15;;4679:4:2;4671:23;;;:120;;;;1523:13186:15;4654:251:2;;;2303:62:0;1523:13186:15;2303:62:0;;;;:::i;:::-;1523:13186:15;;-1:-1:-1;;;6151:52:2;;1523:13186:15;;;;;;;6151:52:2;;-1:-1:-1;;6151:52:2;;;1523:13186:15;-1:-1:-1;6147:437:2;;-1:-1:-1;;1523:13186:15;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;1523:13186:15;;;6513:60:2;;;1523:13186:15;;;;;;;6513:60:2;;;6147:437;6245:40;;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6423:4;;;;:::i;:::-;1523:13186:15;6241:120:2;1523:13186:15;;-1:-1:-1;;;6312:34:2;;;;;1523:13186:15;;;;;;;6513:60:2;;;6151:52;;;;;1523:13186:15;6151:52:2;1523:13186:15;6151:52:2;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;4654:251;1523:13186:15;;-1:-1:-1;;;4865:29:2;;1523:13186:15;;4865:29:2;4671:120;1523:13186:15;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;4749:42:2;;4671:120;;;1523:13186:15;;;;;;-1:-1:-1;;1523:13186:15;;;;5111:6:2;-1:-1:-1;;;;;1523:13186:15;5102:4:2;5094:23;5090:145;;1523:13186:15;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;5090:145:2;1523:13186:15;;-1:-1:-1;;;5195:29:2;;1523:13186:15;;5195:29:2;1523:13186:15;;;;;;-1:-1:-1;;1523:13186:15;;;;;8405:22;1523:13186;;;;;:::i;:::-;;;:::i;:::-;;8405:22;:::i;:::-;1523:13186;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;3915:8:12;3859:27;1523:13186:15;;;;;;;;:::i;:::-;;;3859:27:12;:::i;:::-;3915:8;;;;;:::i;:::-;1523:13186:15;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;;;;1523:13186:15;;;;;1280:65:0;;-1:-1:-1;;;;;1523:13186:15;3975:40:0;1280:65;;3975:40;1523:13186:15;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;-1:-1:-1;;;;;8263:21:15;1523:13186;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;5618:8;2303:62:0;;;:::i;:::-;5618:8:15;:::i;1523:13186::-;;;;;;-1:-1:-1;;1523:13186:15;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;7210:8:15;1523:13186;;7210:8;:::i;:::-;7302:1;7305:21;;;;;;-1:-1:-1;;7766:25:15;1523:13186;7827:68;;-1:-1:-1;;;;;1523:13186:15;;;7827:68;:96;;;;;;;1523:13186;7302:1;1523:13186;;;;;;;;;;;;;7827:96;;7904:4;1523:13186;7827:96;;;:::i;:::-;;;;;;;;;;;7285:533;7938:26;7302:1;7938:26;;1523:13186;7827:96;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;7328:3::-;7423:14;;;;;:::i;:::-;7302:1;7513:26;;;;;;;;:::i;:::-;7565:13;;;-1:-1:-1;7580:17:15;;;;;;7717:16;;;1523:13186;7717:16;;7702:33;7709:25;7717:16;7638:36;7794:12;7717:16;;;:::i;7702:33::-;7766:25;1523:13186;7758:34;;-1:-1:-1;;;;;1523:13186:15;;;7758:34;7794:12;;:::i;:::-;1523:13186;7290:13;;7599:3;7638:26;;;7622:52;1523:13186;7638:26;:36;:29;:26;;;;;:::i;:::-;:29;;:::i;:::-;:36;1523:13186;7622:52;;:::i;:::-;7599:3;1523:13186;7565:13;;;;1523:13186;;;;-1:-1:-1;1523:13186:15;;-1:-1:-1;;1523:13186:15;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;8046:25:15;1523:13186;-1:-1:-1;;;;;1523:13186:15;;;;;;;8046:48;;;;;1523:13186;;;;;;;;;;;;;8046:48;;1523:13186;;8046:48;;1523:13186;8046:48;;;;;;;;1523:13186;;;8046:48;;;;:::i;:::-;1523:13186;;8046:48;1523:13186;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;14136:13;1523:13186;;;14136:29;;-1:-1:-1;;;;;1523:13186:15;;;14136:29;1523:13186;;-1:-1:-1;;;14136:31:15;;1523:13186;;;;;14136:31;;;;;;;1523:13186;14136:31;-1:-1:-1;14136:31:15;;;1523:13186;-1:-1:-1;1523:13186:15;;;13981:94;1523:13186;14208:75;;1523:13186;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14362:45;;;;1523:13186;;;;14208:75;;1523:13186;14208:75;1523:13186;;14208:75;;;;;;;;:::i;:::-;1523:13186;14198:86;;1523:13186;;14362:45;;;1523:13186;14362:45;;;;1523:13186;;;;;;;;;;;;;;;;;;;;14362:45;;;;;;;;;:::i;:::-;1523:13186;14352:56;;1523:13186;;;;;;;;;;;;;14136:31;14362:45;14136:31;;;14362:45;14136:31;;14208:75;14136:31;1523:13186;14136:31;1523:13186;14136:31;;;;;;;:::i;:::-;;;;;;;;1523:13186;;;;-1:-1:-1;1523:13186:15;;-1:-1:-1;;1523:13186:15;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;5727:13:15;1523:13186;-1:-1:-1;;;;;1523:13186:15;;5727:48;;;;;1523:13186;;5727:48;1523:13186;;;;;;;;;;;;5727:48;;1523:13186;5727:48;;;:::i;:::-;;;;;;;;;;;1523:13186;;;5727:48;1523:13186;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1523:13186:15;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1523:13186:15;;;;1926:34;1523:13186;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;4045:13;1523:13186;4045:35;;-1:-1:-1;;;;;1523:13186:15;;;4045:35;:66;;;;;;;1523:13186;;;;;;;;;;4045:66;;-1:-1:-1;1523:13186:15;;;;;;;4081:10;1523:13186;4045:66;;;:::i;:::-;;;;;;;;;;;1523:13186;;;;4121:71;:54;4081:10;4121:54;:::i;:::-;:71;1523:13186;8409:50:14;4081:10:15;8409:50:14;:::i;:::-;;4081:10:15;4302:30;;;;1523:13186;;4045:66;;;;;;:::i;:::-;;;;1523:13186;;;;;;;;;;;;;2556:31;4881:10;2556:31;:::i;:::-;1523:13186;;;;;;2556:91;2552:152;;1523:13186;5010:23;4881:10;5010:23;:::i;:::-;1523:13186;-1:-1:-1;;;;;1523:13186:15;;;;-1:-1:-1;;;;;1523:13186:15;;5048:42;5044:106;;5179:61;5164:76;1523:13186;;5219:21;1523:13186;-1:-1:-1;;;;;1523:13186:15;;;;5179:61;;:::i;:::-;-1:-1:-1;;;;;1523:13186:15;;;5164:76;:12;:76;5160:145;;5219:21;1523:13186;5315:39;;-1:-1:-1;;;;;1523:13186:15;;;5315:39;:51;;;;;1523:13186;;-1:-1:-1;;;5315:51:15;;4881:10;1523:13186;5315:51;;1523:13186;;;;;;;;;;;;5315:51;;;;;;;;1523:13186;4881:10;5377:30;5384:23;4881:10;5384:23;:::i;:::-;1523:13186;;;;;;;;;;;;;;5377:30;8730:53:14;4881:10:15;8730:53:14;:::i;:::-;;4881:10:15;5471:32;;;;1523:13186;;5315:51;;;;;;:::i;:::-;;;;;1523:13186;;;5160:145;1523:13186;;-1:-1:-1;;;5263:31:15;;1523:13186;;5263:31;5044:106;1523:13186;;-1:-1:-1;;;5113:26:15;;1523:13186;;5113:26;1523:13186;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;-1:-1:-1;;1523:13186:15;;;;2357:1:0;1523:13186:15;;;;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;2727:1158:15:-;;;;-1:-1:-1;;;;;1523:13186:15;;;;2727:1158;2991:36;;2987:105;;1523:13186;;3105:43;;;3101:119;;1523:13186;;3233:33;;;3229:99;;1523:13186;3341:39;;;3337:111;;3781:26;3457:60;3527:76;3613:50;3457:60;;3673:74;3457:60;1523:13186;;;;;;-1:-1:-1;;;;;1523:13186:15;;3025:1;1523:13186;;;3025:1;1523:13186;;3457:60;1523:13186;;;;;;-1:-1:-1;;;;;1523:13186:15;;3527:76;1523:13186;;;3527:76;1523:13186;;3527:76;1523:13186;;;;;;-1:-1:-1;;;;;1523:13186:15;;3613:50;1523:13186;;;3613:50;1523:13186;;3613:50;1523:13186;;;;;;-1:-1:-1;;;;;1523:13186:15;;3673:74;1523:13186;;;3673:74;1523:13186;;3781:26;1847:127:0;3833:10:15;1847:127:0;:::i;:::-;6893:76:1;;:::i;3337:111:15:-;1523:13186;;-1:-1:-1;;;3403:34:15;;;;;3229:99;1523:13186;;-1:-1:-1;;;3289:28:15;;;;;3101:119;1523:13186;;-1:-1:-1;;;3171:38:15;;;;;2987:105;1523:13186;;-1:-1:-1;;;3050:31:15;;;;;1523:13186;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1523:13186:15;-1:-1:-1;1523:13186:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;:::o;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;1037:60:16;1523:13186:15;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1523:13186:15;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;13420:1;1523:13186;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;;;-1:-1:-1;;1523:13186:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;:::o;3405:215:0:-;-1:-1:-1;;;;;1523:13186:15;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;;;;1523:13186:15;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;1523:13186:15;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;1523:13186:15;;;3534:31:0;12768:288:15;1523:13186;13007:42;12768:288;12929:21;1523:13186;;;-1:-1:-1;;;;;1523:13186:15;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;13007:42;12768:288::o;6893:76:1:-;6961:1;6893:76;;;:::i;:::-;;;:::i;1523:13186:15:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;11567:476::-;-1:-1:-1;;;;;;;;;;;1523:13186:15;;11830:33;;;:::i;:::-;11878:13;-1:-1:-1;;11893:20:15;;;;;;12019:17;;;;11567:476;:::o;11915:3::-;1523:13186;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;-1:-1:-1;;;;;1523:13186:15;11934:65;1523:13186;11934:65;;:::i;:::-;1523:13186;;11878:13;;1523:13186;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1523:13186:15;;;;:::o;:::-;;;:::o;1967:523::-;2166:13;1523:13186;;;-1:-1:-1;;;2205:104:15;;;;;;2293:4;2205:104;;;1523:13186;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;2205:104;1523:13186;;;;2205:104;;1523:13186;;2205:104;;;;;;:::i;:::-;-1:-1:-1;2158:161:15;;;;;;;;;;;:::i;:::-;2333:8;;2329:75;;2205:104;1523:13186;;;2420:63;;1523:13186;;;;2205:104;2420:63;1523:13186;;;;;;;;2413:70;1967:523;:::o;2329:75::-;1523:13186;;-1:-1:-1;;;2364:29:15;;2205:104;;2364:29;1523:13186;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;11180:381;11324:24;1523:13186;;;;-1:-1:-1;;;11324:64:15;;1523:13186;11324:24;;-1:-1:-1;;1523:13186:15;;-1:-1:-1;;;;;1523:13186:15;;;;;;11324:64;;11180:381;11324:64;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;11324:64:15;;;11180:381;11398:24;;-1:-1:-1;11437:13:15;-1:-1:-1;11432:94:15;11324:24;;;11432:94;11535:19;;;11180:381;:::o;11471:3::-;1523:13186;;;;;;11452:17;;;;;11506:9;;;;:::i;:::-;1523:13186;;;;;;;;11490:25;;;11471:3;1523:13186;11437:13;;;11452:17;;;;;;11324:64;;;;;;;-1:-1:-1;11324:64:15;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1523:13186;-1:-1:-1;;1523:13186:15;;;;;;;:::o;8440:1304::-;;1523:13186;8631:22;1523:13186;8742:25;8631:22;;;:::i;:::-;8742:25;1523:13186;;;;;;8738:1000;;8440:1304;;:::o;8738:1000::-;1523:13186;;-1:-1:-1;;;;;;;;;;;1523:13186:15;8897:33;;;:::i;:::-;8949:13;-1:-1:-1;8964:20:15;;;;;;-1:-1:-1;1523:13186:15;;;9129:64;;1523:13186;-1:-1:-1;;1523:13186:15;;;9129:42;;-1:-1:-1;;;;;1523:13186:15;;;9129:42;1523:13186;;;;;;;;;;;;9129:64;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;9129:64:15;;;8944:145;9208:25;-1:-1:-1;9268:31:15;;;;:::i;:::-;9319:13;;9334:20;;;;;;9603:125;;;;;;;;8440:1304;:::o;9603:125::-;;;8440:1304::o;9356:3::-;9383:9;;;;;;:::i;:::-;1523:13186;9379:120;;9356:3;1523:13186;9319:13;;9379:120;9420:60;9458:22;9466:13;;;;;:::i;:::-;1523:13186;-1:-1:-1;;;;;1523:13186:15;;;9458:22;9420:60;9439:15;;;:::i;:::-;9420:60;;;:::i;:::-;-1:-1:-1;;;;;1523:13186:15;;;;;;9420:60;9379:120;;9129:64;;;;;;;-1:-1:-1;9129:64:15;;;;;;:::i;:::-;;;;;8986:3;9698:22:14;9009:65:15;9025:49;9674::14;9682:40;9698:22;1523:13186:15;9698:22:14;;:::i;9025:49:15:-;9009:65;;;;:::i;:::-;1523:13186;8949:13;;1523:13186;-1:-1:-1;;1523:13186:15;;;;;;;;:::o;:::-;;;;;;;;;;:::o;13062:669::-;1523:13186;;13162:15;;13158:56;;13252:25;;;:::i;:::-;13292:10;13176:1;13320:3;1523:13186;;13304:14;;;;;13354:6;13339:21;13354:6;;1523:13186;13354:6;;;:::i;:::-;13339:21;;;;:::i;:::-;1523:13186;13292:10;;13304:14;;;13176:1;13380:319;13423:3;13401:20;1523:13186;;13401:20;:::i;:::-;13397:24;;;;;13176:1;13489:3;13463:24;:20;1523:13186;;;13463:20;:::i;:::-;:24;:::i;:::-;13459:28;;;;;13524:12;13516:21;13524:12;;1523:13186;13524:12;;;:::i;13516:21::-;:49;13540:25;13548:16;;13558:5;;;:::i;:::-;13548:16;;:::i;13516:49::-;1523:13186;;;;;;;13516:49;13512:163;;13489:3;1523:13186;13447:10;;13512:163;13589:67;13625:16;;13635:5;;;:::i;:::-;13625:16;;:::i;:::-;13589:67;13643:12;;;;;:::i;:::-;13589:67;13614:5;;;:::i;13589:67::-;;;;;:::i;:::-;13512:163;;13459:28;;;1523:13186;;13385:10;;;13397:24;;;13062:669;:::o;13158:56::-;13193:10;;:::o;2658:162:0:-;-1:-1:-1;;;;;;;;;;;1523:13186:15;-1:-1:-1;;;;;1523:13186:15;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;1523:13186:15;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;1523:13186:15;;;2763:40:0;12271:491:15;1523:13186;;:::i;:::-;-1:-1:-1;;;;;;1523:13186:15;;-1:-1:-1;1523:13186:15;;;1037:60:16;1523:13186:15;;;;;;-1:-1:-1;;;;;1523:13186:15;;12655:31;;;:::i;:::-;1523:13186;;;;;;12690:54;1523:13186;;;;;;;:::i;:::-;;;12655:89;1523:13186;12521:234;;1523:13186;12271:491;:::o;6362:457::-;6441:12;;1523:13186;;-1:-1:-1;;;;;;;;;;;1523:13186:15;6573:24;;;-1:-1:-1;;;;;;;;;;;;1523:13186:15;:::o;6569:244::-;6716:1;1523:13186;;;;;;;6682:35;;1523:13186;;-1:-1:-1;;;;;;;;;;;1523:13186:15;:::o;:::-;;;-1:-1:-1;;;1523:13186:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;1523:13186:15;;;;;;;;;;-1:-1:-1;;;1523:13186:15;;;;;;;;;;;;;;;;;;;;2081:225:9;1523:13186:15;;-1:-1:-1;;;2200:39:9;;2224:4;2200:39;;;1523:13186:15;-1:-1:-1;;;;;1523:13186:15;;;;;;;;;;;2200:39:9;;1523:13186:15;;;;2200:39:9;1523:13186:15;;;;2200:39:9;;;;;;;-1:-1:-1;2200:39:9;;;2081:225;1523:13186:15;;;;;;;;-1:-1:-1;1523:13186:15;;;3411:47:9;;;;1523:13186:15;;;;3411:47:9;;;;1523:13186:15;;3411:47:9;;;1523:13186:15;;;;;;3411:47:9;;;;;:::i;:::-;5615:25;;;;;;;;;;:::i;:::-;5657:69;;;2081:225;5657:103;;;;2081:225;3473:45;;3469:201;;2081:225;;;;;;:::o;3469:201::-;1523:13186:15;;3561:43:9;;;;-1:-1:-1;;;;;1523:13186:15;;;3411:47:9;3561:43;;1523:13186:15;3601:1:9;1523:13186:15;;;;3646:12:9;;3561:43;;;1523:13186:15;;;;3561:43:9;1523:13186:15;3561:43:9;;;:::i;:::-;3646:12;:::i;:::-;3469:201;;;;;;;5657:103;5730:26;;;:30;;5657:103;;;:69;1523:13186:15;;;;;5669:22:9;;;;:56;;;;;5657:69;;;;;;;;5669:56;5695:30;;-1:-1:-1;5695:30:9;;;;;;;:::i;:::-;5669:56;;;;;2200:39;;;;;;;;;;;;;;;;;:::i;:::-;;;1523:13186:15;;;;;2200:39:9;;;;;;;;;7084:141:1;1523:13186:15;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;1523:13186:15;;-1:-1:-1;;;7191:17:1;;;;;1523:13186:15;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;-1:-1:-1;1523:13186:15;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;1523:13186:15;:::o;:::-;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;-1:-1:-1;1523:13186:15;;;;-1:-1:-1;1523:13186:15;:::o;4923:118:14:-;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;-1:-1:-1;1523:13186:15;;;;4923:118:14;:::o;:::-;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;-1:-1:-1;1523:13186:15;-1:-1:-1;;;;;;;;;;;1523:13186:15;;4923:118:14;:::o;1523:13186:15:-;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;;;;:::o;2815:1368:14:-;-1:-1:-1;1523:13186:15;;;3010:14:14;1523:13186:15;;;;;;3046:13:14;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;;;3521:23:14;;-1:-1:-1;3521:23:14;4076:21;3521:23;;3517:378;;3042:1135;3973:15;;;;;:::i;:::-;1523:13186:15;;3010:14:14;1523:13186:15;;;;;;;4076:21:14;1523:13186:15;3010:14:14;4112:11;:::o;3517:378::-;3705:35;:23;3584:22;1523:13186:15;3584:22:14;3844:25;3584:22;;:::i;:::-;1523:13186:15;;;;;;;;;3705:23:14;;;;:::i;:::-;:35;1523:13186:15;;;;;;;;;;;;;;;;;;;;;3844:25:14;1523:13186:15;3517:378:14;;;;;3042:1135;4154:12;;-1:-1:-1;4154:12:14;:::o;2815:1368::-;-1:-1:-1;1523:13186:15;;;3010:14:14;1523:13186:15;;;;;;3046:13:14;;;;-1:-1:-1;;1523:13186:15;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;;;;;;3521:23:14;;-1:-1:-1;3521:23:14;4076:21;3521:23;;3517:378;;3042:1135;3973:15;;;;;:::i;:::-;1523:13186:15;;3010:14:14;1523:13186:15;;;;;;;3517:378:14;3705:35;:23;3584:22;1523:13186:15;3584:22:14;3844:25;3584:22;;:::i;1523:13186:15:-;3705:23:14;;;;:::i;3844:25::-;1523:13186:15;3517:378:14;;;;;2241:406;1523:13186:15;-1:-1:-1;1523:13186:15;4360:14:14;1523:13186:15;;;;-1:-1:-1;1523:13186:15;;4360:26:14;2320:321;1523:13186:15;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;1523:13186:15;;;;;4360:14:14;1523:13186:15;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;;;-1:-1:-1;1523:13186:15;;;;-1:-1:-1;1523:13186:15;;4360:14:14;2576:11;:::o;2241:406::-;1523:13186:15;-1:-1:-1;1523:13186:15;4360:14:14;1523:13186:15;;;;-1:-1:-1;1523:13186:15;;4360:26:14;2320:321;1523:13186:15;;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;1523:13186:15;;;;;4360:14:14;1523:13186:15;;;;;;;;;;;;;;;;;-1:-1:-1;1523:13186:15;;;;-1:-1:-1;1523:13186:15;;4360:14:14;2576:11;:::o;2779:335:5:-;;2263:29;;:34;2259:119;;-1:-1:-1;;;;;;;;;;;1523:13186:15;;-1:-1:-1;;;;;;1523:13186:15;-1:-1:-1;;;;;1523:13186:15;;;;;;;;2922:27:5;-1:-1:-1;;2922:27:5;1523:13186:15;;2964:15:5;:11;;2995:53;;;:::i;2960:148::-;6648:9;;;6644:70;;2779:335::o;6644:70::-;1523:13186:15;;-1:-1:-1;;;6684:19:5;;;;;2259:119;1523:13186:15;;-1:-1:-1;;;2320:47:5;;-1:-1:-1;;;;;1523:13186:15;;2320:47:5;;;1523:13186:15;;;2320:47:5;2129:766:12;1523:13186:15;;;2129:766:12;2276:2;2256:22;;2276:2;;2739:25;2539:180;;;;;;;;;;;;;;;-1:-1:-1;2539:180:12;2739:25;;:::i;:::-;2732:32;;;;;:::o;2252:637::-;2795:83;;2811:1;2795:83;2815:35;2795:83;;:::o;1523:13186:15:-;;-1:-1:-1;1523:13186:15;;;:::o;7196:532:12:-;1523:13186:15;;;:::i;:::-;7282:29:12;;;7327:7;;:::o;7278:444::-;1523:13186:15;;;:::i;:::-;7387:29:12;7378:38;;7387:29;;1523:13186:15;;-1:-1:-1;;;7439:23:12;;;;;7374:348;1523:13186:15;;;:::i;:::-;7492:35:12;7483:44;;7492:35;;1523:13186:15;;-1:-1:-1;;;7550:46:12;;;;;1523:13186:15;;;;;6513:60:2;7479:243:12;1523:13186:15;;7626:30:12;1523:13186:15;;:::i;:::-;7617:39:12;7613:109;;7479:243;7196:532::o;7613:109::-;1523:13186:15;;-1:-1:-1;;;7679:32:12;;;;;1523:13186:15;;;;;;6513:60:2;4106:253:10;4255:25;4106:253;4297:55;4106:253;4255:25;;;;;;;;;;:::i;:::-;4297:55;;:::i;5140:1530:12:-;;;6199:66;6186:79;;6182:164;;1523:13186:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6457:24:12;;;;;;;;;;;;;;-1:-1:-1;;;;;1523:13186:15;;6495:20:12;6491:113;;6614:49;;5140:1530;:::o;6491:113::-;6531:62;;;6457:24;6531:62;;:::o;6182:164::-;6281:54;;;6297:1;6281:54;6301:30;6281:54;;:::o;1523:13186:15:-;;;;;;;;;;;;;:::i;4059:629:9:-;2847:1:10;4059:629:9;3510:55:10;4059:629:9;1523:13186:15;;;;;;3462:31:10;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;1523:13186:15;;4551:22:9;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;1523:13186:15;;;;4631:40:9;;;;;;;;;1523:13186:15;4631:40:9;4551:57;4578:30;;;3462:31:10;4578:30:9;;;;;;;;:::i;:::-;4577:31;4551:57;;;;4625:582:10;;4797:8;;-1:-1:-1;1523:13186:15;;5874:21:10;:17;;6046:142;;;;;;5870:383;1523:13186:15;;-1:-1:-1;;;6225:17:10;;;;;4793:408;1523:13186:15;;5045:22:10;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;1523:13186:15;;-1:-1:-1;;;5121:24:10;;-1:-1:-1;;;;;1523:13186:15;;;5121:24:10;;;1523:13186:15;;;5121:24:10;5045:49;5071:18;;;:23;5045:49;"},"methodIdentifiers":{"AVS_DIRECTORY()":"ad656c56","EIGEN_DELEGATION_MANAGER()":"f2251b0f","EIGEN_POD_MANAGER()":"0a732358","EIGEN_REWARDS_COORDINATOR()":"141fbdf2","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)":"a1060c88","ecdsa_check(bytes32,bytes)":"6d50275d","finishDeregisterOperator()":"e3672163","getDeregistrationDelay()":"8495feab","getOperator(address)":"5865c60c","getOperatorRestakedStrategies(address)":"33cfb7b7","getOperators()":"27a099d8","getRestakeableStrategies()":"e481af9d","initialize(address,address,address,address,uint64)":"00feb1d8","latestRewardedEra()":"1ed6e115","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","registerOperator((bytes,bytes32,uint256),bytes32)":"ca1e1d67","renounceOwnership()":"715018a6","setAllowlistRestakingStrategy(address,bool)":"43adc491","setClaimerFor(address)":"a0169ddd","setDeregistrationDelay(uint64)":"84a3f19b","startDeregisterOperator()":"389517e4","submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":"9375e713","transferOwnership(address)":"f2fde38b","updateAVSMetadataURI(string)":"a98fb355","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AVSOperatorStatusCallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitmentChangeNotReady\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateKeyNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationDelayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSDirectoryAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEigenDelegationManagerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEigenPodManagerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardsCoordinatorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEigenPod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegatedToOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidatorOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorHasValidators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RestakingStrategyAllowlistUpdateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAlreadyDeregistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"oldDelay\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newDelay\",\"type\":\"uint64\"}],\"name\":\"DeregistrationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDeregisterStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OperatorRewardsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"RestakingStrategyAllowlistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blsPubKeyHash\",\"type\":\"bytes32\"}],\"name\":\"ValidatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"delegateKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blsPubKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorIndex\",\"type\":\"uint256\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AVS_DIRECTORY\",\"outputs\":[{\"internalType\":\"contract IAVSDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_DELEGATION_MANAGER\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_POD_MANAGER\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_REWARDS_COORDINATOR\",\"outputs\":[{\"internalType\":\"contract IRewardsCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateOperatorAVSRegistrationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"message_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ecdsa_check\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishDeregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeregistrationDelay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"startDeregisterOperatorBlock\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"internalType\":\"struct IVerisenseAVSManager.OperatorDataExtended\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRestakedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"restakedStrategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"substratePubkey\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"restakedStrategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IVerisenseAVSManager.OperatorValidData[]\",\"name\":\"operatorList\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRestakeableStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eigenPodManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"eigenDelegationManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avsDirectoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsCoordinatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"initialDeregistrationDelay\",\"type\":\"uint64\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRewardedEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"substrate_pubkey\",\"type\":\"bytes32\"}],\"name\":\"registerOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowlistRestakingStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newDelay\",\"type\":\"uint64\"}],\"name\":\"setDeregistrationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDeregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eraIndex\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]\",\"name\":\"submissions\",\"type\":\"tuple[]\"}],\"name\":\"submitOperatorRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"DeregistrationDelaySet(uint64,uint64)\":{\"params\":{\"newDelay\":\"The new deregistration delay value.\",\"oldDelay\":\"The previous deregistration delay value.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorDeregisterStarted(address)\":{\"params\":{\"operator\":\"The address of the operator starting deregistration.\"}},\"OperatorDeregistered(address)\":{\"params\":{\"operator\":\"The address of the deregistered operator.\"}},\"OperatorRegistered(address)\":{\"params\":{\"operator\":\"The address of the registered operator.\"}},\"RestakingStrategyAllowlistUpdated(address,bool)\":{\"params\":{\"allowed\":\"Whether the strategy is allowed (true) or disallowed (false).\",\"strategy\":\"The address of the strategy.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"ValidatorDeregistered(address,bytes32)\":{\"params\":{\"blsPubKeyHash\":\"The BLS public key hash of the deregistered validator.\",\"operator\":\"The address of the operator managing the validator.\"}},\"ValidatorRegistered(address,address,bytes,bytes32,uint256)\":{\"params\":{\"blsPubKeyHash\":\"The BLS public key hash of the validator.\",\"delegateKey\":\"The delegate public key for the validator.\",\"podOwner\":\"The address of the validator's EigenPod owner.\",\"validatorIndex\":\"The beacon chain validator index.\"}}},\"kind\":\"dev\",\"methods\":{\"getDeregistrationDelay()\":{\"returns\":{\"_0\":\"The current deregistration delay in seconds.\"}},\"getOperator(address)\":{\"params\":{\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"OperatorDataExtended struct containing information about the operator.\"}},\"getOperatorRestakedStrategies(address)\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness      of each element in the returned array. The off-chain service should do that validation separately\",\"params\":{\"operator\":\"The address of the operator to get restaked strategies for\"}},\"getRestakeableStrategies()\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on uniqueness of each element in the returned array.      The off-chain service should do that validation separately\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"registerOperator((bytes,bytes32,uint256),bytes32)\":{\"params\":{\"operatorSignature\":\"The signature and associated data for operator registration.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowlistRestakingStrategy(address,bool)\":{\"details\":\"Restricted to the DAO\",\"params\":{\"allowed\":\"Whether the strategy should be allowed (true) or disallowed (false)\",\"strategy\":\"The address of the strategy to add or remove\"}},\"setClaimerFor(address)\":{\"params\":{\"claimer\":\"The address of the claimer.\"}},\"setDeregistrationDelay(uint64)\":{\"details\":\"Restricted to the DAO\",\"params\":{\"newDelay\":\"The new deregistration delay in seconds.\"}},\"submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"params\":{\"eraIndex\":\"The era index of submissions.\",\"submissions\":\"The array of rewards submissions.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAVSMetadataURI(string)\":{\"params\":{\"_metadataURI\":\"is the metadata URI for the AVS\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"AVS_DIRECTORY\":{\"return\":\"IAVSDirectory The AVSDirectory contract.\",\"returns\":{\"_0\":\"IAVSDirectory The AVSDirectory contract.\"}},\"EIGEN_DELEGATION_MANAGER\":{\"return\":\"IDelegationManager The EigenDelegationManager contract.\",\"returns\":{\"_0\":\"IDelegationManager The EigenDelegationManager contract.\"}},\"EIGEN_POD_MANAGER\":{\"return\":\"IEigenPodManager The EigenPodManager contract.\",\"returns\":{\"_0\":\"IEigenPodManager The EigenPodManager contract.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AVSOperatorStatusCallFailed()\":[{\"notice\":\"Thrown when an AVS operator status call fails\"}],\"CommitmentChangeNotReady()\":[{\"notice\":\"Thrown when trying to update an operator commitment before the change delay has passed\"}],\"DelegateKeyNotSet()\":[{\"notice\":\"Thrown when an operator's delegate key is not set\"}],\"DeregistrationAlreadyStarted()\":[{\"notice\":\"Thrown when attempting to start deregistering an operator that has already started\"}],\"DeregistrationDelayNotElapsed()\":[{\"notice\":\"Thrown when trying to finish deregistering an operator before the delay has elapsed\"}],\"DeregistrationNotStarted()\":[{\"notice\":\"Thrown when trying to finish deregistering an operator that hasn't started\"}],\"InvalidAVSDirectoryAddress()\":[{\"notice\":\"Thrown when an invalid AVSDirectory address is provided\"}],\"InvalidEigenDelegationManagerAddress()\":[{\"notice\":\"Thrown when an invalid EigenDelegationManager address is provided\"}],\"InvalidEigenPodManagerAddress()\":[{\"notice\":\"Thrown when an invalid EigenPodManager address is provided\"}],\"InvalidRewardsCoordinatorAddress()\":[{\"notice\":\"Thrown when an invalid RewardsCoordinator address is provided\"}],\"NoEigenPod()\":[{\"notice\":\"Thrown when an EigenPod does not exist for a given address\"}],\"NotDelegatedToOperator()\":[{\"notice\":\"Thrown when an address is not delegated to the expected operator\"}],\"NotOperator()\":[{\"notice\":\"Thrown when a non-operator attempts an operator-only action\"}],\"NotValidatorOperator()\":[{\"notice\":\"Thrown when a non-operator attempts to deregister a validator\"}],\"OperatorHasValidators()\":[{\"notice\":\"Thrown when an operator attempts to deregister while still having validators\"}],\"OperatorNotRegistered()\":[{\"notice\":\"Thrown when an action requires a registered operator, but the operator is not registered\"}],\"RestakingStrategyAllowlistUpdateFailed()\":[{\"notice\":\"Thrown when a restaking strategy allowlist update fails\"}],\"ValidatorAlreadyDeregistered()\":[{\"notice\":\"Thrown when attempting to deregister a validator that is already deregistered\"}],\"ValidatorAlreadyRegistered()\":[{\"notice\":\"Thrown when attempting to register a validator that is already registered\"}],\"ValidatorNotActive()\":[{\"notice\":\"Thrown when a validator is not in the active state\"}]},\"events\":{\"DeregistrationDelaySet(uint64,uint64)\":{\"notice\":\"Emitted when the deregistration delay is updated.\"},\"OperatorDeregisterStarted(address)\":{\"notice\":\"Emitted when an operator starts the deregistration process.\"},\"OperatorDeregistered(address)\":{\"notice\":\"Emitted when an operator is deregistered from the Verisense AVS.\"},\"OperatorRegistered(address)\":{\"notice\":\"Emitted when a new operator is registered in the Verisense AVS.\"},\"OperatorRewardsSubmitted()\":{\"notice\":\"Emitted when operator rewards are submitted.\"},\"RestakingStrategyAllowlistUpdated(address,bool)\":{\"notice\":\"Emitted when a restaking strategy is added or removed from the allowlist.\"},\"ValidatorDeregistered(address,bytes32)\":{\"notice\":\"Emitted when a validator is deregistered from the Verisense AVS.\"},\"ValidatorRegistered(address,address,bytes,bytes32,uint256)\":{\"notice\":\"Emitted when a new validator is registered in the Verisense AVS .\"}},\"kind\":\"user\",\"methods\":{\"AVS_DIRECTORY()\":{\"notice\":\"Returns the AVSDirectory contract.\"},\"EIGEN_DELEGATION_MANAGER()\":{\"notice\":\"Returns the EigenDelegationManager contract.\"},\"EIGEN_POD_MANAGER()\":{\"notice\":\"Returns the EigenPodManager contract.\"},\"finishDeregisterOperator()\":{\"notice\":\"Finishes the process of deregistering an operator from the Verisense AVS.\"},\"getDeregistrationDelay()\":{\"notice\":\"Retrieves the current deregistration delay for operators.\"},\"getOperator(address)\":{\"notice\":\"Retrieves information about a specific operator.\"},\"getOperatorRestakedStrategies(address)\":{\"notice\":\"Returns the list of strategies that the operator has potentially restaked on the AVS\"},\"getRestakeableStrategies()\":{\"notice\":\"Returns the list of strategies that the AVS supports for restaking\"},\"registerOperator((bytes,bytes32,uint256),bytes32)\":{\"notice\":\"Registers a new operator in the Verisense AVS.\"},\"setAllowlistRestakingStrategy(address,bool)\":{\"notice\":\"Add or remove a strategy address from the allowlist of restaking strategies\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the claimer for the AVS to get excess rewards back.\"},\"setDeregistrationDelay(uint64)\":{\"notice\":\"Sets a new deregistration delay for operators.\"},\"startDeregisterOperator()\":{\"notice\":\"Starts the process of deregistering an operator from the Verisense AVS.\"},\"submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Submits EigenLayer rewards for operators.\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Updates the metadata URI for the AVS\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VerisenseAVSManager.sol\":\"VerisenseAVSManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xa3edd94148e931d8a37353624ea57afa1c679b6fe06b7059ccdc8da78a90c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0041d5bae8c6115c3378532d5b7cfbb1a288780279a3873334e49785b65a1b9d\",\"dweb:/ipfs/QmQTGDrQSZkzRbFZWAhysaeCvKnP7wPh2VSPkN4J323QmZ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/VerisenseAVSManager.sol\":{\"keccak256\":\"0x5e356ab2d64ea6b5017a64aaf1ebcbb0c087f7a59d6a93f71dbb3c53e7b16774\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e480283ed813bcb608427344b9518a73f748c6bfd87b4ad098649e33b5a4fbf8\",\"dweb:/ipfs/QmZLBPQ5LuFxqbZvv377tVPefUqCttoQ1794VhS6F3trPC\"]},\"contracts/VerisenseAVSManagerStorage.sol\":{\"keccak256\":\"0xe5f5b9c030bdd76257485f48c472e2c8d8e79e909361042d7b88ca4d3faa470a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://558b9b4aadd588f0bbdf1b69db41dc656efd9c8613605b9f56b6538860c88075\",\"dweb:/ipfs/QmVtgXc8jM59oXipiR6iM2FtpkCSL6BUfLo9g6sofhfjwo\"]},\"contracts/interfaces/IVerisenseAVSManager.sol\":{\"keccak256\":\"0x031aca97e1d4b772bc5931ef62dcad307935260faad243a82287fd2ed3b3f0b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b8f08dd45f239ed0c27fadf3df656f9153f68d7d5f6c3de771d466ce70276bb3\",\"dweb:/ipfs/QmTXaCs3xxk4VxZdt8tQ7xqvSZjqznCxhwAJga25SBPi6H\"]},\"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x19e6056ed89c88687576965f58dfa642276174a5037d6dc0c58a44cabcae6665\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee010c1f73b3cf85fe7c67d21f83845cc5a86d56017fc2c00862799b45fe998b\",\"dweb:/ipfs/Qmch2rmrHQgtKSwe78JWtPw3xK2km1aY52UxNyCV7xc1cv\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x674155654ffe5f7aeef5b7f626a6ffc3d023adcae345daca0741fa4e46760c30\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://024e5ec529ae5d740ed9175cb582df0b77a692547d2d15fa57af737ca7a18241\",\"dweb:/ipfs/QmatLxGSiugq27rxqy66hF185uN8dVSoku9qo5r9iL9YKR\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3896,"contract":"contracts/VerisenseAVSManager.sol:VerisenseAVSManager","label":"EIGEN_POD_MANAGER","offset":0,"slot":"0","type":"t_contract(IEigenPodManager)6613"},{"astId":3899,"contract":"contracts/VerisenseAVSManager.sol:VerisenseAVSManager","label":"EIGEN_DELEGATION_MANAGER","offset":0,"slot":"1","type":"t_contract(IDelegationManager)6097"},{"astId":3902,"contract":"contracts/VerisenseAVSManager.sol:VerisenseAVSManager","label":"EIGEN_REWARDS_COORDINATOR","offset":0,"slot":"2","type":"t_contract(IRewardsCoordinator)7242"},{"astId":3905,"contract":"contracts/VerisenseAVSManager.sol:VerisenseAVSManager","label":"AVS_DIRECTORY","offset":0,"slot":"3","type":"t_contract(IAVSDirectory)5572"}],"types":{"t_contract(IAVSDirectory)5572":{"encoding":"inplace","label":"contract IAVSDirectory","numberOfBytes":"20"},"t_contract(IDelegationManager)6097":{"encoding":"inplace","label":"contract IDelegationManager","numberOfBytes":"20"},"t_contract(IEigenPodManager)6613":{"encoding":"inplace","label":"contract IEigenPodManager","numberOfBytes":"20"},"t_contract(IRewardsCoordinator)7242":{"encoding":"inplace","label":"contract IRewardsCoordinator","numberOfBytes":"20"}}}}},"contracts/VerisenseAVSManagerStorage.sol":{"VerisenseAVSManagerStorage":{"abi":[{"inputs":[],"name":"AVSOperatorStatusCallFailed","type":"error"},{"inputs":[],"name":"CommitmentChangeNotReady","type":"error"},{"inputs":[],"name":"DelegateKeyNotSet","type":"error"},{"inputs":[],"name":"DeregistrationAlreadyStarted","type":"error"},{"inputs":[],"name":"DeregistrationDelayNotElapsed","type":"error"},{"inputs":[],"name":"DeregistrationNotStarted","type":"error"},{"inputs":[],"name":"InvalidAVSDirectoryAddress","type":"error"},{"inputs":[],"name":"InvalidEigenDelegationManagerAddress","type":"error"},{"inputs":[],"name":"InvalidEigenPodManagerAddress","type":"error"},{"inputs":[],"name":"InvalidRewardsCoordinatorAddress","type":"error"},{"inputs":[],"name":"NoEigenPod","type":"error"},{"inputs":[],"name":"NotDelegatedToOperator","type":"error"},{"inputs":[],"name":"NotOperator","type":"error"},{"inputs":[],"name":"NotValidatorOperator","type":"error"},{"inputs":[],"name":"OperatorHasValidators","type":"error"},{"inputs":[],"name":"OperatorNotRegistered","type":"error"},{"inputs":[],"name":"RestakingStrategyAllowlistUpdateFailed","type":"error"},{"inputs":[],"name":"ValidatorAlreadyDeregistered","type":"error"},{"inputs":[],"name":"ValidatorAlreadyRegistered","type":"error"},{"inputs":[],"name":"ValidatorNotActive","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"oldDelay","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"newDelay","type":"uint64"}],"name":"DeregistrationDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorDeregisterStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorRegistered","type":"event"},{"anonymous":false,"inputs":[],"name":"OperatorRewardsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"bool","name":"allowed","type":"bool"}],"name":"RestakingStrategyAllowlistUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bytes32","name":"blsPubKeyHash","type":"bytes32"}],"name":"ValidatorDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bytes","name":"delegateKey","type":"bytes"},{"indexed":false,"internalType":"bytes32","name":"blsPubKeyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"validatorIndex","type":"uint256"}],"name":"ValidatorRegistered","type":"event"},{"inputs":[],"name":"AVS_DIRECTORY","outputs":[{"internalType":"contract IAVSDirectory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_DELEGATION_MANAGER","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_POD_MANAGER","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finishDeregisterOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeregistrationDelay","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperator","outputs":[{"components":[{"internalType":"uint128","name":"startDeregisterOperatorBlock","type":"uint128"},{"internalType":"bool","name":"isRegistered","type":"bool"}],"internalType":"struct IVerisenseAVSManager.OperatorDataExtended","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperatorRestakedStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRestakeableStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRewardedEra","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"operatorSignature","type":"tuple"},{"internalType":"bytes32","name":"substrate_pubkey","type":"bytes32"}],"name":"registerOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"bool","name":"allowed","type":"bool"}],"name":"setAllowlistRestakingStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"name":"setClaimerFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"newDelay","type":"uint64"}],"name":"setDeregistrationDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startDeregisterOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eraIndex","type":"uint256"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IRewardsCoordinator.OperatorReward[]","name":"operatorRewards","type":"tuple[]"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]","name":"submissions","type":"tuple[]"}],"name":"submitOperatorRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"updateAVSMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"AVS_DIRECTORY()":"ad656c56","EIGEN_DELEGATION_MANAGER()":"f2251b0f","EIGEN_POD_MANAGER()":"0a732358","finishDeregisterOperator()":"e3672163","getDeregistrationDelay()":"8495feab","getOperator(address)":"5865c60c","getOperatorRestakedStrategies(address)":"33cfb7b7","getRestakeableStrategies()":"e481af9d","latestRewardedEra()":"1ed6e115","registerOperator((bytes,bytes32,uint256),bytes32)":"ca1e1d67","setAllowlistRestakingStrategy(address,bool)":"43adc491","setClaimerFor(address)":"a0169ddd","setDeregistrationDelay(uint64)":"84a3f19b","startDeregisterOperator()":"389517e4","submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":"9375e713","updateAVSMetadataURI(string)":"a98fb355"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AVSOperatorStatusCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitmentChangeNotReady\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateKeyNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationDelayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSDirectoryAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEigenDelegationManagerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEigenPodManagerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardsCoordinatorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEigenPod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegatedToOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidatorOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorHasValidators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RestakingStrategyAllowlistUpdateFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAlreadyDeregistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"oldDelay\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newDelay\",\"type\":\"uint64\"}],\"name\":\"DeregistrationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDeregisterStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OperatorRewardsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"RestakingStrategyAllowlistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blsPubKeyHash\",\"type\":\"bytes32\"}],\"name\":\"ValidatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"delegateKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blsPubKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorIndex\",\"type\":\"uint256\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AVS_DIRECTORY\",\"outputs\":[{\"internalType\":\"contract IAVSDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_DELEGATION_MANAGER\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_POD_MANAGER\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishDeregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeregistrationDelay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"startDeregisterOperatorBlock\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"internalType\":\"struct IVerisenseAVSManager.OperatorDataExtended\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRestakedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRestakeableStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRewardedEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"substrate_pubkey\",\"type\":\"bytes32\"}],\"name\":\"registerOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowlistRestakingStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newDelay\",\"type\":\"uint64\"}],\"name\":\"setDeregistrationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDeregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eraIndex\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]\",\"name\":\"submissions\",\"type\":\"tuple[]\"}],\"name\":\"submitOperatorRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Puffer Finance\",\"custom:security-contact\":\"security@puffer.fi\",\"events\":{\"DeregistrationDelaySet(uint64,uint64)\":{\"params\":{\"newDelay\":\"The new deregistration delay value.\",\"oldDelay\":\"The previous deregistration delay value.\"}},\"OperatorDeregisterStarted(address)\":{\"params\":{\"operator\":\"The address of the operator starting deregistration.\"}},\"OperatorDeregistered(address)\":{\"params\":{\"operator\":\"The address of the deregistered operator.\"}},\"OperatorRegistered(address)\":{\"params\":{\"operator\":\"The address of the registered operator.\"}},\"RestakingStrategyAllowlistUpdated(address,bool)\":{\"params\":{\"allowed\":\"Whether the strategy is allowed (true) or disallowed (false).\",\"strategy\":\"The address of the strategy.\"}},\"ValidatorDeregistered(address,bytes32)\":{\"params\":{\"blsPubKeyHash\":\"The BLS public key hash of the deregistered validator.\",\"operator\":\"The address of the operator managing the validator.\"}},\"ValidatorRegistered(address,address,bytes,bytes32,uint256)\":{\"params\":{\"blsPubKeyHash\":\"The BLS public key hash of the validator.\",\"delegateKey\":\"The delegate public key for the validator.\",\"podOwner\":\"The address of the validator's EigenPod owner.\",\"validatorIndex\":\"The beacon chain validator index.\"}}},\"kind\":\"dev\",\"methods\":{\"AVS_DIRECTORY()\":{\"returns\":{\"_0\":\"IAVSDirectory The AVSDirectory contract.\"}},\"EIGEN_DELEGATION_MANAGER()\":{\"returns\":{\"_0\":\"IDelegationManager The EigenDelegationManager contract.\"}},\"EIGEN_POD_MANAGER()\":{\"returns\":{\"_0\":\"IEigenPodManager The EigenPodManager contract.\"}},\"getDeregistrationDelay()\":{\"returns\":{\"_0\":\"The current deregistration delay in seconds.\"}},\"getOperator(address)\":{\"params\":{\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"OperatorDataExtended struct containing information about the operator.\"}},\"getOperatorRestakedStrategies(address)\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness      of each element in the returned array. The off-chain service should do that validation separately\",\"params\":{\"operator\":\"The address of the operator to get restaked strategies for\"}},\"getRestakeableStrategies()\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on uniqueness of each element in the returned array.      The off-chain service should do that validation separately\"},\"registerOperator((bytes,bytes32,uint256),bytes32)\":{\"params\":{\"operatorSignature\":\"The signature and associated data for operator registration.\"}},\"setAllowlistRestakingStrategy(address,bool)\":{\"details\":\"Restricted to the DAO\",\"params\":{\"allowed\":\"Whether the strategy should be allowed (true) or disallowed (false)\",\"strategy\":\"The address of the strategy to add or remove\"}},\"setClaimerFor(address)\":{\"params\":{\"claimer\":\"The address of the claimer.\"}},\"setDeregistrationDelay(uint64)\":{\"details\":\"Restricted to the DAO\",\"params\":{\"newDelay\":\"The new deregistration delay in seconds.\"}},\"submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"params\":{\"eraIndex\":\"The era index of submissions.\",\"submissions\":\"The array of rewards submissions.\"}},\"updateAVSMetadataURI(string)\":{\"params\":{\"_metadataURI\":\"is the metadata URI for the AVS\"}}},\"title\":\"VerisenseAVSManagerStorage\",\"version\":1},\"userdoc\":{\"errors\":{\"AVSOperatorStatusCallFailed()\":[{\"notice\":\"Thrown when an AVS operator status call fails\"}],\"CommitmentChangeNotReady()\":[{\"notice\":\"Thrown when trying to update an operator commitment before the change delay has passed\"}],\"DelegateKeyNotSet()\":[{\"notice\":\"Thrown when an operator's delegate key is not set\"}],\"DeregistrationAlreadyStarted()\":[{\"notice\":\"Thrown when attempting to start deregistering an operator that has already started\"}],\"DeregistrationDelayNotElapsed()\":[{\"notice\":\"Thrown when trying to finish deregistering an operator before the delay has elapsed\"}],\"DeregistrationNotStarted()\":[{\"notice\":\"Thrown when trying to finish deregistering an operator that hasn't started\"}],\"InvalidAVSDirectoryAddress()\":[{\"notice\":\"Thrown when an invalid AVSDirectory address is provided\"}],\"InvalidEigenDelegationManagerAddress()\":[{\"notice\":\"Thrown when an invalid EigenDelegationManager address is provided\"}],\"InvalidEigenPodManagerAddress()\":[{\"notice\":\"Thrown when an invalid EigenPodManager address is provided\"}],\"InvalidRewardsCoordinatorAddress()\":[{\"notice\":\"Thrown when an invalid RewardsCoordinator address is provided\"}],\"NoEigenPod()\":[{\"notice\":\"Thrown when an EigenPod does not exist for a given address\"}],\"NotDelegatedToOperator()\":[{\"notice\":\"Thrown when an address is not delegated to the expected operator\"}],\"NotOperator()\":[{\"notice\":\"Thrown when a non-operator attempts an operator-only action\"}],\"NotValidatorOperator()\":[{\"notice\":\"Thrown when a non-operator attempts to deregister a validator\"}],\"OperatorHasValidators()\":[{\"notice\":\"Thrown when an operator attempts to deregister while still having validators\"}],\"OperatorNotRegistered()\":[{\"notice\":\"Thrown when an action requires a registered operator, but the operator is not registered\"}],\"RestakingStrategyAllowlistUpdateFailed()\":[{\"notice\":\"Thrown when a restaking strategy allowlist update fails\"}],\"ValidatorAlreadyDeregistered()\":[{\"notice\":\"Thrown when attempting to deregister a validator that is already deregistered\"}],\"ValidatorAlreadyRegistered()\":[{\"notice\":\"Thrown when attempting to register a validator that is already registered\"}],\"ValidatorNotActive()\":[{\"notice\":\"Thrown when a validator is not in the active state\"}]},\"events\":{\"DeregistrationDelaySet(uint64,uint64)\":{\"notice\":\"Emitted when the deregistration delay is updated.\"},\"OperatorDeregisterStarted(address)\":{\"notice\":\"Emitted when an operator starts the deregistration process.\"},\"OperatorDeregistered(address)\":{\"notice\":\"Emitted when an operator is deregistered from the Verisense AVS.\"},\"OperatorRegistered(address)\":{\"notice\":\"Emitted when a new operator is registered in the Verisense AVS.\"},\"OperatorRewardsSubmitted()\":{\"notice\":\"Emitted when operator rewards are submitted.\"},\"RestakingStrategyAllowlistUpdated(address,bool)\":{\"notice\":\"Emitted when a restaking strategy is added or removed from the allowlist.\"},\"ValidatorDeregistered(address,bytes32)\":{\"notice\":\"Emitted when a validator is deregistered from the Verisense AVS.\"},\"ValidatorRegistered(address,address,bytes,bytes32,uint256)\":{\"notice\":\"Emitted when a new validator is registered in the Verisense AVS .\"}},\"kind\":\"user\",\"methods\":{\"AVS_DIRECTORY()\":{\"notice\":\"Returns the AVSDirectory contract.\"},\"EIGEN_DELEGATION_MANAGER()\":{\"notice\":\"Returns the EigenDelegationManager contract.\"},\"EIGEN_POD_MANAGER()\":{\"notice\":\"Returns the EigenPodManager contract.\"},\"finishDeregisterOperator()\":{\"notice\":\"Finishes the process of deregistering an operator from the Verisense AVS.\"},\"getDeregistrationDelay()\":{\"notice\":\"Retrieves the current deregistration delay for operators.\"},\"getOperator(address)\":{\"notice\":\"Retrieves information about a specific operator.\"},\"getOperatorRestakedStrategies(address)\":{\"notice\":\"Returns the list of strategies that the operator has potentially restaked on the AVS\"},\"getRestakeableStrategies()\":{\"notice\":\"Returns the list of strategies that the AVS supports for restaking\"},\"registerOperator((bytes,bytes32,uint256),bytes32)\":{\"notice\":\"Registers a new operator in the Verisense AVS.\"},\"setAllowlistRestakingStrategy(address,bool)\":{\"notice\":\"Add or remove a strategy address from the allowlist of restaking strategies\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the claimer for the AVS to get excess rewards back.\"},\"setDeregistrationDelay(uint64)\":{\"notice\":\"Sets a new deregistration delay for operators.\"},\"startDeregisterOperator()\":{\"notice\":\"Starts the process of deregistering an operator from the Verisense AVS.\"},\"submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Submits EigenLayer rewards for operators.\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Updates the metadata URI for the AVS\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VerisenseAVSManagerStorage.sol\":\"VerisenseAVSManagerStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/VerisenseAVSManagerStorage.sol\":{\"keccak256\":\"0xe5f5b9c030bdd76257485f48c472e2c8d8e79e909361042d7b88ca4d3faa470a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://558b9b4aadd588f0bbdf1b69db41dc656efd9c8613605b9f56b6538860c88075\",\"dweb:/ipfs/QmVtgXc8jM59oXipiR6iM2FtpkCSL6BUfLo9g6sofhfjwo\"]},\"contracts/interfaces/IVerisenseAVSManager.sol\":{\"keccak256\":\"0x031aca97e1d4b772bc5931ef62dcad307935260faad243a82287fd2ed3b3f0b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b8f08dd45f239ed0c27fadf3df656f9153f68d7d5f6c3de771d466ce70276bb3\",\"dweb:/ipfs/QmTXaCs3xxk4VxZdt8tQ7xqvSZjqznCxhwAJga25SBPi6H\"]},\"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x19e6056ed89c88687576965f58dfa642276174a5037d6dc0c58a44cabcae6665\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee010c1f73b3cf85fe7c67d21f83845cc5a86d56017fc2c00862799b45fe998b\",\"dweb:/ipfs/Qmch2rmrHQgtKSwe78JWtPw3xK2km1aY52UxNyCV7xc1cv\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x674155654ffe5f7aeef5b7f626a6ffc3d023adcae345daca0741fa4e46760c30\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://024e5ec529ae5d740ed9175cb582df0b77a692547d2d15fa57af737ca7a18241\",\"dweb:/ipfs/QmatLxGSiugq27rxqy66hF185uN8dVSoku9qo5r9iL9YKR\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IVerisenseAVSManager.sol":{"IVerisenseAVSManager":{"abi":[{"inputs":[],"name":"AVSOperatorStatusCallFailed","type":"error"},{"inputs":[],"name":"CommitmentChangeNotReady","type":"error"},{"inputs":[],"name":"DelegateKeyNotSet","type":"error"},{"inputs":[],"name":"DeregistrationAlreadyStarted","type":"error"},{"inputs":[],"name":"DeregistrationDelayNotElapsed","type":"error"},{"inputs":[],"name":"DeregistrationNotStarted","type":"error"},{"inputs":[],"name":"InvalidAVSDirectoryAddress","type":"error"},{"inputs":[],"name":"InvalidEigenDelegationManagerAddress","type":"error"},{"inputs":[],"name":"InvalidEigenPodManagerAddress","type":"error"},{"inputs":[],"name":"InvalidRewardsCoordinatorAddress","type":"error"},{"inputs":[],"name":"NoEigenPod","type":"error"},{"inputs":[],"name":"NotDelegatedToOperator","type":"error"},{"inputs":[],"name":"NotOperator","type":"error"},{"inputs":[],"name":"NotValidatorOperator","type":"error"},{"inputs":[],"name":"OperatorHasValidators","type":"error"},{"inputs":[],"name":"OperatorNotRegistered","type":"error"},{"inputs":[],"name":"RestakingStrategyAllowlistUpdateFailed","type":"error"},{"inputs":[],"name":"ValidatorAlreadyDeregistered","type":"error"},{"inputs":[],"name":"ValidatorAlreadyRegistered","type":"error"},{"inputs":[],"name":"ValidatorNotActive","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"oldDelay","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"newDelay","type":"uint64"}],"name":"DeregistrationDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorDeregisterStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"OperatorRegistered","type":"event"},{"anonymous":false,"inputs":[],"name":"OperatorRewardsSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"bool","name":"allowed","type":"bool"}],"name":"RestakingStrategyAllowlistUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bytes32","name":"blsPubKeyHash","type":"bytes32"}],"name":"ValidatorDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bytes","name":"delegateKey","type":"bytes"},{"indexed":false,"internalType":"bytes32","name":"blsPubKeyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"validatorIndex","type":"uint256"}],"name":"ValidatorRegistered","type":"event"},{"inputs":[],"name":"AVS_DIRECTORY","outputs":[{"internalType":"contract IAVSDirectory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_DELEGATION_MANAGER","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIGEN_POD_MANAGER","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finishDeregisterOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeregistrationDelay","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperator","outputs":[{"components":[{"internalType":"uint128","name":"startDeregisterOperatorBlock","type":"uint128"},{"internalType":"bool","name":"isRegistered","type":"bool"}],"internalType":"struct IVerisenseAVSManager.OperatorDataExtended","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperatorRestakedStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRestakeableStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRewardedEra","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"operatorSignature","type":"tuple"},{"internalType":"bytes32","name":"substrate_pubkey","type":"bytes32"}],"name":"registerOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"bool","name":"allowed","type":"bool"}],"name":"setAllowlistRestakingStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"name":"setClaimerFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"newDelay","type":"uint64"}],"name":"setDeregistrationDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startDeregisterOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eraIndex","type":"uint256"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IRewardsCoordinator.OperatorReward[]","name":"operatorRewards","type":"tuple[]"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]","name":"submissions","type":"tuple[]"}],"name":"submitOperatorRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"updateAVSMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"AVS_DIRECTORY()":"ad656c56","EIGEN_DELEGATION_MANAGER()":"f2251b0f","EIGEN_POD_MANAGER()":"0a732358","finishDeregisterOperator()":"e3672163","getDeregistrationDelay()":"8495feab","getOperator(address)":"5865c60c","getOperatorRestakedStrategies(address)":"33cfb7b7","getRestakeableStrategies()":"e481af9d","latestRewardedEra()":"1ed6e115","registerOperator((bytes,bytes32,uint256),bytes32)":"ca1e1d67","setAllowlistRestakingStrategy(address,bool)":"43adc491","setClaimerFor(address)":"a0169ddd","setDeregistrationDelay(uint64)":"84a3f19b","startDeregisterOperator()":"389517e4","submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":"9375e713","updateAVSMetadataURI(string)":"a98fb355"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AVSOperatorStatusCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitmentChangeNotReady\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateKeyNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationDelayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeregistrationNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSDirectoryAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEigenDelegationManagerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEigenPodManagerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardsCoordinatorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEigenPod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegatedToOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidatorOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorHasValidators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RestakingStrategyAllowlistUpdateFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAlreadyDeregistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValidatorNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"oldDelay\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newDelay\",\"type\":\"uint64\"}],\"name\":\"DeregistrationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDeregisterStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OperatorRewardsSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"RestakingStrategyAllowlistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blsPubKeyHash\",\"type\":\"bytes32\"}],\"name\":\"ValidatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"delegateKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blsPubKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorIndex\",\"type\":\"uint256\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AVS_DIRECTORY\",\"outputs\":[{\"internalType\":\"contract IAVSDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_DELEGATION_MANAGER\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIGEN_POD_MANAGER\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishDeregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeregistrationDelay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"startDeregisterOperatorBlock\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"internalType\":\"struct IVerisenseAVSManager.OperatorDataExtended\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRestakedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRestakeableStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRewardedEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"substrate_pubkey\",\"type\":\"bytes32\"}],\"name\":\"registerOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowlistRestakingStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newDelay\",\"type\":\"uint64\"}],\"name\":\"setDeregistrationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDeregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eraIndex\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]\",\"name\":\"submissions\",\"type\":\"tuple[]\"}],\"name\":\"submitOperatorRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the main functions and events for operator and validator management.\",\"events\":{\"DeregistrationDelaySet(uint64,uint64)\":{\"params\":{\"newDelay\":\"The new deregistration delay value.\",\"oldDelay\":\"The previous deregistration delay value.\"}},\"OperatorDeregisterStarted(address)\":{\"params\":{\"operator\":\"The address of the operator starting deregistration.\"}},\"OperatorDeregistered(address)\":{\"params\":{\"operator\":\"The address of the deregistered operator.\"}},\"OperatorRegistered(address)\":{\"params\":{\"operator\":\"The address of the registered operator.\"}},\"RestakingStrategyAllowlistUpdated(address,bool)\":{\"params\":{\"allowed\":\"Whether the strategy is allowed (true) or disallowed (false).\",\"strategy\":\"The address of the strategy.\"}},\"ValidatorDeregistered(address,bytes32)\":{\"params\":{\"blsPubKeyHash\":\"The BLS public key hash of the deregistered validator.\",\"operator\":\"The address of the operator managing the validator.\"}},\"ValidatorRegistered(address,address,bytes,bytes32,uint256)\":{\"params\":{\"blsPubKeyHash\":\"The BLS public key hash of the validator.\",\"delegateKey\":\"The delegate public key for the validator.\",\"podOwner\":\"The address of the validator's EigenPod owner.\",\"validatorIndex\":\"The beacon chain validator index.\"}}},\"kind\":\"dev\",\"methods\":{\"AVS_DIRECTORY()\":{\"returns\":{\"_0\":\"IAVSDirectory The AVSDirectory contract.\"}},\"EIGEN_DELEGATION_MANAGER()\":{\"returns\":{\"_0\":\"IDelegationManager The EigenDelegationManager contract.\"}},\"EIGEN_POD_MANAGER()\":{\"returns\":{\"_0\":\"IEigenPodManager The EigenPodManager contract.\"}},\"getDeregistrationDelay()\":{\"returns\":{\"_0\":\"The current deregistration delay in seconds.\"}},\"getOperator(address)\":{\"params\":{\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"OperatorDataExtended struct containing information about the operator.\"}},\"getOperatorRestakedStrategies(address)\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness      of each element in the returned array. The off-chain service should do that validation separately\",\"params\":{\"operator\":\"The address of the operator to get restaked strategies for\"}},\"getRestakeableStrategies()\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on uniqueness of each element in the returned array.      The off-chain service should do that validation separately\"},\"registerOperator((bytes,bytes32,uint256),bytes32)\":{\"params\":{\"operatorSignature\":\"The signature and associated data for operator registration.\"}},\"setAllowlistRestakingStrategy(address,bool)\":{\"details\":\"Restricted to the DAO\",\"params\":{\"allowed\":\"Whether the strategy should be allowed (true) or disallowed (false)\",\"strategy\":\"The address of the strategy to add or remove\"}},\"setClaimerFor(address)\":{\"params\":{\"claimer\":\"The address of the claimer.\"}},\"setDeregistrationDelay(uint64)\":{\"details\":\"Restricted to the DAO\",\"params\":{\"newDelay\":\"The new deregistration delay in seconds.\"}},\"submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"params\":{\"eraIndex\":\"The era index of submissions.\",\"submissions\":\"The array of rewards submissions.\"}},\"updateAVSMetadataURI(string)\":{\"params\":{\"_metadataURI\":\"is the metadata URI for the AVS\"}}},\"title\":\"IVerisenseAVSManager\",\"version\":1},\"userdoc\":{\"errors\":{\"AVSOperatorStatusCallFailed()\":[{\"notice\":\"Thrown when an AVS operator status call fails\"}],\"CommitmentChangeNotReady()\":[{\"notice\":\"Thrown when trying to update an operator commitment before the change delay has passed\"}],\"DelegateKeyNotSet()\":[{\"notice\":\"Thrown when an operator's delegate key is not set\"}],\"DeregistrationAlreadyStarted()\":[{\"notice\":\"Thrown when attempting to start deregistering an operator that has already started\"}],\"DeregistrationDelayNotElapsed()\":[{\"notice\":\"Thrown when trying to finish deregistering an operator before the delay has elapsed\"}],\"DeregistrationNotStarted()\":[{\"notice\":\"Thrown when trying to finish deregistering an operator that hasn't started\"}],\"InvalidAVSDirectoryAddress()\":[{\"notice\":\"Thrown when an invalid AVSDirectory address is provided\"}],\"InvalidEigenDelegationManagerAddress()\":[{\"notice\":\"Thrown when an invalid EigenDelegationManager address is provided\"}],\"InvalidEigenPodManagerAddress()\":[{\"notice\":\"Thrown when an invalid EigenPodManager address is provided\"}],\"InvalidRewardsCoordinatorAddress()\":[{\"notice\":\"Thrown when an invalid RewardsCoordinator address is provided\"}],\"NoEigenPod()\":[{\"notice\":\"Thrown when an EigenPod does not exist for a given address\"}],\"NotDelegatedToOperator()\":[{\"notice\":\"Thrown when an address is not delegated to the expected operator\"}],\"NotOperator()\":[{\"notice\":\"Thrown when a non-operator attempts an operator-only action\"}],\"NotValidatorOperator()\":[{\"notice\":\"Thrown when a non-operator attempts to deregister a validator\"}],\"OperatorHasValidators()\":[{\"notice\":\"Thrown when an operator attempts to deregister while still having validators\"}],\"OperatorNotRegistered()\":[{\"notice\":\"Thrown when an action requires a registered operator, but the operator is not registered\"}],\"RestakingStrategyAllowlistUpdateFailed()\":[{\"notice\":\"Thrown when a restaking strategy allowlist update fails\"}],\"ValidatorAlreadyDeregistered()\":[{\"notice\":\"Thrown when attempting to deregister a validator that is already deregistered\"}],\"ValidatorAlreadyRegistered()\":[{\"notice\":\"Thrown when attempting to register a validator that is already registered\"}],\"ValidatorNotActive()\":[{\"notice\":\"Thrown when a validator is not in the active state\"}]},\"events\":{\"DeregistrationDelaySet(uint64,uint64)\":{\"notice\":\"Emitted when the deregistration delay is updated.\"},\"OperatorDeregisterStarted(address)\":{\"notice\":\"Emitted when an operator starts the deregistration process.\"},\"OperatorDeregistered(address)\":{\"notice\":\"Emitted when an operator is deregistered from the Verisense AVS.\"},\"OperatorRegistered(address)\":{\"notice\":\"Emitted when a new operator is registered in the Verisense AVS.\"},\"OperatorRewardsSubmitted()\":{\"notice\":\"Emitted when operator rewards are submitted.\"},\"RestakingStrategyAllowlistUpdated(address,bool)\":{\"notice\":\"Emitted when a restaking strategy is added or removed from the allowlist.\"},\"ValidatorDeregistered(address,bytes32)\":{\"notice\":\"Emitted when a validator is deregistered from the Verisense AVS.\"},\"ValidatorRegistered(address,address,bytes,bytes32,uint256)\":{\"notice\":\"Emitted when a new validator is registered in the Verisense AVS .\"}},\"kind\":\"user\",\"methods\":{\"AVS_DIRECTORY()\":{\"notice\":\"Returns the AVSDirectory contract.\"},\"EIGEN_DELEGATION_MANAGER()\":{\"notice\":\"Returns the EigenDelegationManager contract.\"},\"EIGEN_POD_MANAGER()\":{\"notice\":\"Returns the EigenPodManager contract.\"},\"finishDeregisterOperator()\":{\"notice\":\"Finishes the process of deregistering an operator from the Verisense AVS.\"},\"getDeregistrationDelay()\":{\"notice\":\"Retrieves the current deregistration delay for operators.\"},\"getOperator(address)\":{\"notice\":\"Retrieves information about a specific operator.\"},\"getOperatorRestakedStrategies(address)\":{\"notice\":\"Returns the list of strategies that the operator has potentially restaked on the AVS\"},\"getRestakeableStrategies()\":{\"notice\":\"Returns the list of strategies that the AVS supports for restaking\"},\"registerOperator((bytes,bytes32,uint256),bytes32)\":{\"notice\":\"Registers a new operator in the Verisense AVS.\"},\"setAllowlistRestakingStrategy(address,bool)\":{\"notice\":\"Add or remove a strategy address from the allowlist of restaking strategies\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the claimer for the AVS to get excess rewards back.\"},\"setDeregistrationDelay(uint64)\":{\"notice\":\"Sets a new deregistration delay for operators.\"},\"startDeregisterOperator()\":{\"notice\":\"Starts the process of deregistering an operator from the Verisense AVS.\"},\"submitOperatorRewards(uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Submits EigenLayer rewards for operators.\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Updates the metadata URI for the AVS\"}},\"notice\":\"Interface for the VerisenseAVSManager contract, which manages operators and validators in the Verisense AVS.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVerisenseAVSManager.sol\":\"IVerisenseAVSManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/interfaces/IVerisenseAVSManager.sol\":{\"keccak256\":\"0x031aca97e1d4b772bc5931ef62dcad307935260faad243a82287fd2ed3b3f0b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b8f08dd45f239ed0c27fadf3df656f9153f68d7d5f6c3de771d466ce70276bb3\",\"dweb:/ipfs/QmTXaCs3xxk4VxZdt8tQ7xqvSZjqznCxhwAJga25SBPi6H\"]},\"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x19e6056ed89c88687576965f58dfa642276174a5037d6dc0c58a44cabcae6665\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee010c1f73b3cf85fe7c67d21f83845cc5a86d56017fc2c00862799b45fe998b\",\"dweb:/ipfs/Qmch2rmrHQgtKSwe78JWtPw3xK2km1aY52UxNyCV7xc1cv\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x674155654ffe5f7aeef5b7f626a6ffc3d023adcae345daca0741fa4e46760c30\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://024e5ec529ae5d740ed9175cb582df0b77a692547d2d15fa57af737ca7a18241\",\"dweb:/ipfs/QmatLxGSiugq27rxqy66hF185uN8dVSoku9qo5r9iL9YKR\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"IAVSDirectory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"avs","type":"address"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"AVSMetadataURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"avs","type":"address"},{"indexed":false,"internalType":"enum IAVSDirectory.OperatorAVSRegistrationStatus","name":"status","type":"uint8"}],"name":"OperatorAVSRegistrationStatusUpdated","type":"event"},{"inputs":[],"name":"OPERATOR_AVS_REGISTRATION_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"calculateOperatorAVSRegistrationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"cancelSalt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"deregisterOperatorFromAVS","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"operatorSaltIsSpent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"operatorSignature","type":"tuple"}],"name":"registerOperatorToAVS","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"metadataURI","type":"string"}],"name":"updateAVSMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"OPERATOR_AVS_REGISTRATION_TYPEHASH()":"d79aceab","calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)":"a1060c88","cancelSalt(bytes32)":"ec76f442","deregisterOperatorFromAVS(address)":"a364f4da","domainSeparator()":"f698da25","operatorSaltIsSpent(address,bytes32)":"374823b5","registerOperatorToAVS(address,(bytes,bytes32,uint256))":"9926ee7d","updateAVSMetadataURI(string)":"a98fb355"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IAVSDirectory.OperatorAVSRegistrationStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"OperatorAVSRegistrationStatusUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_AVS_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateOperatorAVSRegistrationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"cancelSalt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deregisterOperatorFromAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"operatorSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"}],\"name\":\"registerOperatorToAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"}},\"kind\":\"dev\",\"methods\":{\"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\":{\"params\":{\"avs\":\"The address of the service manager contract for the AVS that the operator is registering to\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account registering as an operator\",\"salt\":\"A unique and single use value associated with the approver signature.\"}},\"cancelSalt(bytes32)\":{\"params\":{\"salt\":\"A unique and single use value associated with the approver signature.\"}},\"deregisterOperatorFromAVS(address)\":{\"params\":{\"operator\":\"The address of the operator to deregister.\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"operatorSaltIsSpent(address,bytes32)\":{\"details\":\"Salts is used in the `registerOperatorToAVS` function.\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorSignature\":\"The signature, salt, and expiry of the operator's signature.\"}},\"updateAVSMetadataURI(string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `AVSMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param avs indicates that they are updating their MetadataURI string\"},\"OperatorAVSRegistrationStatusUpdated(address,address,uint8)\":{\"notice\":\"Emitted when an operator's registration status for an AVS is updated\"}},\"kind\":\"user\",\"methods\":{\"OPERATOR_AVS_REGISTRATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the Registration struct used by the contract\"},\"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by an operator to register with an AVS\"},\"cancelSalt(bytes32)\":{\"notice\":\"Called by an operator to cancel a salt that has been used to register with an AVS.\"},\"deregisterOperatorFromAVS(address)\":{\"notice\":\"Called by an avs to deregister an operator with the avs.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"operatorSaltIsSpent(address,bytes32)\":{\"notice\":\"Returns whether or not the salt has already been used by the operator.\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"notice\":\"Called by the AVS's service manager contract to register an operator with the avs.\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":\"IAVSDirectory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x19e6056ed89c88687576965f58dfa642276174a5037d6dc0c58a44cabcae6665\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee010c1f73b3cf85fe7c67d21f83845cc5a86d56017fc2c00862799b45fe998b\",\"dweb:/ipfs/Qmch2rmrHQgtKSwe78JWtPw3xK2km1aY52UxNyCV7xc1cv\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"IDelegationManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"previousValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"MinWithdrawalDelayBlocksSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"indexed":false,"internalType":"struct IDelegationManager.OperatorDetails","name":"newOperatorDetails","type":"tuple"}],"name":"OperatorDetailsModified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"OperatorMetadataURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"indexed":false,"internalType":"struct IDelegationManager.OperatorDetails","name":"operatorDetails","type":"tuple"}],"name":"OperatorRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"OperatorSharesDecreased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"OperatorSharesIncreased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"StakerDelegated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"StakerForceUndelegated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"StakerUndelegated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"StrategyWithdrawalDelayBlocksSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32"}],"name":"WithdrawalCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32"},{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"indexed":false,"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple"}],"name":"WithdrawalQueued","type":"event"},{"inputs":[],"name":"DELEGATION_APPROVAL_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKER_DELEGATION_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"beaconChainETHStrategy","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"calculateCurrentStakerDelegationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"_delegationApprover","type":"address"},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"calculateDelegationApprovalDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"_stakerNonce","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"calculateStakerDelegationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple"}],"name":"calculateWithdrawalRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"middlewareTimesIndex","type":"uint256"},{"internalType":"bool","name":"receiveAsTokens","type":"bool"}],"name":"completeQueuedWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"internalType":"struct IDelegationManager.Withdrawal[]","name":"withdrawals","type":"tuple[]"},{"internalType":"contract IERC20[][]","name":"tokens","type":"address[][]"},{"internalType":"uint256[]","name":"middlewareTimesIndexes","type":"uint256[]"},{"internalType":"bool[]","name":"receiveAsTokens","type":"bool[]"}],"name":"completeQueuedWithdrawals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"cumulativeWithdrawalsQueued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"decreaseDelegatedShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"approverSignatureAndExpiry","type":"tuple"},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"}],"name":"delegateTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"stakerSignatureAndExpiry","type":"tuple"},{"components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"approverSignatureAndExpiry","type":"tuple"},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"}],"name":"delegateToBySignature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"delegatedTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"delegationApprover","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_delegationApprover","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"delegationApproverSaltIsSpent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getDelegatableShares","outputs":[{"internalType":"contract IStrategy[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"name":"getOperatorShares","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"name":"getWithdrawalDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"increaseDelegatedShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"isDelegated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minWithdrawalDelayBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"internalType":"struct IDelegationManager.OperatorDetails","name":"newOperatorDetails","type":"tuple"}],"name":"modifyOperatorDetails","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"operatorDetails","outputs":[{"components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"internalType":"struct IDelegationManager.OperatorDetails","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"operatorShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"},{"internalType":"address","name":"withdrawer","type":"address"}],"internalType":"struct IDelegationManager.QueuedWithdrawalParams[]","name":"queuedWithdrawalParams","type":"tuple[]"}],"name":"queueWithdrawals","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"internalType":"struct IDelegationManager.OperatorDetails","name":"registeringOperatorDetails","type":"tuple"},{"internalType":"string","name":"metadataURI","type":"string"}],"name":"registerAsOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMinWithdrawalDelayBlocks","type":"uint256"}],"name":"setMinWithdrawalDelayBlocks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"withdrawalDelayBlocks","type":"uint256[]"}],"name":"setStrategyWithdrawalDelayBlocks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"stakerNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"stakerOptOutWindowBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"strategyWithdrawalDelayBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"undelegate","outputs":[{"internalType":"bytes32[]","name":"withdrawalRoot","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"metadataURI","type":"string"}],"name":"updateOperatorMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DELEGATION_APPROVAL_TYPEHASH()":"04a4f979","DOMAIN_TYPEHASH()":"20606b70","STAKER_DELEGATION_TYPEHASH()":"43377382","beaconChainETHStrategy()":"9104c319","calculateCurrentStakerDelegationDigestHash(address,address,uint256)":"1bbce091","calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":"0b9f487a","calculateStakerDelegationDigestHash(address,uint256,address,uint256)":"c94b5111","calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))":"597b36da","completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":"60d7faed","completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":"33404396","cumulativeWithdrawalsQueued(address)":"a1788484","decreaseDelegatedShares(address,address,uint256)":"132d4967","delegateTo(address,(bytes,uint256),bytes32)":"eea9064b","delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":"7f548071","delegatedTo(address)":"65da1264","delegationApprover(address)":"3cdeb5e0","delegationApproverSaltIsSpent(address,bytes32)":"bb45fef2","domainSeparator()":"f698da25","getDelegatableShares(address)":"cf80873e","getOperatorShares(address,address[])":"90041347","getWithdrawalDelay(address[])":"0449ca39","increaseDelegatedShares(address,address,uint256)":"28a573ae","isDelegated(address)":"3e28391d","isOperator(address)":"6d70f7ae","minWithdrawalDelayBlocks()":"c448feb8","modifyOperatorDetails((address,address,uint32))":"f16172b0","operatorDetails(address)":"c5e480db","operatorShares(address,address)":"778e55f3","queueWithdrawals((address[],uint256[],address)[])":"0dd8dd02","registerAsOperator((address,address,uint32),string)":"0f589e59","setMinWithdrawalDelayBlocks(uint256)":"635bbd10","setStrategyWithdrawalDelayBlocks(address[],uint256[])":"1522bf02","stakerNonce(address)":"29c77d4f","stakerOptOutWindowBlocks(address)":"16928365","strategyWithdrawalDelayBlocks(address)":"c488375a","undelegate(address)":"da8be864","updateOperatorMetadataURI(string)":"99be81c8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDelegatableShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinWithdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setMinWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"setStrategyWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"params\":{\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"cumulativeWithdrawalsQueued(address)\":{\"details\":\"This only increments (doesn't decrement), and is used to help ensure that otherwise identical withdrawals have unique hashes.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"delegatedTo(address)\":{\"details\":\"Note that returning address(0) indicates that the staker is not actively delegated to any operator.\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"details\":\"Salts are used in the `delegateTo` and `delegateToBySignature` functions. Note that these functions only process the delegationApprover's signature + the provided salt if the operator being delegated to has specified a nonzero address as their `delegationApprover`.\"},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getDelegatableShares(address)\":{\"details\":\"Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"operatorShares(address,address)\":{\"details\":\"By design, the following invariant should hold for each Strategy: (operator's shares in delegation manager) = sum (shares above zero of all stakers delegated to operator) = sum (delegateable shares of all stakers delegated to the operator)\"},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"setMinWithdrawalDelayBlocks(uint256)\":{\"params\":{\"newMinWithdrawalDelayBlocks\":\"new value of `minWithdrawalDelayBlocks`.\"}},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"params\":{\"strategies\":\"The strategies to set the minimum withdrawal delay blocks for\",\"withdrawalDelayBlocks\":\"The minimum withdrawal delay blocks to set for each strategy\"}},\"undelegate(address)\":{\"details\":\"Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \\\"delegationApprover\\\"Reverts if the `staker` is already undelegated.\",\"params\":{\"staker\":\"The account to be undelegated.\"},\"returns\":{\"withdrawalRoot\":\"The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0).\"}},\"updateOperatorMetadataURI(string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the DelegationApproval struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the StakerDelegation struct used by the contract\"},\"beaconChainETHStrategy()\":{\"notice\":\"return address of the beaconChainETHStrategy\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"returns the address of the operator that `staker` is delegated to.Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"getDelegatableShares(address)\":{\"notice\":\"Returns the number of actively-delegatable shares a staker has across all strategies.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced). Note that strategies each have a separate withdrawal delay, which can be greater than this value. So the minimum number of blocks that must pass to withdraw a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"notice\":\"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"notice\":\"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed delegation nonces (used in `delegateToBySignature`) from the staker that the contract has already checked\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Undelegates the staker from the operator who they are delegated to. Puts the staker into the \\\"undelegation limbo\\\" mode of the EigenPodManager and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":\"IDelegationManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"IETHPOSDeposit":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"pubkey","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"withdrawal_credentials","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"amount","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"index","type":"bytes"}],"name":"DepositEvent","type":"event"},{"inputs":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"withdrawal_credentials","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"deposit_data_root","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"get_deposit_count","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_deposit_root","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deposit(bytes,bytes,bytes,bytes32)":"22895118","get_deposit_count()":"621fd130","get_deposit_root()":"c5f2892f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"withdrawal_credentials\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"amount\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"index\",\"type\":\"bytes\"}],\"name\":\"DepositEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"withdrawal_credentials\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"deposit_data_root\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_deposit_count\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_deposit_root\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes,bytes,bytes,bytes32)\":{\"params\":{\"deposit_data_root\":\"The SHA-256 hash of the SSZ-encoded DepositData object. Used as a protection against malformed input.\",\"pubkey\":\"A BLS12-381 public key.\",\"signature\":\"A BLS12-381 signature.\",\"withdrawal_credentials\":\"Commitment to a public key for withdrawals.\"}},\"get_deposit_count()\":{\"returns\":{\"_0\":\"The deposit count encoded as a little endian 64-bit number.\"}},\"get_deposit_root()\":{\"returns\":{\"_0\":\"The deposit root hash.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DepositEvent(bytes,bytes,bytes,bytes,bytes)\":{\"notice\":\"A processed deposit event.\"}},\"kind\":\"user\",\"methods\":{\"deposit(bytes,bytes,bytes,bytes32)\":{\"notice\":\"Submit a Phase 0 DepositData object.\"},\"get_deposit_count()\":{\"notice\":\"Query the current deposit count.\"},\"get_deposit_root()\":{\"notice\":\"Query the current deposit root hash.\"}},\"notice\":\"This is the Ethereum 2.0 deposit contract interface. For more information see the Phase 0 specification under https://github.com/ethereum/eth2.0-specs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":\"IETHPOSDeposit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"IEigenPod":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"checkpointTimestamp","type":"uint64"},{"indexed":true,"internalType":"bytes32","name":"beaconBlockRoot","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"validatorCount","type":"uint256"}],"name":"CheckpointCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"checkpointTimestamp","type":"uint64"},{"indexed":false,"internalType":"int256","name":"totalShareDeltaWei","type":"int256"}],"name":"CheckpointFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"pubkey","type":"bytes"}],"name":"EigenPodStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountReceived","type":"uint256"}],"name":"NonBeaconChainETHReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"prevProofSubmitter","type":"address"},{"indexed":false,"internalType":"address","name":"newProofSubmitter","type":"address"}],"name":"ProofSubmitterUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RestakedBeaconChainETHWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint40","name":"validatorIndex","type":"uint40"},{"indexed":false,"internalType":"uint64","name":"balanceTimestamp","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"newValidatorBalanceGwei","type":"uint64"}],"name":"ValidatorBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"checkpointTimestamp","type":"uint64"},{"indexed":true,"internalType":"uint40","name":"validatorIndex","type":"uint40"}],"name":"ValidatorCheckpointed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint40","name":"validatorIndex","type":"uint40"}],"name":"ValidatorRestaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"checkpointTimestamp","type":"uint64"},{"indexed":true,"internalType":"uint40","name":"validatorIndex","type":"uint40"}],"name":"ValidatorWithdrawn","type":"event"},{"inputs":[],"name":"activeValidatorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"checkpointBalanceExitedGwei","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentCheckpoint","outputs":[{"components":[{"internalType":"bytes32","name":"beaconBlockRoot","type":"bytes32"},{"internalType":"uint24","name":"proofsRemaining","type":"uint24"},{"internalType":"uint64","name":"podBalanceGwei","type":"uint64"},{"internalType":"int128","name":"balanceDeltasGwei","type":"int128"}],"internalType":"struct IEigenPod.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentCheckpointTimestamp","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"getParentBlockRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastCheckpointTimestamp","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"podOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proofSubmitter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokenList","type":"address[]"},{"internalType":"uint256[]","name":"amountsToWithdraw","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"recoverTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProofSubmitter","type":"address"}],"name":"setProofSubmitter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"depositDataRoot","type":"bytes32"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"revertIfNoBalance","type":"bool"}],"name":"startCheckpoint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"validatorPubkeyHash","type":"bytes32"}],"name":"validatorPubkeyHashToInfo","outputs":[{"components":[{"internalType":"uint64","name":"validatorIndex","type":"uint64"},{"internalType":"uint64","name":"restakedBalanceGwei","type":"uint64"},{"internalType":"uint64","name":"lastCheckpointedAt","type":"uint64"},{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"status","type":"uint8"}],"internalType":"struct IEigenPod.ValidatorInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"validatorPubkey","type":"bytes"}],"name":"validatorPubkeyToInfo","outputs":[{"components":[{"internalType":"uint64","name":"validatorIndex","type":"uint64"},{"internalType":"uint64","name":"restakedBalanceGwei","type":"uint64"},{"internalType":"uint64","name":"lastCheckpointedAt","type":"uint64"},{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"status","type":"uint8"}],"internalType":"struct IEigenPod.ValidatorInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"validatorPubkey","type":"bytes"}],"name":"validatorStatus","outputs":[{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"pubkeyHash","type":"bytes32"}],"name":"validatorStatus","outputs":[{"internalType":"enum IEigenPod.VALIDATOR_STATUS","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"balanceContainerRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct BeaconChainProofs.BalanceContainerProof","name":"balanceContainerProof","type":"tuple"},{"components":[{"internalType":"bytes32","name":"pubkeyHash","type":"bytes32"},{"internalType":"bytes32","name":"balanceRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct BeaconChainProofs.BalanceProof[]","name":"proofs","type":"tuple[]"}],"name":"verifyCheckpointProofs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"beaconTimestamp","type":"uint64"},{"components":[{"internalType":"bytes32","name":"beaconStateRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct BeaconChainProofs.StateRootProof","name":"stateRootProof","type":"tuple"},{"components":[{"internalType":"bytes32[]","name":"validatorFields","type":"bytes32[]"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct BeaconChainProofs.ValidatorProof","name":"proof","type":"tuple"}],"name":"verifyStaleBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"beaconTimestamp","type":"uint64"},{"components":[{"internalType":"bytes32","name":"beaconStateRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}],"internalType":"struct BeaconChainProofs.StateRootProof","name":"stateRootProof","type":"tuple"},{"internalType":"uint40[]","name":"validatorIndices","type":"uint40[]"},{"internalType":"bytes[]","name":"validatorFieldsProofs","type":"bytes[]"},{"internalType":"bytes32[][]","name":"validatorFields","type":"bytes32[][]"}],"name":"verifyWithdrawalCredentials","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawRestakedBeaconChainETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawableRestakedExecutionLayerGwei","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"activeValidatorCount()":"2340e8d3","checkpointBalanceExitedGwei(uint64)":"52396a59","currentCheckpoint()":"47d28372","currentCheckpointTimestamp()":"42ecff2a","eigenPodManager()":"4665bcda","getParentBlockRoot(uint64)":"6c0d2d5a","initialize(address)":"c4d66de8","lastCheckpointTimestamp()":"ee94d67c","podOwner()":"0b18ff66","proofSubmitter()":"58753357","recoverTokens(address[],uint256[],address)":"dda3346c","setProofSubmitter(address)":"d06d5587","stake(bytes,bytes,bytes32)":"9b4e4634","startCheckpoint(bool)":"88676cad","validatorPubkeyHashToInfo(bytes32)":"6fcd0e53","validatorPubkeyToInfo(bytes)":"b522538a","validatorStatus(bytes)":"58eaee79","validatorStatus(bytes32)":"7439841f","verifyCheckpointProofs((bytes32,bytes),(bytes32,bytes32,bytes)[])":"f074ba62","verifyStaleBalance(uint64,(bytes32,bytes),(bytes32[],bytes))":"039157d2","verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])":"3f65cf19","withdrawRestakedBeaconChainETH(address,uint256)":"c4907442","withdrawableRestakedExecutionLayerGwei()":"3474aa16"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"checkpointTimestamp\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconBlockRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorCount\",\"type\":\"uint256\"}],\"name\":\"CheckpointCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"checkpointTimestamp\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalShareDeltaWei\",\"type\":\"int256\"}],\"name\":\"CheckpointFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"EigenPodStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"NonBeaconChainETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevProofSubmitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newProofSubmitter\",\"type\":\"address\"}],\"name\":\"ProofSubmitterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RestakedBeaconChainETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"balanceTimestamp\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newValidatorBalanceGwei\",\"type\":\"uint64\"}],\"name\":\"ValidatorBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"checkpointTimestamp\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"}],\"name\":\"ValidatorCheckpointed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"}],\"name\":\"ValidatorRestaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"checkpointTimestamp\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"}],\"name\":\"ValidatorWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activeValidatorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"checkpointBalanceExitedGwei\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beaconBlockRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint24\",\"name\":\"proofsRemaining\",\"type\":\"uint24\"},{\"internalType\":\"uint64\",\"name\":\"podBalanceGwei\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"balanceDeltasGwei\",\"type\":\"int128\"}],\"internalType\":\"struct IEigenPod.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentCheckpointTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"getParentBlockRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCheckpointTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"podOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofSubmitter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokenList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToWithdraw\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProofSubmitter\",\"type\":\"address\"}],\"name\":\"setProofSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"revertIfNoBalance\",\"type\":\"bool\"}],\"name\":\"startCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validatorPubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"validatorPubkeyHashToInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"restakedBalanceGwei\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastCheckpointedAt\",\"type\":\"uint64\"},{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IEigenPod.ValidatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"validatorPubkey\",\"type\":\"bytes\"}],\"name\":\"validatorPubkeyToInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"restakedBalanceGwei\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastCheckpointedAt\",\"type\":\"uint64\"},{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct IEigenPod.ValidatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"validatorPubkey\",\"type\":\"bytes\"}],\"name\":\"validatorStatus\",\"outputs\":[{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"validatorStatus\",\"outputs\":[{\"internalType\":\"enum IEigenPod.VALIDATOR_STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"balanceContainerRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.BalanceContainerProof\",\"name\":\"balanceContainerProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"balanceRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.BalanceProof[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"verifyCheckpointProofs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"beaconTimestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beaconStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.StateRootProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"validatorFields\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.ValidatorProof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"verifyStaleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"beaconTimestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beaconStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct BeaconChainProofs.StateRootProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"internalType\":\"uint40[]\",\"name\":\"validatorIndices\",\"type\":\"uint40[]\"},{\"internalType\":\"bytes[]\",\"name\":\"validatorFieldsProofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"validatorFields\",\"type\":\"bytes32[][]\"}],\"name\":\"verifyWithdrawalCredentials\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRestakedBeaconChainETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawableRestakedExecutionLayerGwei\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"details\":\"Note that all beacon chain balances are stored as gwei within the beacon chain datastructures. We choose   to account balances in terms of gwei in the EigenPod contract and convert to wei when making calls to other contracts\",\"kind\":\"dev\",\"methods\":{\"getParentBlockRoot(uint64)\":{\"params\":{\"timestamp\":\"of the block for which the parent block root will be returned. MUST correspond to an existing slot within the last 24 hours. If the slot at `timestamp` was skipped, this method will revert.\"}},\"proofSubmitter()\":{\"details\":\"If this address is NOT set, only the podOwner can call `startCheckpoint` and `verifyWithdrawalCredentials`\"},\"setProofSubmitter(address)\":{\"details\":\"Note that EITHER the podOwner OR proofSubmitter can access these methods, so it's fine to set your proofSubmitter to 0 if you want the podOwner to be the only address that can call these methods.\",\"params\":{\"newProofSubmitter\":\"The new proof submitter address. If set to 0, only the pod owner will be able to call `startCheckpoint` and `verifyWithdrawalCredentials`\"}},\"startCheckpoint(bool)\":{\"details\":\"Create a checkpoint used to prove this pod's active validator set. Checkpoints are completed by submitting one checkpoint proof per ACTIVE validator. During the checkpoint process, the total change in ACTIVE validator balance is tracked, and any validators with 0 balance are marked `WITHDRAWN`.Once finalized, the pod owner is awarded shares corresponding to: - the total change in their ACTIVE validator balances - any ETH in the pod not already awarded sharesA checkpoint cannot be created if the pod already has an outstanding checkpoint. If this is the case, the pod owner MUST complete the existing checkpoint before starting a new one.\",\"params\":{\"revertIfNoBalance\":\"Forces a revert if the pod ETH balance is 0. This allows the pod owner to prevent accidentally starting a checkpoint that will not increase their shares\"}},\"verifyCheckpointProofs((bytes32,bytes),(bytes32,bytes32,bytes)[])\":{\"details\":\"Progress the current checkpoint towards completion by submitting one or more validator checkpoint proofs. Anyone can call this method to submit proofs towards the current checkpoint. For each validator proven, the current checkpoint's `proofsRemaining` decreases.If the checkpoint's `proofsRemaining` reaches 0, the checkpoint is finalized. (see `_updateCheckpoint` for more details)This method can only be called when there is a currently-active checkpoint.\",\"params\":{\"balanceContainerProof\":\"proves the beacon's current balance container root against a checkpoint's `beaconBlockRoot`\",\"proofs\":\"Proofs for one or more validator current balances against the `balanceContainerRoot`\"}},\"verifyStaleBalance(uint64,(bytes32,bytes),(bytes32[],bytes))\":{\"details\":\"Prove that one of this pod's active validators was slashed on the beacon chain. A successful staleness proof allows the caller to start a checkpoint.Note that in order to start a checkpoint, any existing checkpoint must already be completed! (See `_startCheckpoint` for details)Note that this method allows anyone to start a checkpoint as soon as a slashing occurs on the beacon chain. This is intended to make it easier to external watchers to keep a pod's balance up to date.Note too that beacon chain slashings are not instant. There is a delay between the initial slashing event and the validator's final exit back to the execution layer. During this time, the validator's balance may or may not drop further due to a correlation penalty. This method allows proof of a slashed validator to initiate a checkpoint for as long as the validator remains on the beacon chain. Once the validator has exited and been checkpointed at 0 balance, they are no longer \\\"checkpoint-able\\\" and cannot be proven \\\"stale\\\" via this method. See https://eth2book.info/capella/part3/transition/epoch/#slashings for more info.Staleness conditions: - Validator's last checkpoint is older than `beaconTimestamp` - Validator MUST be in `ACTIVE` status in the pod - Validator MUST be slashed on the beacon chain\",\"params\":{\"beaconTimestamp\":\"the beacon chain timestamp sent to the 4788 oracle contract. Corresponds to the parent beacon block root against which the proof is verified.\",\"proof\":\"the fields of the beacon chain \\\"Validator\\\" container, along with a merkle proof against the beacon state root. See the consensus specs for more details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\",\"stateRootProof\":\"proves a beacon state root against a beacon block root\"}},\"verifyWithdrawalCredentials(uint64,(bytes32,bytes),uint40[],bytes[],bytes32[][])\":{\"details\":\"Verify one or more validators have their withdrawal credentials pointed at this EigenPod, and award shares based on their effective balance. Proven validators are marked `ACTIVE` within the EigenPod, and future checkpoint proofs will need to include them.Withdrawal credential proofs MUST NOT be older than `currentCheckpointTimestamp`.Validators proven via this method MUST NOT have an exit epoch set already.\",\"params\":{\"beaconTimestamp\":\"the beacon chain timestamp sent to the 4788 oracle contract. Corresponds to the parent beacon block root against which the proof is verified.\",\"stateRootProof\":\"proves a beacon state root against a beacon block root\",\"validatorFields\":\"the fields of the beacon chain \\\"Validator\\\" container. See consensus specs for details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\",\"validatorFieldsProofs\":\"proofs of each validator's `validatorFields` against the beacon state root\",\"validatorIndices\":\"a list of validator indices being proven\"}},\"withdrawRestakedBeaconChainETH(address,uint256)\":{\"details\":\"The podOwner must have already proved sufficient withdrawals, so that this pod's `withdrawableRestakedExecutionLayerGwei` exceeds the `amountWei` input (when converted to GWEI).Reverts if `amountWei` is not a whole Gwei amount\"}},\"title\":\"The implementation contract used for restaking beacon chain ETH on EigenLayer\",\"version\":1},\"userdoc\":{\"events\":{\"CheckpointCreated(uint64,bytes32,uint256)\":{\"notice\":\"Emitted when a checkpoint is created\"},\"CheckpointFinalized(uint64,int256)\":{\"notice\":\"Emitted when a checkpoint is finalized\"},\"EigenPodStaked(bytes)\":{\"notice\":\"Emitted when an ETH validator stakes via this eigenPod\"},\"NonBeaconChainETHReceived(uint256)\":{\"notice\":\"Emitted when ETH is received via the `receive` fallback\"},\"ProofSubmitterUpdated(address,address)\":{\"notice\":\"Emitted when a pod owner updates the proof submitter address\"},\"RestakedBeaconChainETHWithdrawn(address,uint256)\":{\"notice\":\"Emitted when restaked beacon chain ETH is withdrawn from the eigenPod.\"},\"ValidatorBalanceUpdated(uint40,uint64,uint64)\":{\"notice\":\"Emitted when an ETH validator's  balance is proven to be updated.  Here newValidatorBalanceGwei\"},\"ValidatorCheckpointed(uint64,uint40)\":{\"notice\":\"Emitted when a validator is proven for a given checkpoint\"},\"ValidatorRestaked(uint40)\":{\"notice\":\"Emitted when an ETH validator's withdrawal credentials are successfully verified to be pointed to this eigenPod\"},\"ValidatorWithdrawn(uint64,uint40)\":{\"notice\":\"Emitted when a validaor is proven to have 0 balance at a given checkpoint\"}},\"kind\":\"user\",\"methods\":{\"activeValidatorCount()\":{\"notice\":\"Number of validators with proven withdrawal credentials, who do not have proven full withdrawals\"},\"checkpointBalanceExitedGwei(uint64)\":{\"notice\":\"For each checkpoint, the total balance attributed to exited validators, in gwei NOTE that the values added to this mapping are NOT guaranteed to capture the entirety of a validator's exit - rather, they capture the total change in a validator's balance when a checkpoint shows their balance change from nonzero to zero. While a change from nonzero to zero DOES guarantee that a validator has been fully exited, it is possible that the magnitude of this change does not capture what is typically thought of as a \\\"full exit.\\\" For example: 1. Consider a validator was last checkpointed at 32 ETH before exiting. Once the exit has been processed, it is expected that the validator's exited balance is calculated to be `32 ETH`. 2. However, before `startCheckpoint` is called, a deposit is made to the validator for 1 ETH. The beacon chain will automatically withdraw this ETH, but not until the withdrawal sweep passes over the validator again. Until this occurs, the validator's current balance (used for checkpointing) is 1 ETH. 3. If `startCheckpoint` is called at this point, the balance delta calculated for this validator will be `-31 ETH`, and because the validator has a nonzero balance, it is not marked WITHDRAWN. 4. After the exit is processed by the beacon chain, a subsequent `startCheckpoint` and checkpoint proof will calculate a balance delta of `-1 ETH` and attribute a 1 ETH exit to the validator. If this edge case impacts your usecase, it should be possible to mitigate this by monitoring for deposits to your exited validators, and waiting to call `startCheckpoint` until those deposits have been automatically exited. Additional edge cases this mapping does not cover: - If a validator is slashed, their balance exited will reflect their original balance rather than the slashed amount - The final partial withdrawal for an exited validator will be likely be included in this mapping.   i.e. if a validator was last checkpointed at 32.1 ETH before exiting, the next checkpoint will calculate their   \\\"exited\\\" amount to be 32.1 ETH rather than 32 ETH.\"},\"currentCheckpoint()\":{\"notice\":\"Returns the currently-active checkpoint\"},\"currentCheckpointTimestamp()\":{\"notice\":\"The timestamp of the currently-active checkpoint. Will be 0 if there is not active checkpoint\"},\"eigenPodManager()\":{\"notice\":\"The single EigenPodManager for EigenLayer\"},\"getParentBlockRoot(uint64)\":{\"notice\":\"Query the 4788 oracle to get the parent block root of the slot with the given `timestamp`\"},\"initialize(address)\":{\"notice\":\"Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager\"},\"lastCheckpointTimestamp()\":{\"notice\":\"The timestamp of the last checkpoint finalized\"},\"podOwner()\":{\"notice\":\"The owner of this EigenPod\"},\"proofSubmitter()\":{\"notice\":\"An address with permissions to call `startCheckpoint` and `verifyWithdrawalCredentials`, set by the podOwner. This role exists to allow a podOwner to designate a hot wallet that can call these methods, allowing the podOwner to remain a cold wallet that is only used to manage funds.\"},\"recoverTokens(address[],uint256[],address)\":{\"notice\":\"called by owner of a pod to remove any ERC20s deposited in the pod\"},\"setProofSubmitter(address)\":{\"notice\":\"Allows the owner of a pod to update the proof submitter, a permissioned address that can call `startCheckpoint` and `verifyWithdrawalCredentials`.\"},\"stake(bytes,bytes,bytes32)\":{\"notice\":\"Called by EigenPodManager when the owner wants to create another ETH validator.\"},\"validatorPubkeyHashToInfo(bytes32)\":{\"notice\":\"Returns the validatorInfo struct for the provided pubkeyHash\"},\"validatorPubkeyToInfo(bytes)\":{\"notice\":\"Returns the validatorInfo struct for the provided pubkey\"},\"validatorStatus(bytes)\":{\"notice\":\"This returns the status of a given validator pubkey\"},\"validatorStatus(bytes32)\":{\"notice\":\"This returns the status of a given validator\"},\"withdrawRestakedBeaconChainETH(address,uint256)\":{\"notice\":\"Transfers `amountWei` in ether from this contract to the specified `recipient` addressCalled by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain.\"},\"withdrawableRestakedExecutionLayerGwei()\":{\"notice\":\"the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":\"IEigenPod\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"IEigenPodManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BeaconChainETHDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"nonce","type":"uint96"},{"indexed":false,"internalType":"address","name":"delegatedAddress","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32"}],"name":"BeaconChainETHWithdrawalCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":false,"internalType":"int256","name":"newTotalShares","type":"int256"}],"name":"NewTotalShares","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IPauserRegistry","name":"pauserRegistry","type":"address"},{"indexed":false,"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address"}],"name":"PauserRegistrySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"eigenPod","type":"address"},{"indexed":true,"internalType":"address","name":"podOwner","type":"address"}],"name":"PodDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"podOwner","type":"address"},{"indexed":false,"internalType":"int256","name":"sharesDelta","type":"int256"}],"name":"PodSharesUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"addShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"beaconChainETHStrategy","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createPod","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eigenPodBeacon","outputs":[{"internalType":"contract IBeacon","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ethPOS","outputs":[{"internalType":"contract IETHPOSDeposit","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"}],"name":"getPod","outputs":[{"internalType":"contract IEigenPod","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"}],"name":"hasPod","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numPods","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"}],"name":"ownerToPod","outputs":[{"internalType":"contract IEigenPod","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"index","type":"uint8"}],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pauserRegistry","outputs":[{"internalType":"contract IPauserRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"}],"name":"podOwnerShares","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"},{"internalType":"int256","name":"sharesDelta","type":"int256"}],"name":"recordBeaconChainETHBalanceUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address"}],"name":"setPauserRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slasher","outputs":[{"internalType":"contract ISlasher","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"depositDataRoot","type":"bytes32"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"strategyManager","outputs":[{"internalType":"contract IStrategyManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"podOwner","type":"address"},{"internalType":"address","name":"destination","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"withdrawSharesAsTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addShares(address,uint256)":"0e81073c","beaconChainETHStrategy()":"9104c319","createPod()":"84d81062","eigenPodBeacon()":"292b7b2b","ethPOS()":"74cdd798","getPod(address)":"a38406a3","hasPod(address)":"f6848d24","numPods()":"a6a509be","ownerToPod(address)":"9ba06275","pause(uint256)":"136439dd","pauseAll()":"595c6a67","paused()":"5c975abb","paused(uint8)":"5ac86ab7","pauserRegistry()":"886f1195","podOwnerShares(address)":"60f4062b","recordBeaconChainETHBalanceUpdate(address,int256)":"c2c51c40","removeShares(address,uint256)":"beffbb89","setPauserRegistry(address)":"10d67a2f","slasher()":"b1344271","stake(bytes,bytes,bytes32)":"9b4e4634","strategyManager()":"39b70e38","unpause(uint256)":"fabc1cbc","withdrawSharesAsTokens(address,address,uint256)":"387b1300"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BeaconChainETHDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"BeaconChainETHWithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"newTotalShares\",\"type\":\"int256\"}],\"name\":\"NewTotalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eigenPod\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"PodDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"sharesDelta\",\"type\":\"int256\"}],\"name\":\"PodSharesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPod\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodBeacon\",\"outputs\":[{\"internalType\":\"contract IBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPOS\",\"outputs\":[{\"internalType\":\"contract IETHPOSDeposit\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"getPod\",\"outputs\":[{\"internalType\":\"contract IEigenPod\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"hasPod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"ownerToPod\",\"outputs\":[{\"internalType\":\"contract IEigenPod\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"}],\"name\":\"podOwnerShares\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"sharesDelta\",\"type\":\"int256\"}],\"name\":\"recordBeaconChainETHBalanceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"podOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"addShares(address,uint256)\":{\"details\":\"Returns the number of shares added to `podOwnerShares[podOwner]` above zero, which will be less than the `shares` input in the event that the podOwner has an existing shares deficit (i.e. `podOwnerShares[podOwner]` starts below zero)Reverts if `shares` is not a whole Gwei amount\"},\"createPod()\":{\"details\":\"Function will revert if the `msg.sender` already has an EigenPod.Returns EigenPod address\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"podOwnerShares(address)\":{\"details\":\"The share amount can become negative. This is necessary to accommodate the fact that a pod owner's virtual beacon chain ETH shares can decrease between the pod owner queuing and completing a withdrawal. When the pod owner's shares would otherwise increase, this \\\"deficit\\\" is decreased first _instead_. Likewise, when a withdrawal is completed, this \\\"deficit\\\" is decreased and the withdrawal amount is decreased; We can think of this as the withdrawal \\\"paying off the deficit\\\".\"},\"recordBeaconChainETHBalanceUpdate(address,int256)\":{\"details\":\"Callable only by the podOwner's EigenPod contract.Reverts if `sharesDelta` is not a whole Gwei amount\",\"params\":{\"podOwner\":\"is the pod owner whose balance is being updated.\",\"sharesDelta\":\"is the change in podOwner's beaconChainETHStrategy shares\"}},\"removeShares(address,uint256)\":{\"details\":\"This function reverts if it would result in `podOwnerShares[podOwner]` being less than zero, i.e. it is forbidden for this function to result in the `podOwner` incurring a \\\"share deficit\\\". This behavior prevents a Staker from queuing a withdrawal which improperly removes excessive shares from the operator to whom the staker is delegated.Reverts if `shares` is not a whole Gwei amount\"},\"stake(bytes,bytes,bytes32)\":{\"params\":{\"depositDataRoot\":\"The root/hash of the deposit data for the validator's deposit.\",\"pubkey\":\"The 48 bytes public key of the beacon chain validator.\",\"signature\":\"The validator's signature of the deposit data.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"withdrawSharesAsTokens(address,address,uint256)\":{\"details\":\"Prioritizes decreasing the podOwner's share deficit, if they have oneReverts if `shares` is not a whole Gwei amount\"}},\"title\":\"Interface for factory that creates and manages solo staking pods that have their withdrawal credentials pointed to EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"BeaconChainETHDeposited(address,uint256)\":{\"notice\":\"Emitted to notify a deposit of beacon chain ETH recorded in the strategy manager\"},\"BeaconChainETHWithdrawalCompleted(address,uint256,uint96,address,address,bytes32)\":{\"notice\":\"Emitted when a withdrawal of beacon chain ETH is completed\"},\"NewTotalShares(address,int256)\":{\"notice\":\"Emitted every time the total shares of a pod are updated\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"PodDeployed(address,address)\":{\"notice\":\"Emitted to notify the deployment of an EigenPod\"},\"PodSharesUpdated(address,int256)\":{\"notice\":\"Emitted when the balance of an EigenPod is updated\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"addShares(address,uint256)\":{\"notice\":\"Increases the `podOwner`'s shares by `shares`, paying off deficit if possible. Used by the DelegationManager to award a pod owner shares on exiting the withdrawal queue\"},\"beaconChainETHStrategy()\":{\"notice\":\"returns canonical, virtual beaconChainETH strategy\"},\"createPod()\":{\"notice\":\"Creates an EigenPod for the sender.\"},\"eigenPodBeacon()\":{\"notice\":\"Beacon proxy to which the EigenPods point\"},\"ethPOS()\":{\"notice\":\"The ETH2 Deposit Contract\"},\"getPod(address)\":{\"notice\":\"Returns the address of the `podOwner`'s EigenPod (whether it is deployed yet or not).\"},\"hasPod(address)\":{\"notice\":\"Returns 'true' if the `podOwner` has created an EigenPod, and 'false' otherwise.\"},\"numPods()\":{\"notice\":\"Returns the number of EigenPods that have been created\"},\"ownerToPod(address)\":{\"notice\":\"Returns the address of the `podOwner`'s EigenPod if it has been deployed.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"podOwnerShares(address)\":{\"notice\":\"Mapping from Pod owner owner to the number of shares they have in the virtual beacon chain ETH strategy.\"},\"recordBeaconChainETHBalanceUpdate(address,int256)\":{\"notice\":\"Changes the `podOwner`'s shares by `sharesDelta` and performs a call to the DelegationManager to ensure that delegated shares are also tracked correctly\"},\"removeShares(address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a pod owner's shares while they're in the withdrawal queue. Simply decreases the `podOwner`'s shares by `shares`, down to a minimum of zero.\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"slasher()\":{\"notice\":\"EigenLayer's Slasher contract\"},\"stake(bytes,bytes,bytes32)\":{\"notice\":\"Stakes for a new beacon chain validator on the sender's EigenPod. Also creates an EigenPod for the sender if they don't have one already.\"},\"strategyManager()\":{\"notice\":\"EigenLayer's StrategyManager contract\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"withdrawSharesAsTokens(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to complete a withdrawal, sending tokens to some destination address\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":\"IEigenPodManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"IPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IPauserRegistry","name":"pauserRegistry","type":"address"},{"indexed":false,"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address"}],"name":"PauserRegistrySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"index","type":"uint8"}],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pauserRegistry","outputs":[{"internalType":"contract IPauserRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address"}],"name":"setPauserRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"pause(uint256)":"136439dd","pauseAll()":"595c6a67","paused()":"5c975abb","paused(uint8)":"5ac86ab7","pauserRegistry()":"886f1195","setPauserRegistry(address)":"10d67a2f","unpause(uint256)":"fabc1cbc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"details\":\"Pausability is implemented using a uint256, which allows up to 256 different single bit-flags; each bit can potentially pause different functionality. Inspiration for this was taken from the NearBridge design here https://etherscan.io/address/0x3FEFc5A4B1c02f21cBc8D3613643ba0635b9a873#code. For the `pause` and `unpause` functions we've implemented, if you pause, you can only flip (any number of) switches to on/1 (aka \\\"paused\\\"), and if you unpause, you can only flip (any number of) switches to off/0 (aka \\\"paused\\\"). If you want a pauseXYZ function that just flips a single bit / \\\"pausing flag\\\", it will: 1) 'bit-wise and' (aka `&`) a flag with the current paused state (as a uint256) 2) update the paused state to this new valueWe note as well that we have chosen to identify flags by their *bit index* as opposed to their numerical value, so, e.g. defining `DEPOSITS_PAUSED = 3` indicates specifically that if the *third bit* of `_paused` is flipped -- i.e. it is a '1' -- then deposits should be paused\",\"kind\":\"dev\",\"methods\":{\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"Adds pausability to a contract, with pausing & unpausing controlled by the `pauser` and `unpauser` of a PauserRegistry contract.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceContracts that inherit from this contract may define their own `pause` and `unpause` (and/or related) functions. These functions should be permissioned as \\\"onlyPauser\\\" which defers to a `PauserRegistry` for determining access control.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":\"IPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"IPauserRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pauser","type":"address"},{"indexed":false,"internalType":"bool","name":"canPause","type":"bool"}],"name":"PauserStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousUnpauser","type":"address"},{"indexed":false,"internalType":"address","name":"newUnpauser","type":"address"}],"name":"UnpauserChanged","type":"event"},{"inputs":[{"internalType":"address","name":"pauser","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpauser","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isPauser(address)":"46fbf68e","unpauser()":"eab66d7a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canPause\",\"type\":\"bool\"}],\"name\":\"PauserStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousUnpauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newUnpauser\",\"type\":\"address\"}],\"name\":\"UnpauserChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Interface for the `PauserRegistry` contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isPauser(address)\":{\"notice\":\"Mapping of addresses to whether they hold the pauser role.\"},\"unpauser()\":{\"notice\":\"Unique address that holds the unpauser role. Capable of changing *both* the pauser and unpauser addresses.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":\"IPauserRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol":{"IRewardsCoordinator":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"avs","type":"address"},{"indexed":true,"internalType":"uint256","name":"submissionNonce","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"rewardsSubmissionHash","type":"bytes32"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"indexed":false,"internalType":"struct IRewardsCoordinator.RewardsSubmission","name":"rewardsSubmission","type":"tuple"}],"name":"AVSRewardsSubmissionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldActivationDelay","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newActivationDelay","type":"uint32"}],"name":"ActivationDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"earner","type":"address"},{"indexed":true,"internalType":"address","name":"oldClaimer","type":"address"},{"indexed":true,"internalType":"address","name":"claimer","type":"address"}],"name":"ClaimerForSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"oldDefaultOperatorSplitBips","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"newDefaultOperatorSplitBips","type":"uint16"}],"name":"DefaultOperatorSplitBipsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"rootIndex","type":"uint32"}],"name":"DistributionRootDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"rootIndex","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"root","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"rewardsCalculationEndTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"activatedAt","type":"uint32"}],"name":"DistributionRootSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"avs","type":"address"},{"indexed":false,"internalType":"uint32","name":"activatedAt","type":"uint32"},{"indexed":false,"internalType":"uint16","name":"oldOperatorAVSSplitBips","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"newOperatorAVSSplitBips","type":"uint16"}],"name":"OperatorAVSSplitBipsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"avs","type":"address"},{"indexed":true,"internalType":"bytes32","name":"operatorDirectedRewardsSubmissionHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"submissionNonce","type":"uint256"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IRewardsCoordinator.OperatorReward[]","name":"operatorRewards","type":"tuple[]"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"},{"internalType":"string","name":"description","type":"string"}],"indexed":false,"internalType":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission","name":"operatorDirectedRewardsSubmission","type":"tuple"}],"name":"OperatorDirectedAVSRewardsSubmissionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint32","name":"activatedAt","type":"uint32"},{"indexed":false,"internalType":"uint16","name":"oldOperatorPISplitBips","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"newOperatorPISplitBips","type":"uint16"}],"name":"OperatorPISplitBipsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"root","type":"bytes32"},{"indexed":true,"internalType":"address","name":"earner","type":"address"},{"indexed":true,"internalType":"address","name":"claimer","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"claimedAmount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"rewardsForAllSubmitter","type":"address"},{"indexed":true,"internalType":"bool","name":"oldValue","type":"bool"},{"indexed":true,"internalType":"bool","name":"newValue","type":"bool"}],"name":"RewardsForAllSubmitterSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"submitter","type":"address"},{"indexed":true,"internalType":"uint256","name":"submissionNonce","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"rewardsSubmissionHash","type":"bytes32"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"indexed":false,"internalType":"struct IRewardsCoordinator.RewardsSubmission","name":"rewardsSubmission","type":"tuple"}],"name":"RewardsSubmissionForAllCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenHopper","type":"address"},{"indexed":true,"internalType":"uint256","name":"submissionNonce","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"rewardsSubmissionHash","type":"bytes32"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"indexed":false,"internalType":"struct IRewardsCoordinator.RewardsSubmission","name":"rewardsSubmission","type":"tuple"}],"name":"RewardsSubmissionForAllEarnersCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRewardsUpdater","type":"address"},{"indexed":true,"internalType":"address","name":"newRewardsUpdater","type":"address"}],"name":"RewardsUpdaterSet","type":"event"},{"inputs":[],"name":"CALCULATION_INTERVAL_SECONDS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GENESIS_REWARDS_TIMESTAMP","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FUTURE_LENGTH","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_RETROACTIVE_LENGTH","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_REWARDS_DURATION","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activationDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}],"internalType":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf","name":"leaf","type":"tuple"}],"name":"calculateEarnerLeafHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}],"internalType":"struct IRewardsCoordinator.TokenTreeMerkleLeaf","name":"leaf","type":"tuple"}],"name":"calculateTokenLeafHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"rootIndex","type":"uint32"},{"internalType":"uint32","name":"earnerIndex","type":"uint32"},{"internalType":"bytes","name":"earnerTreeProof","type":"bytes"},{"components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}],"internalType":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf","name":"earnerLeaf","type":"tuple"},{"internalType":"uint32[]","name":"tokenIndices","type":"uint32[]"},{"internalType":"bytes[]","name":"tokenTreeProofs","type":"bytes[]"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}],"internalType":"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]","name":"tokenLeaves","type":"tuple[]"}],"internalType":"struct IRewardsCoordinator.RewardsMerkleClaim","name":"claim","type":"tuple"}],"name":"checkClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"earner","type":"address"}],"name":"claimerFor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"internalType":"struct IRewardsCoordinator.RewardsSubmission[]","name":"rewardsSubmissions","type":"tuple[]"}],"name":"createAVSRewardsSubmission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"avs","type":"address"},{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IRewardsCoordinator.OperatorReward[]","name":"operatorRewards","type":"tuple[]"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]","name":"operatorDirectedRewardsSubmissions","type":"tuple[]"}],"name":"createOperatorDirectedAVSRewardsSubmission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"internalType":"struct IRewardsCoordinator.RewardsSubmission[]","name":"rewardsSubmissions","type":"tuple[]"}],"name":"createRewardsForAllEarners","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}],"internalType":"struct IRewardsCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"internalType":"struct IRewardsCoordinator.RewardsSubmission[]","name":"rewardsSubmission","type":"tuple[]"}],"name":"createRewardsForAllSubmission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"cumulativeClaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currRewardsCalculationEndTimestamp","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultOperatorSplitBips","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"rootIndex","type":"uint32"}],"name":"disableRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentClaimableDistributionRoot","outputs":[{"components":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint32","name":"rewardsCalculationEndTimestamp","type":"uint32"},{"internalType":"uint32","name":"activatedAt","type":"uint32"},{"internalType":"bool","name":"disabled","type":"bool"}],"internalType":"struct IRewardsCoordinator.DistributionRoot","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentDistributionRoot","outputs":[{"components":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint32","name":"rewardsCalculationEndTimestamp","type":"uint32"},{"internalType":"uint32","name":"activatedAt","type":"uint32"},{"internalType":"bool","name":"disabled","type":"bool"}],"internalType":"struct IRewardsCoordinator.DistributionRoot","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDistributionRootAtIndex","outputs":[{"components":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint32","name":"rewardsCalculationEndTimestamp","type":"uint32"},{"internalType":"uint32","name":"activatedAt","type":"uint32"},{"internalType":"bool","name":"disabled","type":"bool"}],"internalType":"struct IRewardsCoordinator.DistributionRoot","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDistributionRootsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"}],"name":"getOperatorAVSSplit","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"getOperatorPISplit","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"rootHash","type":"bytes32"}],"name":"getRootIndexFromHash","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"rootIndex","type":"uint32"},{"internalType":"uint32","name":"earnerIndex","type":"uint32"},{"internalType":"bytes","name":"earnerTreeProof","type":"bytes"},{"components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}],"internalType":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf","name":"earnerLeaf","type":"tuple"},{"internalType":"uint32[]","name":"tokenIndices","type":"uint32[]"},{"internalType":"bytes[]","name":"tokenTreeProofs","type":"bytes[]"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}],"internalType":"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]","name":"tokenLeaves","type":"tuple[]"}],"internalType":"struct IRewardsCoordinator.RewardsMerkleClaim","name":"claim","type":"tuple"},{"internalType":"address","name":"recipient","type":"address"}],"name":"processClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"rootIndex","type":"uint32"},{"internalType":"uint32","name":"earnerIndex","type":"uint32"},{"internalType":"bytes","name":"earnerTreeProof","type":"bytes"},{"components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}],"internalType":"struct IRewardsCoordinator.EarnerTreeMerkleLeaf","name":"earnerLeaf","type":"tuple"},{"internalType":"uint32[]","name":"tokenIndices","type":"uint32[]"},{"internalType":"bytes[]","name":"tokenTreeProofs","type":"bytes[]"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}],"internalType":"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]","name":"tokenLeaves","type":"tuple[]"}],"internalType":"struct IRewardsCoordinator.RewardsMerkleClaim[]","name":"claims","type":"tuple[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"processClaims","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardsUpdater","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_activationDelay","type":"uint32"}],"name":"setActivationDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"name":"setClaimerFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"split","type":"uint16"}],"name":"setDefaultOperatorSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint16","name":"split","type":"uint16"}],"name":"setOperatorAVSSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint16","name":"split","type":"uint16"}],"name":"setOperatorPISplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_submitter","type":"address"},{"internalType":"bool","name":"_newValue","type":"bool"}],"name":"setRewardsForAllSubmitter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardsUpdater","type":"address"}],"name":"setRewardsUpdater","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint32","name":"rewardsCalculationEndTimestamp","type":"uint32"}],"name":"submitRoot","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CALCULATION_INTERVAL_SECONDS()":"9d45c281","GENESIS_REWARDS_TIMESTAMP()":"131433b4","MAX_FUTURE_LENGTH()":"04a0c502","MAX_RETROACTIVE_LENGTH()":"37838ed0","MAX_REWARDS_DURATION()":"bf21a8aa","activationDelay()":"3a8c0786","calculateEarnerLeafHash((address,bytes32))":"149bc872","calculateTokenLeafHash((address,uint256))":"f8cd8448","checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))":"5e9d8348","claimerFor(address)":"2b9f64a4","createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])":"fce36c7d","createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":"9cb9a5fa","createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])":"ff9f6cce","createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])":"36af41fa","cumulativeClaimed(address,address)":"865c6953","currRewardsCalculationEndTimestamp()":"4d18cc35","defaultOperatorSplitBips()":"63f6a798","disableRoot(uint32)":"f96abf2e","domainSeparator()":"f698da25","getCurrentClaimableDistributionRoot()":"0e9a53cf","getCurrentDistributionRoot()":"9be3d4e4","getDistributionRootAtIndex(uint256)":"de02e503","getDistributionRootsLength()":"7b8f8b05","getOperatorAVSSplit(address,address)":"e063f81f","getOperatorPISplit(address)":"4b943960","getRootIndexFromHash(bytes32)":"e810ce21","processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)":"3ccc861d","processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)":"4596021c","rewardsUpdater()":"fbf1e2c1","setActivationDelay(uint32)":"58baaa3e","setClaimerFor(address)":"a0169ddd","setDefaultOperatorSplit(uint16)":"a50a1d9c","setOperatorAVSSplit(address,address,uint16)":"dcbb03b3","setOperatorPISplit(address,uint16)":"b3dbb0e0","setRewardsForAllSubmitter(address,bool)":"0eb38345","setRewardsUpdater(address)":"863cb9a9","submitRoot(bytes32,uint32)":"3efe1db6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinator.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"AVSRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldActivationDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newActivationDelay\",\"type\":\"uint32\"}],\"name\":\"ActivationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldClaimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerForSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldDefaultOperatorSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultOperatorSplitBips\",\"type\":\"uint16\"}],\"name\":\"DefaultOperatorSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"}],\"name\":\"DistributionRootDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"}],\"name\":\"DistributionRootSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorAVSSplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorAVSSplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorAVSSplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorDirectedRewardsSubmissionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission\",\"name\":\"operatorDirectedRewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"OperatorDirectedAVSRewardsSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldOperatorPISplitBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newOperatorPISplitBips\",\"type\":\"uint16\"}],\"name\":\"OperatorPISplitBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardsForAllSubmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"RewardsForAllSubmitterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinator.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"RewardsSubmissionForAllCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHopper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardsSubmissionHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IRewardsCoordinator.RewardsSubmission\",\"name\":\"rewardsSubmission\",\"type\":\"tuple\"}],\"name\":\"RewardsSubmissionForAllEarnersCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRewardsUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRewardsUpdater\",\"type\":\"address\"}],\"name\":\"RewardsUpdaterSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALCULATION_INTERVAL_SECONDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENESIS_REWARDS_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUTURE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RETROACTIVE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REWARDS_DURATION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateEarnerLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.TokenTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateTokenLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinator.RewardsMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"checkClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"}],\"name\":\"claimerFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinator.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]\",\"name\":\"operatorDirectedRewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorDirectedAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinator.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createRewardsForAllEarners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinator.RewardsSubmission[]\",\"name\":\"rewardsSubmission\",\"type\":\"tuple[]\"}],\"name\":\"createRewardsForAllSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"cumulativeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currRewardsCalculationEndTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperatorSplitBips\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"}],\"name\":\"disableRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentClaimableDistributionRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinator.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDistributionRoot\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinator.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDistributionRootAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"internalType\":\"struct IRewardsCoordinator.DistributionRoot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionRootsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorAVSSplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorPISplit\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"name\":\"getRootIndexFromHash\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinator.RewardsMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IRewardsCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IRewardsCoordinator.RewardsMerkleClaim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"processClaims\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsUpdater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"}],\"name\":\"setActivationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setDefaultOperatorSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorAVSSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"split\",\"type\":\"uint16\"}],\"name\":\"setOperatorPISplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRewardsForAllSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsUpdater\",\"type\":\"address\"}],\"name\":\"setRewardsUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"rewardsCalculationEndTimestamp\",\"type\":\"uint32\"}],\"name\":\"submitRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"OperatorAVSSplitBipsSet(address,address,address,uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"avs\":\"The avs for which the split is being set by the operator.\",\"caller\":\"The address calling `setOperatorAVSSplit`.\",\"newOperatorAVSSplitBips\":\"The new split for the operator for the AVS.\",\"oldOperatorAVSSplitBips\":\"The old split for the operator for the AVS.\",\"operator\":\"The operator on behalf of which the split is being set.\"}},\"OperatorDirectedAVSRewardsSubmissionCreated(address,address,bytes32,uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"params\":{\"avs\":\"The avs on behalf of which the operator-directed rewards are being submitted.\",\"caller\":\"The address calling `createOperatorDirectedAVSRewardsSubmission`.\",\"operatorDirectedRewardsSubmission\":\"The Operator-Directed Rewards Submission. Contains the token, start timestamp, duration, operator rewards, description and, strategy and multipliers.\",\"operatorDirectedRewardsSubmissionHash\":\"Keccak256 hash of (`avs`, `submissionNonce` and `operatorDirectedRewardsSubmission`).\",\"submissionNonce\":\"Current nonce of the avs. Used to generate a unique submission hash.\"}},\"OperatorPISplitBipsSet(address,address,uint32,uint16,uint16)\":{\"params\":{\"activatedAt\":\"The timestamp at which the split will be activated.\",\"caller\":\"The address calling `setOperatorPISplit`.\",\"newOperatorPISplitBips\":\"The new split for the operator for Programmatic Incentives.\",\"oldOperatorPISplitBips\":\"The old split for the operator for Programmatic Incentives.\",\"operator\":\"The operator on behalf of which the split is being set.\"}}},\"kind\":\"dev\",\"methods\":{\"CALCULATION_INTERVAL_SECONDS()\":{\"details\":\"Rewards Submission durations must be multiples of this interval.\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths\",\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the submission is being madeThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractThe `RewardsCoordinator` contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.\",\"params\":{\"avs\":\"The AVS on behalf of which the reward is being submitted\",\"operatorDirectedRewardsSubmissions\":\"The operator-directed rewards submissions being created\"}},\"createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"params\":{\"rewardsSubmission\":\"The rewards submission being created\"}},\"disableRoot(uint32)\":{\"params\":{\"rootIndex\":\"The index of the root to be disabled\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.\",\"params\":{\"claim\":\"The RewardsMerkleClaim to be processed. Contains the root index, earner, token leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 rewards\"}},\"processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the rewards.This function may fail to execute with a large number of claims due to gas limits. Use a smaller array of claims if necessary.\",\"params\":{\"claims\":\"The RewardsMerkleClaims to be processed. Contains the root index, earner, token leaves, and required proofs\",\"recipient\":\"The address recipient that receives the ERC20 rewards\"}},\"setActivationDelay(uint32)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_activationDelay\":\"The new value for activationDelay\"}},\"setClaimerFor(address)\":{\"details\":\"Only callable by the `earner`\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\"}},\"setDefaultOperatorSplit(uint16)\":{\"details\":\"Only callable by the contract owner.\",\"params\":{\"split\":\"The default split for all operators across all avss in bips.\"}},\"setOperatorAVSSplit(address,address,uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"avs\":\"The avs for which the split is being set by the operator\",\"operator\":\"The operator who is setting the split\",\"split\":\"The split for the operator for the specific avs in bips.\"}},\"setOperatorPISplit(address,uint16)\":{\"details\":\"Only callable by the operatorSplit has to be between 0 and 10000 bips (inclusive)The split will be activated after the activation delay\",\"params\":{\"operator\":\"The operator on behalf of which the split is being set.\",\"split\":\"The split for the operator for Programmatic Incentives in bips.\"}},\"setRewardsForAllSubmitter(address,bool)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_newValue\":\"The new value for isRewardsForAllSubmitter\",\"_submitter\":\"The address of the rewardsForAllSubmitter\"}},\"setRewardsUpdater(address)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_rewardsUpdater\":\"The address of the new rewardsUpdater\"}},\"submitRoot(bytes32,uint32)\":{\"details\":\"Only callable by the rewardsUpdater\",\"params\":{\"rewardsCalculationEndTimestamp\":\"The timestamp until which rewards have been calculated\",\"root\":\"The merkle root of the distribution\"}}},\"title\":\"Interface for the `IRewardsCoordinator` contract.\",\"version\":1},\"userdoc\":{\"events\":{\"AVSRewardsSubmissionCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when an AVS creates a valid RewardsSubmission\"},\"DistributionRootSubmitted(uint32,bytes32,uint32,uint32)\":{\"notice\":\"rootIndex is the specific array index of the newly created root in the storage array\"},\"OperatorAVSSplitBipsSet(address,address,address,uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for an AVS is set.\"},\"OperatorDirectedAVSRewardsSubmissionCreated(address,address,bytes32,uint256,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string))\":{\"notice\":\"Emitted when an AVS creates a valid `OperatorDirectedRewardsSubmission`\"},\"OperatorPISplitBipsSet(address,address,uint32,uint16,uint16)\":{\"notice\":\"Emitted when the operator split for Programmatic Incentives is set.\"},\"RewardsClaimed(bytes32,address,address,address,address,uint256)\":{\"notice\":\"root is one of the submitted distribution roots that was claimed against\"},\"RewardsSubmissionForAllCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RewardsSubmission is created for all stakers by a valid submitter\"},\"RewardsSubmissionForAllEarnersCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RewardsSubmission is created when rewardAllStakersAndOperators is called\"},\"RewardsUpdaterSet(address,address)\":{\"notice\":\"rewardsUpdater is responsible for submiting DistributionRoots, only owner can set rewardsUpdater\"}},\"kind\":\"user\",\"methods\":{\"CALCULATION_INTERVAL_SECONDS()\":{\"notice\":\"The interval in seconds at which the calculation for a RewardsSubmission distribution is done.\"},\"GENESIS_REWARDS_TIMESTAMP()\":{\"notice\":\"absolute min timestamp (seconds) that a submission can start at\"},\"MAX_FUTURE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a submission can start in the future\"},\"MAX_RETROACTIVE_LENGTH()\":{\"notice\":\"max amount of time (seconds) that a submission can start in the past\"},\"MAX_REWARDS_DURATION()\":{\"notice\":\"The maximum amount of time (seconds) that a RewardsSubmission can span over\"},\"activationDelay()\":{\"notice\":\"Delay in timestamp (seconds) before a posted root can be claimed against\"},\"calculateEarnerLeafHash((address,bytes32))\":{\"notice\":\"return the hash of the earner's leaf\"},\"calculateTokenLeafHash((address,uint256))\":{\"notice\":\"returns the hash of the earner's token leaf\"},\"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"notice\":\"returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid\"},\"claimerFor(address)\":{\"notice\":\"Mapping: earner => the address of the entity who can call `processClaim` on behalf of the earner\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`\"},\"createOperatorDirectedAVSRewardsSubmission(address,((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Creates a new operator-directed rewards submission on behalf of an AVS, to be split amongst the operators and set of stakers delegated to operators who are registered to the `avs`.\"},\"createRewardsForAllEarners(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission for all earners across all AVSs. Earners in this case indicating all operators and their delegated stakers. Undelegated stake is not rewarded from this RewardsSubmission. This interface is only callable by the token hopper contract from the Eigen Foundation\"},\"createRewardsForAllSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"similar to `createAVSRewardsSubmission` except the rewards are split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isRewardsForAllSubmitter mapping.\"},\"cumulativeClaimed(address,address)\":{\"notice\":\"Mapping: claimer => token => total amount claimed\"},\"currRewardsCalculationEndTimestamp()\":{\"notice\":\"The timestamp until which RewardsSubmissions have been calculated\"},\"defaultOperatorSplitBips()\":{\"notice\":\"the defautl split for all operators across all avss\"},\"disableRoot(uint32)\":{\"notice\":\"allow the rewardsUpdater to disable/cancel a pending root submission in case of an error\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"getCurrentClaimableDistributionRoot()\":{\"notice\":\"loop through the distribution roots from reverse and get latest root that is not disabled and activated i.e. a root that can be claimed against\"},\"getCurrentDistributionRoot()\":{\"notice\":\"returns the current distributionRoot\"},\"getDistributionRootAtIndex(uint256)\":{\"notice\":\"returns the distributionRoot at the specified index\"},\"getDistributionRootsLength()\":{\"notice\":\"returns the number of distribution roots posted\"},\"getOperatorAVSSplit(address,address)\":{\"notice\":\"the split for a specific `operator` for a specific `avs`\"},\"getOperatorPISplit(address)\":{\"notice\":\"the split for a specific `operator` for Programmatic Incentives\"},\"getRootIndexFromHash(bytes32)\":{\"notice\":\"loop through distribution roots from reverse and return index from hash\"},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]),address)\":{\"notice\":\"Claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"processClaims((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[])[],address)\":{\"notice\":\"Batch claim rewards against a given root (read from _distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to recipient address.\"},\"rewardsUpdater()\":{\"notice\":\"The address of the entity that can update the contract with new merkle roots\"},\"setActivationDelay(uint32)\":{\"notice\":\"Sets the delay in timestamp before a posted root can be claimed against\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the address of the entity that can call `processClaim` on behalf of the earner (msg.sender)\"},\"setDefaultOperatorSplit(uint16)\":{\"notice\":\"Sets the default split for all operators across all avss.\"},\"setOperatorAVSSplit(address,address,uint16)\":{\"notice\":\"Sets the split for a specific operator for a specific avs\"},\"setOperatorPISplit(address,uint16)\":{\"notice\":\"Sets the split for a specific operator for Programmatic Incentives.\"},\"setRewardsForAllSubmitter(address,bool)\":{\"notice\":\"Sets the permissioned `rewardsForAllSubmitter` address which can submit createRewardsForAllSubmission\"},\"setRewardsUpdater(address)\":{\"notice\":\"Sets the permissioned `rewardsUpdater` address which can post new roots\"},\"submitRoot(bytes32,uint32)\":{\"notice\":\"Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceAllows AVSs to make \\\"Rewards Submissions\\\", which get distributed amongst the AVSs' confirmed Operators and the Stakers delegated to those Operators. Calculations are performed based on the completed RewardsSubmission, with the results posted in a Merkle root against which Stakers & Operators can make claims.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":\"IRewardsCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x674155654ffe5f7aeef5b7f626a6ffc3d023adcae345daca0741fa4e46760c30\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://024e5ec529ae5d740ed9175cb582df0b77a692547d2d15fa57af737ca7a18241\",\"dweb:/ipfs/QmatLxGSiugq27rxqy66hF185uN8dVSoku9qo5r9iL9YKR\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"ISignatureUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"The interface for common signature utilities.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":\"ISignatureUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"ISlasher":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previouslySlashedAddress","type":"address"}],"name":"FrozenStatusReset","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"stalestUpdateBlock","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"latestServeUntilBlock","type":"uint32"}],"name":"MiddlewareTimesAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"slashedOperator","type":"address"},{"indexed":true,"internalType":"address","name":"slashingContract","type":"address"}],"name":"OperatorFrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"}],"name":"OptedIntoSlashing","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint32","name":"contractCanSlashOperatorUntilBlock","type":"uint32"}],"name":"SlashingAbilityRevoked","type":"event"},{"inputs":[{"internalType":"address","name":"toBeSlashed","type":"address"},{"internalType":"address","name":"slashingContract","type":"address"}],"name":"canSlash","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"withdrawalStartBlock","type":"uint32"},{"internalType":"uint256","name":"middlewareTimesIndex","type":"uint256"}],"name":"canWithdraw","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"serviceContract","type":"address"}],"name":"contractCanSlashOperatorUntilBlock","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"toBeFrozen","type":"address"}],"name":"freezeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"updateBlock","type":"uint32"}],"name":"getCorrectValueForInsertAfter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"index","type":"uint32"}],"name":"getMiddlewareTimesIndexServeUntilBlock","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"index","type":"uint32"}],"name":"getMiddlewareTimesIndexStalestUpdateBlock","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"isFrozen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"serviceContract","type":"address"}],"name":"latestUpdateBlock","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"middlewareTimesLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"arrayIndex","type":"uint256"}],"name":"operatorToMiddlewareTimes","outputs":[{"components":[{"internalType":"uint32","name":"stalestUpdateBlock","type":"uint32"},{"internalType":"uint32","name":"latestServeUntilBlock","type":"uint32"}],"internalType":"struct ISlasher.MiddlewareTimes","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"node","type":"address"}],"name":"operatorWhitelistedContractsLinkedListEntry","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"operatorWhitelistedContractsLinkedListSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"name":"optIntoSlashing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"serveUntilBlock","type":"uint32"}],"name":"recordFirstStakeUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"serveUntilBlock","type":"uint32"}],"name":"recordLastStakeUpdateAndRevokeSlashingAbility","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32","name":"updateBlock","type":"uint32"},{"internalType":"uint32","name":"serveUntilBlock","type":"uint32"},{"internalType":"uint256","name":"insertAfter","type":"uint256"}],"name":"recordStakeUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"frozenAddresses","type":"address[]"}],"name":"resetFrozenStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"strategyManager","outputs":[{"internalType":"contract IStrategyManager","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canSlash(address,address)":"d98128c0","canWithdraw(address,uint32,uint256)":"8105e043","contractCanSlashOperatorUntilBlock(address,address)":"6f0c2f74","delegation()":"df5cf723","freezeOperator(address)":"38c8ee64","getCorrectValueForInsertAfter(address,uint32)":"723e59c7","getMiddlewareTimesIndexServeUntilBlock(address,uint32)":"7259a45c","getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)":"1874e5ae","isFrozen(address)":"e5839836","latestUpdateBlock(address,address)":"da16e29b","middlewareTimesLength(address)":"a49db732","operatorToMiddlewareTimes(address,uint256)":"282670fc","operatorWhitelistedContractsLinkedListEntry(address,address)":"855fcc4a","operatorWhitelistedContractsLinkedListSize(address)":"e921d4fa","optIntoSlashing(address)":"f73b7519","recordFirstStakeUpdate(address,uint32)":"175d3205","recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)":"0ffabbce","recordStakeUpdate(address,uint32,uint32,uint256)":"c747075b","resetFrozenStatus(address[])":"7cf72bba","strategyManager()":"39b70e38"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previouslySlashedAddress\",\"type\":\"address\"}],\"name\":\"FrozenStatusReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stalestUpdateBlock\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"latestServeUntilBlock\",\"type\":\"uint32\"}],\"name\":\"MiddlewareTimesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"slashedOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"slashingContract\",\"type\":\"address\"}],\"name\":\"OperatorFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"OptedIntoSlashing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"contractCanSlashOperatorUntilBlock\",\"type\":\"uint32\"}],\"name\":\"SlashingAbilityRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBeSlashed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"slashingContract\",\"type\":\"address\"}],\"name\":\"canSlash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceContract\",\"type\":\"address\"}],\"name\":\"contractCanSlashOperatorUntilBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBeFrozen\",\"type\":\"address\"}],\"name\":\"freezeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"updateBlock\",\"type\":\"uint32\"}],\"name\":\"getCorrectValueForInsertAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getMiddlewareTimesIndexServeUntilBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getMiddlewareTimesIndexStalestUpdateBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceContract\",\"type\":\"address\"}],\"name\":\"latestUpdateBlock\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"middlewareTimesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"arrayIndex\",\"type\":\"uint256\"}],\"name\":\"operatorToMiddlewareTimes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"stalestUpdateBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"latestServeUntilBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct ISlasher.MiddlewareTimes\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"operatorWhitelistedContractsLinkedListEntry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorWhitelistedContractsLinkedListSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"optIntoSlashing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"serveUntilBlock\",\"type\":\"uint32\"}],\"name\":\"recordFirstStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"serveUntilBlock\",\"type\":\"uint32\"}],\"name\":\"recordLastStakeUpdateAndRevokeSlashingAbility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"updateBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"serveUntilBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"insertAfter\",\"type\":\"uint256\"}],\"name\":\"recordStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"frozenAddresses\",\"type\":\"address[]\"}],\"name\":\"resetFrozenStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"OperatorFrozen(address,address)\":{\"details\":\"The `slashingContract` must have permission to slash the `slashedOperator`, i.e. `canSlash(slasherOperator, slashingContract)` must return 'true'.\"}},\"kind\":\"dev\",\"methods\":{\"canWithdraw(address,uint32,uint256)\":{\"details\":\"The correct `middlewareTimesIndex` input should be computable off-chain.\",\"params\":{\"middlewareTimesIndex\":\"Indicates an index in `operatorToMiddlewareTimes[operator]` to consult as proof of the `operator`'s ability to withdraw\",\"operator\":\"Either the operator who queued the withdrawal themselves, or if the withdrawing party is a staker who delegated to an operator, this address is the operator *who the staker was delegated to* at the time of the `withdrawalStartBlock`.\",\"withdrawalStartBlock\":\"The block number at which the withdrawal was initiated.\"}},\"freezeOperator(address)\":{\"details\":\"Technically the operator is 'frozen' (hence the name of this function), and then subject to slashing pending a decision by a human-in-the-loop.The operator must have previously given the caller (which should be a contract) the ability to slash them, through a call to `optIntoSlashing`.\",\"params\":{\"toBeFrozen\":\"The operator to be frozen.\"}},\"isFrozen(address)\":{\"params\":{\"staker\":\"The staker of interest.\"},\"returns\":{\"_0\":\"Returns 'true' if `staker` themselves has their status set to frozen, OR if the staker is delegated to an operator who has their status set to frozen. Otherwise returns 'false'.\"}},\"optIntoSlashing(address)\":{\"details\":\"Typically, this function must be called prior to registering for a middleware.\"},\"recordFirstStakeUpdate(address,uint32)\":{\"details\":\"adds the middleware's slashing contract to the operator's linked list\",\"params\":{\"operator\":\"the operator whose stake update is being recorded\",\"serveUntilBlock\":\"the block until which the operator's stake at the current block is slashable\"}},\"recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)\":{\"details\":\"removes the middleware's slashing contract to the operator's linked list and revokes the middleware's (i.e. caller's) ability to slash `operator` once `serveUntil` is reached\",\"params\":{\"operator\":\"the operator whose stake update is being recorded\",\"serveUntilBlock\":\"the block until which the operator's stake at the current block is slashable\"}},\"recordStakeUpdate(address,uint32,uint32,uint256)\":{\"details\":\"insertAfter should be calculated offchain before making the transaction that calls this. this is subject to race conditions,      but it is anticipated to be rare and not detrimental.\",\"params\":{\"insertAfter\":\"the element of the operators linked list that the currently updating middleware should be inserted after\",\"operator\":\"the operator whose stake update is being recorded\",\"serveUntilBlock\":\"the block until which the operator's stake at updateBlock is slashable\",\"updateBlock\":\"the block for which the stake update is being recorded\"}},\"resetFrozenStatus(address[])\":{\"details\":\"Callable only by the contract owner (i.e. governance).\"}},\"title\":\"Interface for the primary 'slashing' contract for EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"FrozenStatusReset(address)\":{\"notice\":\"Emitted when `previouslySlashedAddress` is 'unfrozen', allowing them to again move deposited funds within EigenLayer.\"},\"MiddlewareTimesAdded(address,uint256,uint32,uint32)\":{\"notice\":\"Emitted when a middleware times is added to `operator`'s array.\"},\"OperatorFrozen(address,address)\":{\"notice\":\"Emitted when `slashingContract` 'freezes' the `slashedOperator`.\"},\"OptedIntoSlashing(address,address)\":{\"notice\":\"Emitted when `operator` begins to allow `contractAddress` to slash them.\"},\"SlashingAbilityRevoked(address,address,uint32)\":{\"notice\":\"Emitted when `contractAddress` signals that it will no longer be able to slash `operator` after the `contractCanSlashOperatorUntilBlock`.\"}},\"kind\":\"user\",\"methods\":{\"canSlash(address,address)\":{\"notice\":\"Returns true if `slashingContract` is currently allowed to slash `toBeSlashed`.\"},\"canWithdraw(address,uint32,uint256)\":{\"notice\":\"Returns 'true' if `operator` can currently complete a withdrawal started at the `withdrawalStartBlock`, with `middlewareTimesIndex` used to specify the index of a `MiddlewareTimes` struct in the operator's list (i.e. an index in `operatorToMiddlewareTimes[operator]`). The specified struct is consulted as proof of the `operator`'s ability (or lack thereof) to complete the withdrawal. This function will return 'false' if the operator cannot currently complete a withdrawal started at the `withdrawalStartBlock`, *or* in the event that an incorrect `middlewareTimesIndex` is supplied, even if one or more correct inputs exist.\"},\"contractCanSlashOperatorUntilBlock(address,address)\":{\"notice\":\"Returns the block until which `serviceContract` is allowed to slash the `operator`.\"},\"delegation()\":{\"notice\":\"The DelegationManager contract of EigenLayer\"},\"freezeOperator(address)\":{\"notice\":\"Used for 'slashing' a certain operator.\"},\"getCorrectValueForInsertAfter(address,uint32)\":{\"notice\":\"A search routine for finding the correct input value of `insertAfter` to `recordStakeUpdate` / `_updateMiddlewareList`.\"},\"getMiddlewareTimesIndexServeUntilBlock(address,uint32)\":{\"notice\":\"Getter function for fetching `operatorToMiddlewareTimes[operator][index].latestServeUntil`.\"},\"getMiddlewareTimesIndexStalestUpdateBlock(address,uint32)\":{\"notice\":\"Getter function for fetching `operatorToMiddlewareTimes[operator][index].stalestUpdateBlock`.\"},\"isFrozen(address)\":{\"notice\":\"Used to determine whether `staker` is actively 'frozen'. If a staker is frozen, then they are potentially subject to slashing of their funds, and cannot cannot deposit or withdraw from the strategyManager until the slashing process is completed and the staker's status is reset (to 'unfrozen').\"},\"latestUpdateBlock(address,address)\":{\"notice\":\"Returns the block at which the `serviceContract` last updated its view of the `operator`'s stake\"},\"middlewareTimesLength(address)\":{\"notice\":\"Getter function for fetching `operatorToMiddlewareTimes[operator].length`\"},\"operatorToMiddlewareTimes(address,uint256)\":{\"notice\":\"operator =>  [      (          the least recent update block of all of the middlewares it's serving/served,          latest time that the stake bonded at that update needed to serve until      )  ]\"},\"operatorWhitelistedContractsLinkedListEntry(address,address)\":{\"notice\":\"Getter function for fetching a single node in the operator's linked list (`_operatorToWhitelistedContractsByUpdate[operator]`).\"},\"operatorWhitelistedContractsLinkedListSize(address)\":{\"notice\":\"Getter function for fetching `_operatorToWhitelistedContractsByUpdate[operator].size`.\"},\"optIntoSlashing(address)\":{\"notice\":\"Gives the `contractAddress` permission to slash the funds of the caller.\"},\"recordFirstStakeUpdate(address,uint32)\":{\"notice\":\"this function is a called by middlewares during an operator's registration to make sure the operator's stake at registration         is slashable until serveUntil\"},\"recordLastStakeUpdateAndRevokeSlashingAbility(address,uint32)\":{\"notice\":\"this function is a called by middlewares during an operator's deregistration to make sure the operator's stake at deregistration         is slashable until serveUntil\"},\"recordStakeUpdate(address,uint32,uint32,uint256)\":{\"notice\":\"this function is a called by middlewares during a stake update for an operator (perhaps to free pending withdrawals)         to make sure the operator's stake at updateBlock is slashable until serveUntil\"},\"resetFrozenStatus(address[])\":{\"notice\":\"Removes the 'frozen' status from each of the `frozenAddresses`\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract of EigenLayer\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceSee the `Slasher` contract itself for implementation details.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":\"ISlasher\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"IStrategy":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"}],"name":"ExchangeRateEmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint8","name":"decimals","type":"uint8"}],"name":"StrategyTokenSet","type":"event"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"explanation","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"shares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountShares","type":"uint256"}],"name":"sharesToUnderlying","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountShares","type":"uint256"}],"name":"sharesToUnderlyingView","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountUnderlying","type":"uint256"}],"name":"underlyingToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountUnderlying","type":"uint256"}],"name":"underlyingToSharesView","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"underlyingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"userUnderlying","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"userUnderlyingView","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amountShares","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deposit(address,uint256)":"47e7ef24","explanation()":"ab5921e1","shares(address)":"ce7c2ac2","sharesToUnderlying(uint256)":"f3e73875","sharesToUnderlyingView(uint256)":"7a8b2637","totalShares()":"3a98ef39","underlyingToShares(uint256)":"8c871019","underlyingToSharesView(uint256)":"e3dae51c","underlyingToken()":"2495a599","userUnderlying(address)":"8f6a6240","userUnderlyingView(address)":"553ca5f8","withdraw(address,address,uint256)":"d9caed12"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"ExchangeRateEmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"StrategyTokenSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"ExchangeRateEmitted(uint256)\":{\"details\":\"Tokens that do not have 18 decimals must have offchain services scale the exchange rate by the proper magnitude\",\"params\":{\"rate\":\"is the exchange rate in wad 18 decimals\"}},\"StrategyTokenSet(address,uint8)\":{\"params\":{\"decimals\":\"are the decimals of the ERC20 token in the strategy\",\"token\":\"is the ERC20 token of the strategy\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"_0\":\"newShares is the number of new shares issued at the current exchange ratio.\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"},\"returns\":{\"_0\":\"The amount of underlying tokens corresponding to the input `amountShares`\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"},\"returns\":{\"_0\":\"The amount of shares corresponding to the input `amountUnderlying`\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"},\"returns\":{\"_0\":\"The amount of underlying tokens corresponding to the input `amountShares`\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary significantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"},\"returns\":{\"_0\":\"The amount of shares corresponding to the input `amountUnderlying`\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"recipient\":\"is the address to receive the withdrawn funds\",\"token\":\"is the ERC20 token being transferred out\"}}},\"title\":\"Minimal interface for an `Strategy` contract.\",\"version\":1},\"userdoc\":{\"events\":{\"ExchangeRateEmitted(uint256)\":{\"notice\":\"Used to emit an event for the exchange rate between 1 share and underlying token in a strategy contract\"},\"StrategyTokenSet(address,uint8)\":{\"notice\":\"Used to emit the underlying token and its decimals on strategy creationtoken\"}},\"kind\":\"user\",\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this Strategy\"},\"explanation()\":{\"notice\":\"Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail.\"},\"shares(address)\":{\"notice\":\"convenience function for fetching the current total shares of `user` in this strategy, by querying the `strategyManager` contract\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in this Strategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underlying token for shares in this Strategy\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this Strategy, to the `recipient`'s address\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceCustom `Strategy` implementations may expand extensively on this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"IStrategyManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"StrategyAddedToDepositWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"StrategyRemovedFromDepositWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"StrategyWhitelisterChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IStrategy","name":"strategy","type":"address"},{"indexed":false,"internalType":"bool","name":"value","type":"bool"}],"name":"UpdatedThirdPartyTransfersForbidden","type":"event"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"addShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategiesToWhitelist","type":"address[]"},{"internalType":"bool[]","name":"thirdPartyTransfersForbiddenValues","type":"bool[]"}],"name":"addStrategiesToDepositWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositIntoStrategy","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"depositIntoStrategyWithSignature","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getDeposits","outputs":[{"internalType":"contract IStrategy[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategiesToRemoveFromWhitelist","type":"address[]"}],"name":"removeStrategiesFromDepositWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newStrategyWhitelister","type":"address"}],"name":"setStrategyWhitelister","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"bool","name":"value","type":"bool"}],"name":"setThirdPartyTransfersForbidden","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slasher","outputs":[{"internalType":"contract ISlasher","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"stakerStrategyListLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"stakerStrategyShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"strategyIsWhitelistedForDeposit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"strategyWhitelister","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"}],"name":"thirdPartyTransfersForbidden","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawSharesAsTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addShares(address,address,address,uint256)":"c4623ea1","addStrategiesToDepositWhitelist(address[],bool[])":"df5b3547","delegation()":"df5cf723","depositIntoStrategy(address,address,uint256)":"e7a050aa","depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)":"32e89ace","domainSeparator()":"f698da25","eigenPodManager()":"4665bcda","getDeposits(address)":"94f649dd","removeShares(address,address,uint256)":"8c80d4e5","removeStrategiesFromDepositWhitelist(address[])":"b5d8b5b8","setStrategyWhitelister(address)":"c6656702","setThirdPartyTransfersForbidden(address,bool)":"4e5a4263","slasher()":"b1344271","stakerStrategyListLength(address)":"8b8aac3c","stakerStrategyShares(address,address)":"7a7e0d92","strategyIsWhitelistedForDeposit(address)":"663c1de4","strategyWhitelister()":"967fc0d2","thirdPartyTransfersForbidden(address)":"9b4da03d","withdrawSharesAsTokens(address,address,uint256,address)":"c608c7f3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"StrategyWhitelisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"UpdatedThirdPartyTransfersForbidden\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"addShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToWhitelist\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"thirdPartyTransfersForbiddenValues\",\"type\":\"bool[]\"}],\"name\":\"addStrategiesToDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositIntoStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositIntoStrategyWithSignature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"removeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToRemoveFromWhitelist\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategyWhitelister\",\"type\":\"address\"}],\"name\":\"setStrategyWhitelister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setThirdPartyTransfersForbidden\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerStrategyListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"stakerStrategyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyIsWhitelistedForDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyWhitelister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"thirdPartyTransfersForbidden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawSharesAsTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Deposit(address,address,address,uint256)\":{\"params\":{\"shares\":\"Is the number of new shares `staker` has been granted in `strategy`.\",\"staker\":\"Is the staker who is depositing funds into EigenLayer.\",\"strategy\":\"Is the strategy that `staker` has deposited into.\",\"token\":\"Is the token that `staker` deposited.\"}}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToDepositWhitelist(address[],bool[])\":{\"params\":{\"strategiesToWhitelist\":\"Strategies that will be added to the `strategyIsWhitelistedForDeposit` mapping (if they aren't in it already)\",\"thirdPartyTransfersForbiddenValues\":\"bool values to set `thirdPartyTransfersForbidden` to for each strategy\"}},\"depositIntoStrategy(address,address,uint256)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen). WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy.\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targeting stakers who may be attempting to undelegate.Cannot be called if thirdPartyTransfersForbidden is set to true for this strategy  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in sync upon reentrancy\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the staker\",\"expiry\":\"the timestamp at which the signature expires\",\"signature\":\"is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract\",\"staker\":\"the staker that the deposited assets will be credited to\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"},\"returns\":{\"shares\":\"The amount of new shares in the `strategy` created as part of the action.\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.\"},\"getDeposits(address)\":{\"params\":{\"staker\":\"The staker of interest, whose deposits this function will fetch\"},\"returns\":{\"_0\":\"(staker's strategies, shares in these strategies)\"}},\"removeStrategiesFromDepositWhitelist(address[])\":{\"params\":{\"strategiesToRemoveFromWhitelist\":\"Strategies that will be removed to the `strategyIsWhitelistedForDeposit` mapping (if they are in it)\"}},\"setStrategyWhitelister(address)\":{\"params\":{\"newStrategyWhitelister\":\"new address for the `strategyWhitelister`.\"}},\"setThirdPartyTransfersForbidden(address,bool)\":{\"params\":{\"strategy\":\"The strategy to set `thirdPartyTransfersForbidden` value to\",\"value\":\"bool value to set `thirdPartyTransfersForbidden` to\"}}},\"title\":\"Interface for the primary entrypoint for funds into EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address,uint256)\":{\"notice\":\"Emitted when a new deposit occurs on behalf of `staker`.\"},\"StrategyAddedToDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is added to the approved list of strategies for deposit\"},\"StrategyRemovedFromDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is removed from the approved list of strategies for deposit\"},\"StrategyWhitelisterChanged(address,address)\":{\"notice\":\"Emitted when the `strategyWhitelister` is changed\"},\"UpdatedThirdPartyTransfersForbidden(address,bool)\":{\"notice\":\"Emitted when `thirdPartyTransfersForbidden` is updated for a strategy and value by the owner\"}},\"kind\":\"user\",\"methods\":{\"addShares(address,address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to award a Staker some shares that have passed through the withdrawal queue\"},\"addStrategiesToDepositWhitelist(address[],bool[])\":{\"notice\":\"Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\"},\"delegation()\":{\"notice\":\"Returns the single, central Delegation contract of EigenLayer\"},\"depositIntoStrategy(address,address,uint256)\":{\"notice\":\"Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `msg.sender`\"},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"notice\":\"Used for depositing an asset into the specified strategy with the resultant shares credited to `staker`, who must sign off on the action. Note that the assets are transferred out/from the `msg.sender`, not from the `staker`; this function is explicitly designed purely to help one address deposit 'for' another.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"Returns the EigenPodManager contract of EigenLayer\"},\"getDeposits(address)\":{\"notice\":\"Get all details on the staker's deposits and corresponding shares\"},\"removeShares(address,address,uint256)\":{\"notice\":\"Used by the DelegationManager to remove a Staker's shares from a particular strategy when entering the withdrawal queue\"},\"removeStrategiesFromDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\"},\"setStrategyWhitelister(address)\":{\"notice\":\"Owner-only function to change the `strategyWhitelister` address.\"},\"setThirdPartyTransfersForbidden(address,bool)\":{\"notice\":\"If true for a strategy, a user cannot depositIntoStrategyWithSignature into that strategy for another staker and also when performing DelegationManager.queueWithdrawals, a staker can only withdraw to themselves. Defaulted to false for all existing strategies.\"},\"slasher()\":{\"notice\":\"Returns the single, central Slasher contract of EigenLayer\"},\"stakerStrategyListLength(address)\":{\"notice\":\"Simple getter function that returns `stakerStrategyList[staker].length`.\"},\"stakerStrategyShares(address,address)\":{\"notice\":\"Returns the current shares of `user` in `strategy`\"},\"strategyIsWhitelistedForDeposit(address)\":{\"notice\":\"Returns bool for whether or not `strategy` is whitelisted for deposit\"},\"strategyWhitelister()\":{\"notice\":\"Returns the address of the `strategyWhitelister`\"},\"thirdPartyTransfersForbidden(address)\":{\"notice\":\"Returns bool for whether or not `strategy` enables credit transfers. i.e enabling depositIntoStrategyWithSignature calls or queueing withdrawals to a different address than the staker.\"},\"withdrawSharesAsTokens(address,address,uint256,address)\":{\"notice\":\"Used by the DelegationManager to convert withdrawn shares to tokens and send them to a recipient\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceSee the `StrategyManager` contract itself for implementation details.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":\"IStrategyManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"BeaconChainProofs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b079e88918403929b59b7f7136bfc7b4fb2e96a2e5701aefae66fcc8d628b00964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH26 0xE88918403929B59B7F7136BFC7B4FB2E96A2E5701AEFAE66FCC8 0xD6 0x28 0xB0 MULMOD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"532:14261:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b079e88918403929b59b7f7136bfc7b4fb2e96a2e5701aefae66fcc8d628b00964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH26 0xE88918403929B59B7F7136BFC7B4FB2E96A2E5701AEFAE66FCC8 0xD6 0x28 0xB0 MULMOD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"532:14261:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":\"BeaconChainProofs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"Endian":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220bbbf1c8e265e578aa2e8605f341a54abeac04a2f81ba76a47527baec9010c6b264736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xBF SHR DUP15 0x26 MCOPY JUMPI DUP11 LOG2 0xE8 PUSH1 0x5F CALLVALUE BYTE SLOAD 0xAB 0xEA 0xC0 BLOBBASEFEE 0x2F DUP2 0xBA PUSH23 0xA47527BAEC9010C6B264736F6C63430008180033000000 ","sourceMap":"62:1064:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220bbbf1c8e265e578aa2e8605f341a54abeac04a2f81ba76a47527baec9010c6b264736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xBF SHR DUP15 0x26 MCOPY JUMPI DUP11 LOG2 0xE8 PUSH1 0x5F CALLVALUE BYTE SLOAD 0xAB 0xEA 0xC0 BLOBBASEFEE 0x2F DUP2 0xBA PUSH23 0xA47527BAEC9010C6B264736F6C63430008180033000000 ","sourceMap":"62:1064:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":\"Endian\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"Merkle":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207b3d0bc4ef529b45d7b8780e6224f835a9553575a97aef6485dc43cb88bd64da64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x3D0BC4EF529B45D7B8780E6224F835A9553575A97AEF6485DC43CB88 0xBD PUSH5 0xDA64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"815:6305:32:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207b3d0bc4ef529b45d7b8780e6224f835a9553575a97aef6485dc43cb88bd64da64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x3D0BC4EF529B45D7B8780E6224F835A9553575A97AEF6485DC43CB88 0xBD PUSH5 0xDA64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"815:6305:32:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":\"Merkle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}